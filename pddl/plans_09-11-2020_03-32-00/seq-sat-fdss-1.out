INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/translate/translate.py domain.pddl task.pddl --sas-file plans/seq-sat-fdss-1.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.003s wall-clock]
Generated 13 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
1604 relevant atoms
1387 auxiliary atoms
2991 final queue length
3870 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.030s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
4 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
61 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.017s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.007s wall-clock]
Reordering and filtering variables...
62 of 62 variables necessary.
0 of 1 mutex groups necessary.
574 of 574 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 62
Translator derived variables: 0
Translator facts: 183
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 574
Translator axioms: 0
Translator task size: 3807
Translator peak memory: 245900 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.070s CPU, 0.067s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search portfolio: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/driver/portfolios/seq_sat_fdss_1.py
Exit codes: <generator object run_sat at 0x7fa33be4fc10>
remaining time: 1800.0
config 0: relative time 49, remaining 1519
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--search', 'lazy_greedy([hff,hcg],preferred=[hff,hcg],cost_type=one,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 58.064516129032256s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(one))' --evaluator 'hcg=cg(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hcg],preferred=[hff,hcg],cost_type=one,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0.000990553s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting lazy best first search, (real) bound = 2147483647
New best heuristic value for cg(transform = adapt_costs(one)): 50
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 50
Initial heuristic value for ff(transform = adapt_costs(one)): 33
New best heuristic value for cg(transform = adapt_costs(one)): 44
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 38
g=2, 3 evaluated, 2 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 32
g=3, 4 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 26
g=4, 6 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 20
g=5, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=6, 8 evaluated, 7 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 10
g=7, 11 evaluated, 10 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 24 evaluated, 23 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 27 evaluated, 26 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 28 evaluated, 27 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 29 evaluated, 28 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 30 evaluated, 29 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 31 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 32 evaluated, 31 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 33 evaluated, 32 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 34 evaluated, 33 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 36 evaluated, 35 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 37 evaluated, 36 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=23, 42 evaluated, 41 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 9
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=24, 44 evaluated, 43 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 8
g=25, 45 evaluated, 44 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=25, 46 evaluated, 45 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 7
g=26, 47 evaluated, 46 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 5
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=73, 4922 evaluated, 4921 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=79, 5025 evaluated, 5024 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 4
g=111, 351919 evaluated, 351918 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=114, 351942 evaluated, 351941 expanded
Peak memory: 150544 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1742.1
config 1: relative time 171, remaining 1470
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=ff(transform=adapt_costs(one))', '--search', 'lazy_greedy([h],preferred=[h],cost_type=one,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 202.6524489795918s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'lazy_greedy([h],preferred=[h],cost_type=one,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0.000999638s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting lazy best first search, (real) bound = 2147483647
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 33
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 15 evaluated, 14 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 17 evaluated, 16 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 18 evaluated, 17 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 19 evaluated, 18 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 20 evaluated, 19 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 21 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 22 evaluated, 21 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 23 evaluated, 22 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 24 evaluated, 23 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 25 evaluated, 24 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 26 evaluated, 25 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=23, 31 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=24, 33 evaluated, 32 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=25, 35 evaluated, 34 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=73, 4609 evaluated, 4608 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=79, 4776 evaluated, 4775 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=123, 320611 evaluated, 320610 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=204, 2968454 evaluated, 2968453 expanded
Peak memory: 863420 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1540.3799999999999
config 2: relative time 27, remaining 1299
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcea=cea(transform=adapt_costs(one))', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--search', 'lazy_greedy([hcea,hcg],preferred=[hcea,hcg],cost_type=one,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 32.01713625866051s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcea=cea(transform=adapt_costs(one))' --evaluator 'hcg=cg(transform=adapt_costs(one))' --search 'lazy_greedy([hcea,hcg],preferred=[hcea,hcg],cost_type=one,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting lazy best first search, (real) bound = 2147483647
New best heuristic value for cg(transform = adapt_costs(one)): 50
New best heuristic value for cea(transform = adapt_costs(one)): 436
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 50
Initial heuristic value for cea(transform = adapt_costs(one)): 436
New best heuristic value for cg(transform = adapt_costs(one)): 44
New best heuristic value for cea(transform = adapt_costs(one)): 357
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 38
g=2, 3 evaluated, 2 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 32
g=3, 4 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 26
g=4, 6 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 20
g=5, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=6, 9 evaluated, 8 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 10
g=7, 12 evaluated, 11 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 311
g=13, 32 evaluated, 31 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 274
g=14, 34 evaluated, 33 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 249
g=15, 35 evaluated, 34 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 236
g=16, 37 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 235
g=17, 38 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 225
g=15, 52 evaluated, 51 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 206
g=16, 54 evaluated, 53 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 199
g=17, 55 evaluated, 54 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 177
g=15, 68 evaluated, 67 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 134
g=16, 69 evaluated, 68 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 97
g=17, 70 evaluated, 69 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 66
g=18, 71 evaluated, 70 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 41
g=19, 72 evaluated, 71 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 34
g=20, 73 evaluated, 72 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 29
g=21, 75 evaluated, 74 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 20
g=22, 76 evaluated, 75 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 7
New best heuristic value for cea(transform = adapt_costs(one)): 9
g=23, 77 evaluated, 76 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 8
g=56, 3015 evaluated, 3014 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 6
New best heuristic value for cea(transform = adapt_costs(one)): 6
g=57, 3016 evaluated, 3015 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 5
g=58, 3017 evaluated, 3016 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 4
New best heuristic value for cea(transform = adapt_costs(one)): 5
g=116, 97322 evaluated, 97321 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 4
g=117, 97323 evaluated, 97322 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 3
New best heuristic value for cea(transform = adapt_costs(one)): 3
g=119, 97349 evaluated, 97348 expanded
Peak memory: 61208 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1508.4299999999998
config 3: relative time 340, remaining 1272
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=ff(transform=adapt_costs(one))', '--search', 'lazy_wastar([h],w=3,preferred=[h],cost_type=one,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 403.1966981132075s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'lazy_wastar([h],w=3,preferred=[h],cost_type=one,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting lazy best first search, (real) bound = 2147483647
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 33
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 15 evaluated, 14 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 17 evaluated, 16 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 18 evaluated, 17 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 19 evaluated, 18 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 20 evaluated, 19 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 21 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 22 evaluated, 21 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 23 evaluated, 22 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 24 evaluated, 23 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 25 evaluated, 24 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 26 evaluated, 25 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=23, 31 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=24, 33 evaluated, 32 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=25, 35 evaluated, 34 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=55, 6192 evaluated, 6191 expanded, 2545 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=59, 6407 evaluated, 6406 expanded, 2582 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=100, 3185548 evaluated, 3185547 expanded, 1684348 reopened
Peak memory: 1189128 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1106.02
config 4: relative time 76, remaining 932
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--search', 'eager_greedy([hff,hcg],preferred=[hff,hcg],cost_type=one,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 90.1904721030043s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(one))' --evaluator 'hcg=cg(transform=adapt_costs(one))' --search 'eager_greedy([hff,hcg],preferred=[hff,hcg],cost_type=one,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0.00100034s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search without reopening closed nodes, (real) bound = 2147483647
New best heuristic value for cg(transform = adapt_costs(one)): 50
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 50
Initial heuristic value for ff(transform = adapt_costs(one)): 33
pruning method: none
New best heuristic value for cg(transform = adapt_costs(one)): 44
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 38
g=2, 3 evaluated, 2 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 32
g=3, 5 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 26
g=4, 6 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 20
g=5, 7 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=6, 8 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 10
g=7, 12 evaluated, 8 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 35 evaluated, 27 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 38 evaluated, 29 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 42 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 46 evaluated, 31 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 50 evaluated, 32 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 53 evaluated, 33 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 57 evaluated, 34 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 61 evaluated, 35 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 64 evaluated, 36 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 68 evaluated, 37 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 74 evaluated, 40 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=21, 83 evaluated, 42 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=21, 86 evaluated, 42 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=22, 89 evaluated, 43 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 5
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=59, 3158 evaluated, 2757 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=65, 3424 evaluated, 2912 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 4
g=99, 41261 evaluated, 36752 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=101, 41274 evaluated, 36754 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 3
g=102, 41300 evaluated, 36762 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=154, 689825 evaluated, 625635 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 2
g=154, 689881 evaluated, 625668 expanded
Peak memory: 134956 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1016.1599999999999
config 5: relative time 88, remaining 856
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=ff(transform=adapt_costs(one))', '--search', 'eager_greedy([h],preferred=[h],cost_type=one,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 104.46504672897194s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager_greedy([h],preferred=[h],cost_type=one,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0.00100652s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search without reopening closed nodes, (real) bound = 2147483647
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 33
pruning method: none
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 24 evaluated, 16 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 27 evaluated, 17 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 31 evaluated, 18 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 35 evaluated, 19 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 39 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 42 evaluated, 21 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 46 evaluated, 22 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 50 evaluated, 23 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 53 evaluated, 24 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 57 evaluated, 25 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 61 evaluated, 26 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=21, 73 evaluated, 29 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=21, 76 evaluated, 29 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=22, 79 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=59, 2972 evaluated, 2436 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=65, 3234 evaluated, 2576 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=101, 37573 evaluated, 32412 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=152, 883980 evaluated, 781677 expanded
Peak memory: 231704 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 912.3
config 6: relative time 90, remaining 768
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--evaluator', 'hadd=add(transform=adapt_costs(one))', '--search', 'eager_greedy([hff,hadd],preferred=[hff,hadd],cost_type=one,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 106.91015625s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(one))' --evaluator 'hadd=add(transform=adapt_costs(one))' --search 'eager_greedy([hff,hadd],preferred=[hff,hadd],cost_type=one,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0.00100277s
Initializing additive heuristic...
Initializing FF heuristic...
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search without reopening closed nodes, (real) bound = 2147483647
New best heuristic value for add(transform = adapt_costs(one)): 436
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for add(transform = adapt_costs(one)): 436
Initial heuristic value for ff(transform = adapt_costs(one)): 33
pruning method: none
New best heuristic value for add(transform = adapt_costs(one)): 357
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 28 evaluated, 18 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 31 evaluated, 19 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 35 evaluated, 20 expanded
New best heuristic value for add(transform = adapt_costs(one)): 342
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 39 evaluated, 21 expanded
New best heuristic value for add(transform = adapt_costs(one)): 299
g=13, 42 evaluated, 22 expanded
New best heuristic value for add(transform = adapt_costs(one)): 281
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 43 evaluated, 22 expanded
New best heuristic value for add(transform = adapt_costs(one)): 226
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 46 evaluated, 23 expanded
New best heuristic value for add(transform = adapt_costs(one)): 195
g=15, 49 evaluated, 24 expanded
New best heuristic value for add(transform = adapt_costs(one)): 177
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 50 evaluated, 24 expanded
New best heuristic value for add(transform = adapt_costs(one)): 134
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 54 evaluated, 25 expanded
New best heuristic value for add(transform = adapt_costs(one)): 97
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 57 evaluated, 26 expanded
New best heuristic value for add(transform = adapt_costs(one)): 84
g=18, 60 evaluated, 27 expanded
New best heuristic value for add(transform = adapt_costs(one)): 66
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 61 evaluated, 27 expanded
New best heuristic value for add(transform = adapt_costs(one)): 59
g=19, 64 evaluated, 28 expanded
New best heuristic value for add(transform = adapt_costs(one)): 41
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 65 evaluated, 28 expanded
New best heuristic value for add(transform = adapt_costs(one)): 40
g=20, 67 evaluated, 29 expanded
New best heuristic value for add(transform = adapt_costs(one)): 34
g=20, 68 evaluated, 29 expanded
New best heuristic value for add(transform = adapt_costs(one)): 22
g=20, 70 evaluated, 29 expanded
New best heuristic value for add(transform = adapt_costs(one)): 21
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=21, 74 evaluated, 30 expanded
New best heuristic value for add(transform = adapt_costs(one)): 9
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=21, 77 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=22, 80 evaluated, 31 expanded
New best heuristic value for add(transform = adapt_costs(one)): 6
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=59, 2796 evaluated, 2314 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=73, 2999 evaluated, 2419 expanded
New best heuristic value for add(transform = adapt_costs(one)): 5
g=111, 21786 evaluated, 19077 expanded
New best heuristic value for add(transform = adapt_costs(one)): 4
g=112, 21791 evaluated, 19078 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=113, 21799 evaluated, 19079 expanded
New best heuristic value for add(transform = adapt_costs(one)): 3
g=114, 21813 evaluated, 19086 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=150, 237588 evaluated, 212195 expanded
New best heuristic value for add(transform = adapt_costs(one)): 2
g=147, 237651 evaluated, 212222 expanded
New best heuristic value for add(transform = adapt_costs(one)): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
g=182, 1071110 evaluated, 958545 expanded
New best heuristic value for add(transform = adapt_costs(one)): 0
New best heuristic value for ff(transform = adapt_costs(one)): 0
g=220, 1833127 evaluated, 1593254 expanded
Solution found!
Actual search time: 55.2638s
walk p8-12 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
push p7-6 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-6 (1)
walk p7-7 p7-8 (1)
walk p7-8 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
push p4-9 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
push p7-7 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-17 (1)
push p7-18 p7-19 p6-19 (1)
push p7-19 p6-19 p6-20 (1)
walk p6-19 p7-19 (1)
walk p7-19 p7-18 (1)
push p7-18 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
push p7-18 p7-19 p7-20 (1)
push p7-19 p7-20 p7-19 (1)
push p7-20 p6-20 p7-20 (1)
walk p6-20 p6-19 (1)
walk p6-19 p6-18 (1)
walk p6-18 p6-17 (1)
walk p6-17 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
walk p4-9 p4-8 (1)
walk p4-8 p4-7 (1)
push p4-7 p3-7 p4-7 (1)
push p3-7 p4-7 p4-8 (1)
push p4-7 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p8-18 (1)
push p7-18 p7-19 p8-19 (1)
push p7-19 p7-20 p6-20 (1)
walk p7-20 p8-20 (1)
push p8-20 p8-19 p8-20 (1)
push p8-19 p8-18 p7-18 (1)
push p8-18 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
push p5-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p6-18 p6-19 (1)
walk p6-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p7-4 (1)
walk p7-4 p7-3 (1)
push p7-3 p7-2 p7-3 (1)
push p7-2 p7-3 p7-4 (1)
push p7-3 p7-4 p7-5 (1)
push p7-4 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p7-19 p7-20 (1)
push p7-19 p6-19 p7-19 (1)
push p6-19 p6-18 p6-19 (1)
walk p6-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
walk p5-5 p4-5 (1)
walk p4-5 p3-5 (1)
push p3-5 p2-5 p3-5 (1)
push p2-5 p3-5 p3-6 (1)
push p3-5 p3-6 p3-7 (1)
push p3-6 p3-7 p4-7 (1)
push p3-7 p4-7 p4-8 (1)
push p4-7 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p7-19 p8-19 (1)
push p7-19 p6-19 p7-19 (1)
push p6-19 p6-18 p6-19 (1)
Plan length: 210 step(s).
Plan cost: 210
Expanded 1593256 state(s).
Reopened 0 state(s).
Evaluated 1833129 state(s).
Evaluations: 6852768
Generated 6186741 state(s).
Dead ends: 0 state(s).
Number of registered states: 1833129
Int hash set load factor: 1833129/4194304 = 0.437052
Int hash set resizes: 22
Search time: 55.2638s
Total time: 55.2697s
Solution found.
Peak memory: 121692 KB
exitcode: 0

plan manager: found new plan with cost 210
remaining time: 857.02
config 7: relative time 56, remaining 678
g bound: 210
next plan number: 2
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=cea(transform=adapt_costs(one))', '--search', 'lazy_greedy([h],preferred=[h],cost_type=one,bound=210)', '--internal-previous-portfolio-plans', '1', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 70.78631268436577s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=cea(transform=adapt_costs(one))' --search 'lazy_greedy([h],preferred=[h],cost_type=one,bound=210)' --internal-previous-portfolio-plans 1 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting lazy best first search, (real) bound = 210
New best heuristic value for cea(transform = adapt_costs(one)): 436
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cea(transform = adapt_costs(one)): 436
New best heuristic value for cea(transform = adapt_costs(one)): 357
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 311
g=13, 30 evaluated, 29 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 274
g=14, 32 evaluated, 31 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 249
g=15, 33 evaluated, 32 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 236
g=16, 35 evaluated, 34 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 235
g=17, 36 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 225
g=15, 49 evaluated, 48 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 206
g=16, 51 evaluated, 50 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 199
g=17, 52 evaluated, 51 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 177
g=15, 62 evaluated, 61 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 134
g=16, 63 evaluated, 62 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 97
g=17, 64 evaluated, 63 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 66
g=18, 65 evaluated, 64 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 41
g=19, 66 evaluated, 65 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 34
g=20, 67 evaluated, 66 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 29
g=21, 69 evaluated, 68 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 20
g=22, 70 evaluated, 69 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 9
g=23, 71 evaluated, 70 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 8
g=56, 2914 evaluated, 2913 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 6
g=57, 2915 evaluated, 2914 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 5
g=122, 92840 evaluated, 92839 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 4
g=123, 92841 evaluated, 92840 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 3
g=125, 92850 evaluated, 92849 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 2
g=186, 263415 evaluated, 263414 expanded
Peak memory: 140144 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 787.1399999999999
config 8: relative time 73, remaining 622
g bound: 210
next plan number: 2
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--evaluator', 'hcea=cea(transform=adapt_costs(one))', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--search', 'eager_greedy([hff,hcea,hcg],preferred=[hff,hcea,hcg],cost_type=one,bound=210)', '--internal-previous-portfolio-plans', '1', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 92.38138263665594s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(one))' --evaluator 'hcea=cea(transform=adapt_costs(one))' --evaluator 'hcg=cg(transform=adapt_costs(one))' --search 'eager_greedy([hff,hcea,hcg],preferred=[hff,hcea,hcg],cost_type=one,bound=210)' --internal-previous-portfolio-plans 1 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0.00100339s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing context-enhanced additive heuristic...
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search without reopening closed nodes, (real) bound = 210
New best heuristic value for cg(transform = adapt_costs(one)): 50
New best heuristic value for cea(transform = adapt_costs(one)): 436
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 50
Initial heuristic value for cea(transform = adapt_costs(one)): 436
Initial heuristic value for ff(transform = adapt_costs(one)): 33
pruning method: none
New best heuristic value for cg(transform = adapt_costs(one)): 44
New best heuristic value for cea(transform = adapt_costs(one)): 357
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 38
g=2, 3 evaluated, 2 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 32
g=3, 5 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 26
g=4, 6 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 20
g=5, 7 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=6, 8 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 10
g=7, 12 evaluated, 8 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 36 evaluated, 29 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 40 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 44 evaluated, 31 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 342
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 49 evaluated, 32 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 299
g=13, 52 evaluated, 33 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 281
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 53 evaluated, 33 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 226
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 56 evaluated, 34 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 195
g=15, 59 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 177
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 60 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 134
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 64 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 97
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 67 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 84
g=18, 70 evaluated, 38 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 66
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 71 evaluated, 38 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 59
g=19, 74 evaluated, 39 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 41
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 75 evaluated, 39 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 40
g=20, 77 evaluated, 40 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 34
g=20, 78 evaluated, 40 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 22
g=20, 80 evaluated, 40 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 21
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=21, 84 evaluated, 41 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 7
New best heuristic value for cea(transform = adapt_costs(one)): 9
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=21, 87 evaluated, 41 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=22, 90 evaluated, 42 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 8
g=48, 2675 evaluated, 2322 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 6
New best heuristic value for cea(transform = adapt_costs(one)): 7
g=49, 2762 evaluated, 2351 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 5
New best heuristic value for cea(transform = adapt_costs(one)): 6
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=49, 2763 evaluated, 2351 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=53, 2969 evaluated, 2472 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 5
g=84, 38504 evaluated, 34564 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 4
New best heuristic value for cea(transform = adapt_costs(one)): 4
g=85, 38604 evaluated, 34588 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 3
New best heuristic value for cea(transform = adapt_costs(one)): 3
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=86, 38613 evaluated, 34590 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 2
New best heuristic value for cea(transform = adapt_costs(one)): 2
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=125, 419458 evaluated, 378578 expanded
Peak memory: 81888 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 695.3
config 9: relative time 50, remaining 549
g bound: 210
next plan number: 2
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=add(transform=adapt_costs(one))', '--search', 'lazy_wastar([h],w=3,preferred=[h],cost_type=one,bound=210)', '--internal-previous-portfolio-plans', '1', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 63.32422586520947s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=add(transform=adapt_costs(one))' --search 'lazy_wastar([h],w=3,preferred=[h],cost_type=one,bound=210)' --internal-previous-portfolio-plans 1 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0.0010031s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting lazy best first search, (real) bound = 210
New best heuristic value for add(transform = adapt_costs(one)): 436
g=0, 1 evaluated, 0 expanded
Initial heuristic value for add(transform = adapt_costs(one)): 436
New best heuristic value for add(transform = adapt_costs(one)): 357
g=1, 2 evaluated, 1 expanded
New best heuristic value for add(transform = adapt_costs(one)): 353
g=13, 24 evaluated, 23 expanded
New best heuristic value for add(transform = adapt_costs(one)): 328
g=14, 25 evaluated, 24 expanded
New best heuristic value for add(transform = adapt_costs(one)): 315
g=15, 26 evaluated, 25 expanded
New best heuristic value for add(transform = adapt_costs(one)): 314
g=16, 27 evaluated, 26 expanded
New best heuristic value for add(transform = adapt_costs(one)): 281
g=13, 39 evaluated, 38 expanded
New best heuristic value for add(transform = adapt_costs(one)): 226
g=14, 40 evaluated, 39 expanded
New best heuristic value for add(transform = adapt_costs(one)): 177
g=15, 41 evaluated, 40 expanded
New best heuristic value for add(transform = adapt_costs(one)): 134
g=16, 42 evaluated, 41 expanded
New best heuristic value for add(transform = adapt_costs(one)): 97
g=17, 43 evaluated, 42 expanded
New best heuristic value for add(transform = adapt_costs(one)): 66
g=18, 44 evaluated, 43 expanded
New best heuristic value for add(transform = adapt_costs(one)): 41
g=19, 45 evaluated, 44 expanded
New best heuristic value for add(transform = adapt_costs(one)): 22
g=20, 46 evaluated, 45 expanded
New best heuristic value for add(transform = adapt_costs(one)): 21
g=21, 49 evaluated, 48 expanded
New best heuristic value for add(transform = adapt_costs(one)): 20
g=22, 50 evaluated, 49 expanded
New best heuristic value for add(transform = adapt_costs(one)): 9
g=23, 51 evaluated, 50 expanded
New best heuristic value for add(transform = adapt_costs(one)): 8
g=62, 4238 evaluated, 4237 expanded, 570 reopened
New best heuristic value for add(transform = adapt_costs(one)): 6
g=63, 4241 evaluated, 4240 expanded, 570 reopened
New best heuristic value for add(transform = adapt_costs(one)): 5
g=90, 110292 evaluated, 110291 expanded, 41913 reopened
New best heuristic value for add(transform = adapt_costs(one)): 4
g=91, 110294 evaluated, 110293 expanded, 41913 reopened
New best heuristic value for add(transform = adapt_costs(one)): 3
g=93, 110304 evaluated, 110303 expanded, 41914 reopened
New best heuristic value for add(transform = adapt_costs(one)): 2
g=136, 1457868 evaluated, 1457867 expanded, 910945 reopened
New best heuristic value for add(transform = adapt_costs(one)): 1
g=171, 2955773 evaluated, 2955772 expanded, 1712334 reopened
Solution found!
Actual search time: 30.3533s
walk p8-12 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
push p4-9 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
push p7-6 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p6-17 (1)
push p7-17 p6-17 p6-18 (1)
push p6-17 p6-18 p7-18 (1)
walk p6-18 p6-19 (1)
push p6-19 p7-19 p7-20 (1)
push p7-19 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
walk p4-9 p4-8 (1)
walk p4-8 p4-7 (1)
push p4-7 p3-7 p4-7 (1)
push p3-7 p4-7 p4-8 (1)
push p4-7 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p6-18 p6-19 (1)
push p6-18 p6-19 p6-20 (1)
push p6-19 p7-19 p7-18 (1)
push p7-19 p7-20 p8-20 (1)
walk p7-20 p7-19 (1)
push p7-19 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
push p5-5 p4-5 p4-6 (1)
push p4-5 p4-6 p3-6 (1)
push p4-6 p3-6 p4-6 (1)
walk p3-6 p3-7 (1)
walk p3-7 p4-7 (1)
push p4-7 p4-6 p4-7 (1)
push p4-6 p4-7 p4-8 (1)
push p4-7 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p6-18 p6-19 (1)
walk p6-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p7-4 (1)
walk p7-4 p7-3 (1)
push p7-3 p7-2 p7-3 (1)
push p7-2 p7-3 p7-4 (1)
push p7-3 p7-4 p7-5 (1)
push p7-4 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p8-18 (1)
push p7-18 p8-18 p8-19 (1)
walk p8-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
walk p5-5 p4-5 (1)
walk p4-5 p3-5 (1)
push p3-5 p2-5 p3-5 (1)
push p2-5 p3-5 p3-6 (1)
push p3-5 p3-6 p3-7 (1)
push p3-6 p3-7 p4-7 (1)
push p3-7 p4-7 p4-8 (1)
push p4-7 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p7-19 p7-20 (1)
push p7-19 p6-19 p7-19 (1)
push p6-19 p6-18 p6-19 (1)
Plan length: 198 step(s).
Plan cost: 198
Expanded 4380009 state(s).
Reopened 2481806 state(s).
Evaluated 4380010 state(s).
Evaluations: 1898204
Generated 17476287 state(s).
Dead ends: 0 state(s).
Number of registered states: 1898204
Int hash set load factor: 1898204/4194304 = 0.452567
Int hash set resizes: 22
Search time: 30.3533s
Total time: 30.3583s
Solution found.
Peak memory: 129960 KB
exitcode: 0

plan manager: found new plan with cost 198
remaining time: 664.9200000000001
config 10: relative time 84, remaining 499
g bound: 198
next plan number: 3
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=cea(transform=adapt_costs(one))', '--search', 'eager_greedy([h],preferred=[h],cost_type=one,bound=198)', '--internal-previous-portfolio-plans', '2', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 111.93042084168339s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=cea(transform=adapt_costs(one))' --search 'eager_greedy([h],preferred=[h],cost_type=one,bound=198)' --internal-previous-portfolio-plans 2 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search without reopening closed nodes, (real) bound = 198
New best heuristic value for cea(transform = adapt_costs(one)): 436
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cea(transform = adapt_costs(one)): 436
pruning method: none
New best heuristic value for cea(transform = adapt_costs(one)): 357
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 342
g=12, 49 evaluated, 28 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 299
g=13, 52 evaluated, 29 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 281
g=13, 53 evaluated, 29 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 226
g=14, 56 evaluated, 30 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 195
g=15, 59 evaluated, 31 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 177
g=15, 60 evaluated, 31 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 134
g=16, 64 evaluated, 32 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 97
g=17, 67 evaluated, 33 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 84
g=18, 70 evaluated, 34 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 66
g=18, 71 evaluated, 34 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 59
g=19, 74 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 41
g=19, 75 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 40
g=20, 77 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 34
g=20, 78 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 22
g=20, 80 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 21
g=21, 84 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 9
g=21, 87 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 8
g=52, 2374 evaluated, 1959 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 6
g=53, 2379 evaluated, 1960 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 5
g=102, 13119 evaluated, 11563 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 3
g=106, 13176 evaluated, 11582 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 2
g=155, 122517 evaluated, 110554 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 1
g=190, 273388 evaluated, 248882 expanded
Peak memory: 127580 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 554.1199999999999
config 11: relative time 166, remaining 415
g bound: 198
next plan number: 3
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=add(transform=adapt_costs(one))', '--search', 'eager(single(sum([g(),weight(h,3)])),preferred=[h],cost_type=one,bound=198)', '--internal-previous-portfolio-plans', '2', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 221.64799999999997s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=add(transform=adapt_costs(one))' --search 'eager(single(sum([g(),weight(h,3)])),preferred=[h],cost_type=one,bound=198)' --internal-previous-portfolio-plans 2 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search without reopening closed nodes, (real) bound = 198
New best heuristic value for add(transform = adapt_costs(one)): 436
g=0, 1 evaluated, 0 expanded
Initial heuristic value for add(transform = adapt_costs(one)): 436
pruning method: none
New best heuristic value for add(transform = adapt_costs(one)): 357
g=1, 2 evaluated, 1 expanded
New best heuristic value for add(transform = adapt_costs(one)): 342
g=12, 49 evaluated, 29 expanded
New best heuristic value for add(transform = adapt_costs(one)): 299
g=13, 52 evaluated, 30 expanded
New best heuristic value for add(transform = adapt_costs(one)): 281
g=13, 53 evaluated, 30 expanded
New best heuristic value for add(transform = adapt_costs(one)): 226
g=14, 56 evaluated, 31 expanded
New best heuristic value for add(transform = adapt_costs(one)): 195
g=15, 59 evaluated, 32 expanded
New best heuristic value for add(transform = adapt_costs(one)): 177
g=15, 60 evaluated, 32 expanded
New best heuristic value for add(transform = adapt_costs(one)): 134
g=16, 64 evaluated, 33 expanded
New best heuristic value for add(transform = adapt_costs(one)): 97
g=17, 67 evaluated, 34 expanded
New best heuristic value for add(transform = adapt_costs(one)): 84
g=18, 70 evaluated, 35 expanded
New best heuristic value for add(transform = adapt_costs(one)): 66
g=18, 71 evaluated, 35 expanded
New best heuristic value for add(transform = adapt_costs(one)): 59
g=19, 74 evaluated, 36 expanded
New best heuristic value for add(transform = adapt_costs(one)): 41
g=19, 75 evaluated, 36 expanded
New best heuristic value for add(transform = adapt_costs(one)): 40
g=20, 77 evaluated, 37 expanded
New best heuristic value for add(transform = adapt_costs(one)): 34
g=20, 78 evaluated, 37 expanded
New best heuristic value for add(transform = adapt_costs(one)): 22
g=20, 80 evaluated, 37 expanded
New best heuristic value for add(transform = adapt_costs(one)): 21
g=21, 84 evaluated, 38 expanded
New best heuristic value for add(transform = adapt_costs(one)): 9
g=21, 87 evaluated, 38 expanded
New best heuristic value for add(transform = adapt_costs(one)): 8
g=48, 2000 evaluated, 1629 expanded
New best heuristic value for add(transform = adapt_costs(one)): 7
g=49, 2042 evaluated, 1638 expanded
New best heuristic value for add(transform = adapt_costs(one)): 6
g=49, 2043 evaluated, 1638 expanded
New best heuristic value for add(transform = adapt_costs(one)): 5
g=84, 13737 evaluated, 11605 expanded
New best heuristic value for add(transform = adapt_costs(one)): 4
g=85, 13769 evaluated, 11610 expanded
New best heuristic value for add(transform = adapt_costs(one)): 3
g=86, 13804 evaluated, 11618 expanded
New best heuristic value for add(transform = adapt_costs(one)): 2
g=121, 122626 evaluated, 106681 expanded
New best heuristic value for add(transform = adapt_costs(one)): 1
g=157, 453972 evaluated, 389452 expanded
New best heuristic value for add(transform = adapt_costs(one)): 0
g=194, 966766 evaluated, 814295 expanded
Solution found!
Actual search time: 14.9518s
walk p8-12 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
push p7-6 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
push p4-9 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p7-19 p7-20 (1)
walk p7-19 p7-18 (1)
push p7-18 p6-18 p7-18 (1)
push p6-18 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
walk p4-9 p4-8 (1)
walk p4-8 p4-7 (1)
push p4-7 p3-7 p4-7 (1)
push p3-7 p4-7 p4-8 (1)
push p4-7 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p6-18 p6-19 (1)
push p6-18 p6-19 p6-20 (1)
walk p6-19 p6-18 (1)
walk p6-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
push p5-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p8-18 (1)
push p7-18 p8-18 p8-19 (1)
push p8-18 p8-19 p8-20 (1)
walk p8-19 p8-18 (1)
walk p8-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p7-4 (1)
walk p7-4 p7-3 (1)
push p7-3 p7-2 p7-3 (1)
push p7-2 p7-3 p7-4 (1)
push p7-3 p7-4 p7-5 (1)
push p7-4 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p6-18 p6-19 (1)
walk p6-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
walk p5-5 p4-5 (1)
walk p4-5 p3-5 (1)
push p3-5 p2-5 p3-5 (1)
push p2-5 p3-5 p4-5 (1)
push p3-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p8-17 (1)
push p7-17 p8-17 p8-18 (1)
push p8-17 p8-18 p8-19 (1)
Plan length: 192 step(s).
Plan cost: 192
Expanded 814296 state(s).
Reopened 0 state(s).
Evaluated 966767 state(s).
Evaluations: 1781062
Generated 3253733 state(s).
Dead ends: 0 state(s).
Number of registered states: 966767
Int hash set load factor: 966767/2097152 = 0.46099
Int hash set resizes: 21
Search time: 14.9518s
Total time: 14.9567s
Solution found.
Peak memory: 62528 KB
exitcode: 0

plan manager: found new plan with cost 192
remaining time: 539.1499999999999
config 12: relative time 87, remaining 249
g bound: 192
next plan number: 4
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=ff(transform=adapt_costs(one))', '--search', 'eager(single(sum([g(),weight(h,3)])),preferred=[h],cost_type=one,bound=192)', '--internal-previous-portfolio-plans', '3', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 188.37771084337345s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(single(sum([g(),weight(h,3)])),preferred=[h],cost_type=one,bound=192)' --internal-previous-portfolio-plans 3 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0.000998784s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search without reopening closed nodes, (real) bound = 192
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 33
pruning method: none
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 25 evaluated, 17 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 29 evaluated, 18 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 33 evaluated, 19 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 38 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 42 evaluated, 21 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 45 evaluated, 22 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 49 evaluated, 23 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 53 evaluated, 24 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 56 evaluated, 25 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 60 evaluated, 26 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 64 evaluated, 27 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=21, 76 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=21, 79 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=22, 82 evaluated, 31 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=49, 1754 evaluated, 1293 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=53, 2422 evaluated, 1757 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=87, 1029237 evaluated, 877005 expanded
Peak memory: 456656 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 351.41999999999985
config 13: relative time 73, remaining 162
g bound: 192
next plan number: 4
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=cg(transform=adapt_costs(one))', '--search', 'lazy_wastar([h],w=3,preferred=[h],cost_type=one,bound=192)', '--internal-previous-portfolio-plans', '3', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 158.35592592592585s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=cg(transform=adapt_costs(one))' --search 'lazy_wastar([h],w=3,preferred=[h],cost_type=one,bound=192)' --internal-previous-portfolio-plans 3 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0.00100399s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting lazy best first search, (real) bound = 192
New best heuristic value for cg(transform = adapt_costs(one)): 50
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 50
New best heuristic value for cg(transform = adapt_costs(one)): 44
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 38
g=2, 3 evaluated, 2 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 32
g=3, 4 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 26
g=4, 5 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 20
g=5, 6 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=6, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 12
g=8, 9 evaluated, 8 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 10
g=9, 10 evaluated, 9 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 9
g=22, 302 evaluated, 301 expanded, 81 reopened
New best heuristic value for cg(transform = adapt_costs(one)): 8
g=23, 303 evaluated, 302 expanded, 81 reopened
New best heuristic value for cg(transform = adapt_costs(one)): 7
g=23, 305 evaluated, 304 expanded, 81 reopened
New best heuristic value for cg(transform = adapt_costs(one)): 5
g=49, 5635 evaluated, 5634 expanded, 1810 reopened
New best heuristic value for cg(transform = adapt_costs(one)): 4
g=85, 56880 evaluated, 56879 expanded, 21961 reopened
New best heuristic value for cg(transform = adapt_costs(one)): 3
g=85, 56882 evaluated, 56881 expanded, 21961 reopened
New best heuristic value for cg(transform = adapt_costs(one)): 2
g=117, 411005 evaluated, 411004 expanded, 179304 reopened
New best heuristic value for cg(transform = adapt_costs(one)): 1
g=156, 1322799 evaluated, 1322798 expanded, 601197 reopened
Solution found!
Actual search time: 22.6355s
walk p8-12 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
push p7-6 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
push p4-9 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p6-17 (1)
push p7-17 p6-17 p6-18 (1)
push p6-17 p6-18 p6-19 (1)
push p6-18 p6-19 p6-20 (1)
push p6-19 p7-19 p8-19 (1)
push p7-19 p8-19 p8-20 (1)
walk p8-19 p8-18 (1)
walk p8-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
walk p4-9 p4-8 (1)
walk p4-8 p4-7 (1)
push p4-7 p3-7 p4-7 (1)
push p3-7 p4-7 p4-8 (1)
push p4-7 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
push p5-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p6-17 (1)
push p7-17 p6-17 p6-18 (1)
push p6-17 p6-18 p6-19 (1)
walk p6-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p7-4 (1)
walk p7-4 p7-3 (1)
push p7-3 p7-2 p7-3 (1)
push p7-2 p7-3 p7-4 (1)
push p7-3 p7-4 p7-5 (1)
push p7-4 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p8-17 (1)
push p7-17 p8-17 p8-18 (1)
push p8-17 p8-18 p8-19 (1)
walk p8-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
walk p5-5 p4-5 (1)
walk p4-5 p3-5 (1)
push p3-5 p2-5 p3-5 (1)
push p2-5 p3-5 p4-5 (1)
push p3-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p7-19 p7-20 (1)
push p7-19 p6-19 p7-19 (1)
push p6-19 p6-18 p6-19 (1)
Plan length: 190 step(s).
Plan cost: 190
Expanded 2702701 state(s).
Reopened 1298921 state(s).
Evaluated 2702702 state(s).
Evaluations: 1403781
Generated 10068467 state(s).
Dead ends: 0 state(s).
Number of registered states: 1403781
Int hash set load factor: 1403781/2097152 = 0.669375
Int hash set resizes: 21
Search time: 22.6355s
Total time: 22.6415s
Solution found.
Peak memory: 80024 KB
exitcode: 0

plan manager: found new plan with cost 190
remaining time: 328.77
config 14: relative time 89, remaining 89
g bound: 190
next plan number: 5
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=cg(transform=adapt_costs(one))', '--search', 'eager(single(sum([g(),weight(h,3)])),preferred=[h],cost_type=one,bound=190)', '--internal-previous-portfolio-plans', '4', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 328.77s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=cg(transform=adapt_costs(one))' --search 'eager(single(sum([g(),weight(h,3)])),preferred=[h],cost_type=one,bound=190)' --internal-previous-portfolio-plans 4 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0.00100141s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search without reopening closed nodes, (real) bound = 190
New best heuristic value for cg(transform = adapt_costs(one)): 50
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 50
pruning method: none
New best heuristic value for cg(transform = adapt_costs(one)): 44
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 38
g=2, 3 evaluated, 2 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 32
g=3, 5 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 26
g=4, 6 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 20
g=5, 7 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=6, 8 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 10
g=7, 11 evaluated, 7 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 7
g=21, 226 evaluated, 174 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 6
g=49, 3806 evaluated, 3287 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 5
g=49, 3807 evaluated, 3287 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 3
g=83, 30999 evaluated, 27605 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 2
g=117, 219647 evaluated, 198481 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 1
g=151, 710243 evaluated, 647158 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 0
g=189, 1558614 evaluated, 1426660 expanded
Solution found!
Actual search time: 30.4169s
walk p8-12 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
push p7-6 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
push p4-9 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p6-18 p6-19 (1)
push p6-18 p6-19 p6-20 (1)
push p6-19 p7-19 p7-20 (1)
push p7-19 p7-20 p8-20 (1)
walk p7-20 p7-19 (1)
walk p7-19 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
walk p4-9 p4-8 (1)
walk p4-8 p4-7 (1)
push p4-7 p3-7 p4-7 (1)
push p3-7 p4-7 p4-8 (1)
push p4-7 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
push p5-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p6-18 p6-19 (1)
walk p6-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p7-4 (1)
walk p7-4 p7-3 (1)
push p7-3 p7-2 p7-3 (1)
push p7-2 p7-3 p7-4 (1)
push p7-3 p7-4 p7-5 (1)
push p7-4 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p8-18 (1)
push p7-18 p8-18 p8-19 (1)
walk p8-18 p7-18 (1)
push p7-18 p7-19 p7-20 (1)
walk p7-19 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
walk p5-5 p4-5 (1)
walk p4-5 p3-5 (1)
push p3-5 p2-5 p3-5 (1)
push p2-5 p3-5 p4-5 (1)
push p3-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
Plan length: 189 step(s).
Plan cost: 189
Expanded 1426661 state(s).
Reopened 0 state(s).
Evaluated 1558614 state(s).
Evaluations: 2985274
Generated 5275431 state(s).
Dead ends: 0 state(s).
Number of registered states: 1558614
Int hash set load factor: 1558614/2097152 = 0.743205
Int hash set resizes: 21
Search time: 30.4169s
Total time: 30.4239s
Solution found.
Peak memory: 82372 KB
exitcode: 0

plan manager: found new plan with cost 189
Abort portfolio and run final config.
remaining time: 298.3399999999999
config 0: relative time 1, remaining 1
g bound: 189
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=ff(transform=adapt_costs(one))', '--search', 'iterated([eager(single(sum([g(),weight(h,3)])),preferred=[h],cost_type=one,bound=189)],bound=189,repeat_last=true)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-1.sas
INFO     search time limit: 298.3399999999999s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'iterated([eager(single(sum([g(),weight(h,3)])),preferred=[h],cost_type=one,bound=189)],bound=189,repeat_last=true)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-1.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0.00100409s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Starting search: eager(single(sum(list(g, weight(h, 3)))), preferred = list(h), cost_type = one, bound = 189)
Conducting best first search without reopening closed nodes, (real) bound = 189
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 33
pruning method: none
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 25 evaluated, 17 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 29 evaluated, 18 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 33 evaluated, 19 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 38 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 42 evaluated, 21 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 45 evaluated, 22 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 49 evaluated, 23 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 53 evaluated, 24 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 56 evaluated, 25 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 60 evaluated, 26 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 64 evaluated, 27 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=21, 76 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=21, 79 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=22, 82 evaluated, 31 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=49, 1754 evaluated, 1293 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=53, 2422 evaluated, 1757 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=87, 1029237 evaluated, 877005 expanded
Peak memory: 821032 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

search exit code: 2

