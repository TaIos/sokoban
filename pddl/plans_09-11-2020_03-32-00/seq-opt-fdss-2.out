INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/translate/translate.py domain.pddl task.pddl --sas-file plans/seq-opt-fdss-2.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.003s wall-clock]
Generated 13 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
1604 relevant atoms
1387 auxiliary atoms
2991 final queue length
3870 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.030s CPU, 0.034s wall-clock]
Computing fact groups...
Finding invariants...
4 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
61 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.018s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.007s wall-clock]
Reordering and filtering variables...
62 of 62 variables necessary.
0 of 1 mutex groups necessary.
574 of 574 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 62
Translator derived variables: 0
Translator facts: 183
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 574
Translator axioms: 0
Translator task size: 3807
Translator peak memory: 245900 KB
Writing output... [0.010s CPU, 0.002s wall-clock]
Done! [0.070s CPU, 0.069s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search portfolio: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/driver/portfolios/seq_opt_fdss_2.py
Exit codes: <generator object run_opt at 0x7f520454dc10>
remaining time: 1800.0
config 0: relative time 1, remaining 5
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--search', 'astar(merge_and_shrink(merge_strategy=merge_precomputed(merge_tree=linear(variable_order=reverse_level)),shrink_strategy=shrink_bisimulation(greedy=true),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=infinity,threshold_before_merge=1))', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-opt-fdss-2.sas
INFO     search time limit: 360.0s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --search 'astar(merge_and_shrink(merge_strategy=merge_precomputed(merge_tree=linear(variable_order=reverse_level)),shrink_strategy=shrink_bisimulation(greedy=true),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=infinity,threshold_before_merge=1))' --internal-plan-file sas_plan < plans/seq-opt-fdss-2.sas
reading input...
done reading input!
Initializing merge-and-shrink heuristic...
Running merge-and-shrink algorithm...
Merge strategy options:
Type: precomputed
Merge tree options: 
Type: linear
Update option: use random
Variable order type: by reverse level

Options related to size limits and shrinking: 
Transition system size limit: 2147483647
Transition system size limit right before merge: 2147483647
Threshold to trigger shrinking right before merge: 1

Pruning unreachable states: yes
Pruning irrelevant states: yes

Label reduction options:
Before merging: disabled
Before shrinking: enabled
Method: all transition systems with fixpoint computation
System order: random

Main loop max time in seconds: inf


Building atomic transition systems... 
M&S algorithm timer: 0.00198762s (after computation of atomic factors)

Starting main loop without a time limit.
building causal graph...done! [t=0s]
Next pair of indices: (0, 1)
M&S algorithm main loop timer: 0s (after computation of next merge)
M&S algorithm main loop timer: 0.044901s (after label reduction)
M&S algorithm main loop timer: 0.044901s (after shrinking)
M&S algorithm main loop timer: 0.044901s (after merging)

Next pair of indices: (62, 2)
M&S algorithm main loop timer: 0.044901s (after computation of next merge)
M&S algorithm main loop timer: 0.0968102s (after label reduction)
M&S algorithm main loop timer: 0.0968102s (after shrinking)
M&S algorithm main loop timer: 0.0968102s (after merging)

Next pair of indices: (63, 3)
M&S algorithm main loop timer: 0.0968102s (after computation of next merge)
M&S algorithm main loop timer: 0.132725s (after label reduction)
M&S algorithm main loop timer: 0.132725s (after shrinking)
M&S algorithm main loop timer: 0.132725s (after merging)

Next pair of indices: (64, 4)
M&S algorithm main loop timer: 0.132725s (after computation of next merge)
M&S algorithm main loop timer: 0.174644s (after label reduction)
M&S algorithm main loop timer: 0.174644s (after shrinking)
M&S algorithm main loop timer: 0.174644s (after merging)

Next pair of indices: (65, 5)
M&S algorithm main loop timer: 0.174644s (after computation of next merge)
M&S algorithm main loop timer: 0.209583s (after label reduction)
M&S algorithm main loop timer: 0.209583s (after shrinking)
M&S algorithm main loop timer: 0.209583s (after merging)

Next pair of indices: (66, 6)
M&S algorithm main loop timer: 0.209583s (after computation of next merge)
M&S algorithm main loop timer: 0.255484s (after label reduction)
M&S algorithm main loop timer: 0.255484s (after shrinking)
M&S algorithm main loop timer: 0.255484s (after merging)

Next pair of indices: (67, 7)
M&S algorithm main loop timer: 0.255484s (after computation of next merge)
M&S algorithm main loop timer: 0.304374s (after label reduction)
M&S algorithm main loop timer: 0.304374s (after shrinking)
M&S algorithm main loop timer: 0.304374s (after merging)

Next pair of indices: (68, 8)
M&S algorithm main loop timer: 0.304374s (after computation of next merge)
M&S algorithm main loop timer: 0.334326s (after label reduction)
M&S algorithm main loop timer: 0.334326s (after shrinking)
M&S algorithm main loop timer: 0.334326s (after merging)

Next pair of indices: (69, 9)
M&S algorithm main loop timer: 0.334326s (after computation of next merge)
M&S algorithm main loop timer: 0.369271s (after label reduction)
M&S algorithm main loop timer: 0.369271s (after shrinking)
M&S algorithm main loop timer: 0.369271s (after merging)

Next pair of indices: (70, 10)
M&S algorithm main loop timer: 0.369271s (after computation of next merge)
M&S algorithm main loop timer: 0.405205s (after label reduction)
M&S algorithm main loop timer: 0.405205s (after shrinking)
M&S algorithm main loop timer: 0.405205s (after merging)

Next pair of indices: (71, 11)
M&S algorithm main loop timer: 0.405205s (after computation of next merge)
M&S algorithm main loop timer: 0.439149s (after label reduction)
M&S algorithm main loop timer: 0.439149s (after shrinking)
M&S algorithm main loop timer: 0.439149s (after merging)

Next pair of indices: (72, 12)
M&S algorithm main loop timer: 0.439149s (after computation of next merge)
M&S algorithm main loop timer: 0.469096s (after label reduction)
M&S algorithm main loop timer: 0.469096s (after shrinking)
M&S algorithm main loop timer: 0.469096s (after merging)

Next pair of indices: (73, 13)
M&S algorithm main loop timer: 0.469096s (after computation of next merge)
M&S algorithm main loop timer: 0.493061s (after label reduction)
M&S algorithm main loop timer: 0.493061s (after shrinking)
M&S algorithm main loop timer: 0.493061s (after merging)

Next pair of indices: (74, 14)
M&S algorithm main loop timer: 0.493061s (after computation of next merge)
M&S algorithm main loop timer: 0.515017s (after label reduction)
M&S algorithm main loop timer: 0.515017s (after shrinking)
M&S algorithm main loop timer: 0.515017s (after merging)

Next pair of indices: (75, 15)
M&S algorithm main loop timer: 0.515017s (after computation of next merge)
M&S algorithm main loop timer: 0.534967s (after label reduction)
M&S algorithm main loop timer: 0.534967s (after shrinking)
M&S algorithm main loop timer: 0.534967s (after merging)

Next pair of indices: (76, 16)
M&S algorithm main loop timer: 0.534967s (after computation of next merge)
M&S algorithm main loop timer: 0.55294s (after label reduction)
M&S algorithm main loop timer: 0.55294s (after shrinking)
M&S algorithm main loop timer: 0.55294s (after merging)

Next pair of indices: (77, 17)
M&S algorithm main loop timer: 0.55294s (after computation of next merge)
M&S algorithm main loop timer: 0.576894s (after label reduction)
M&S algorithm main loop timer: 0.576894s (after shrinking)
M&S algorithm main loop timer: 0.576894s (after merging)

Next pair of indices: (78, 18)
M&S algorithm main loop timer: 0.576894s (after computation of next merge)
M&S algorithm main loop timer: 0.599843s (after label reduction)
M&S algorithm main loop timer: 0.599843s (after shrinking)
M&S algorithm main loop timer: 0.599843s (after merging)

Next pair of indices: (79, 19)
M&S algorithm main loop timer: 0.599843s (after computation of next merge)
M&S algorithm main loop timer: 0.616812s (after label reduction)
M&S algorithm main loop timer: 0.616812s (after shrinking)
M&S algorithm main loop timer: 0.616812s (after merging)

Next pair of indices: (80, 20)
M&S algorithm main loop timer: 0.616812s (after computation of next merge)
M&S algorithm main loop timer: 0.630785s (after label reduction)
M&S algorithm main loop timer: 0.630785s (after shrinking)
M&S algorithm main loop timer: 0.630785s (after merging)

Next pair of indices: (81, 21)
M&S algorithm main loop timer: 0.630785s (after computation of next merge)
M&S algorithm main loop timer: 0.646754s (after label reduction)
M&S algorithm main loop timer: 0.646754s (after shrinking)
M&S algorithm main loop timer: 0.646754s (after merging)

Next pair of indices: (82, 22)
M&S algorithm main loop timer: 0.646754s (after computation of next merge)
M&S algorithm main loop timer: 0.661735s (after label reduction)
M&S algorithm main loop timer: 0.662743s (after shrinking)
M&S algorithm main loop timer: 0.662743s (after merging)

Next pair of indices: (83, 23)
M&S algorithm main loop timer: 0.662743s (after computation of next merge)
M&S algorithm main loop timer: 0.676707s (after label reduction)
M&S algorithm main loop timer: 0.676707s (after shrinking)
M&S algorithm main loop timer: 0.676707s (after merging)

Next pair of indices: (84, 24)
M&S algorithm main loop timer: 0.676707s (after computation of next merge)
M&S algorithm main loop timer: 0.68768s (after label reduction)
M&S algorithm main loop timer: 0.68768s (after shrinking)
M&S algorithm main loop timer: 0.68768s (after merging)

Next pair of indices: (85, 25)
M&S algorithm main loop timer: 0.68768s (after computation of next merge)
M&S algorithm main loop timer: 0.698661s (after label reduction)
M&S algorithm main loop timer: 0.698661s (after shrinking)
M&S algorithm main loop timer: 0.698661s (after merging)

Next pair of indices: (86, 26)
M&S algorithm main loop timer: 0.698661s (after computation of next merge)
M&S algorithm main loop timer: 0.710644s (after label reduction)
M&S algorithm main loop timer: 0.710644s (after shrinking)
M&S algorithm main loop timer: 0.710644s (after merging)

Next pair of indices: (87, 27)
M&S algorithm main loop timer: 0.710644s (after computation of next merge)
M&S algorithm main loop timer: 0.720622s (after label reduction)
M&S algorithm main loop timer: 0.720622s (after shrinking)
M&S algorithm main loop timer: 0.720622s (after merging)

Next pair of indices: (88, 28)
M&S algorithm main loop timer: 0.720622s (after computation of next merge)
M&S algorithm main loop timer: 0.729603s (after label reduction)
M&S algorithm main loop timer: 0.729603s (after shrinking)
M&S algorithm main loop timer: 0.729603s (after merging)

Next pair of indices: (89, 29)
M&S algorithm main loop timer: 0.729603s (after computation of next merge)
M&S algorithm main loop timer: 0.738591s (after label reduction)
M&S algorithm main loop timer: 0.738591s (after shrinking)
M&S algorithm main loop timer: 0.738591s (after merging)

Next pair of indices: (90, 30)
M&S algorithm main loop timer: 0.738591s (after computation of next merge)
M&S algorithm main loop timer: 0.74957s (after label reduction)
M&S algorithm main loop timer: 0.74957s (after shrinking)
M&S algorithm main loop timer: 0.74957s (after merging)

Next pair of indices: (91, 31)
M&S algorithm main loop timer: 0.74957s (after computation of next merge)
M&S algorithm main loop timer: 0.75656s (after label reduction)
M&S algorithm main loop timer: 0.75656s (after shrinking)
M&S algorithm main loop timer: 0.75656s (after merging)

Next pair of indices: (92, 32)
M&S algorithm main loop timer: 0.75656s (after computation of next merge)
M&S algorithm main loop timer: 0.765543s (after label reduction)
M&S algorithm main loop timer: 0.765543s (after shrinking)
M&S algorithm main loop timer: 0.765543s (after merging)

Next pair of indices: (93, 33)
M&S algorithm main loop timer: 0.765543s (after computation of next merge)
M&S algorithm main loop timer: 0.772524s (after label reduction)
M&S algorithm main loop timer: 0.772524s (after shrinking)
M&S algorithm main loop timer: 0.772524s (after merging)

Next pair of indices: (94, 34)
M&S algorithm main loop timer: 0.772524s (after computation of next merge)
M&S algorithm main loop timer: 0.779506s (after label reduction)
M&S algorithm main loop timer: 0.779506s (after shrinking)
M&S algorithm main loop timer: 0.779506s (after merging)

Next pair of indices: (95, 35)
M&S algorithm main loop timer: 0.779506s (after computation of next merge)
M&S algorithm main loop timer: 0.785486s (after label reduction)
M&S algorithm main loop timer: 0.785486s (after shrinking)
M&S algorithm main loop timer: 0.785486s (after merging)

Next pair of indices: (96, 36)
M&S algorithm main loop timer: 0.785486s (after computation of next merge)
M&S algorithm main loop timer: 0.790478s (after label reduction)
M&S algorithm main loop timer: 0.790478s (after shrinking)
M&S algorithm main loop timer: 0.790478s (after merging)

Next pair of indices: (97, 37)
M&S algorithm main loop timer: 0.790478s (after computation of next merge)
M&S algorithm main loop timer: 0.794477s (after label reduction)
M&S algorithm main loop timer: 0.794477s (after shrinking)
M&S algorithm main loop timer: 0.794477s (after merging)

Next pair of indices: (98, 38)
M&S algorithm main loop timer: 0.794477s (after computation of next merge)
M&S algorithm main loop timer: 0.798465s (after label reduction)
M&S algorithm main loop timer: 0.798465s (after shrinking)
M&S algorithm main loop timer: 0.798465s (after merging)

Next pair of indices: (99, 39)
M&S algorithm main loop timer: 0.798465s (after computation of next merge)
M&S algorithm main loop timer: 0.802463s (after label reduction)
M&S algorithm main loop timer: 0.802463s (after shrinking)
M&S algorithm main loop timer: 0.802463s (after merging)

Next pair of indices: (100, 40)
M&S algorithm main loop timer: 0.802463s (after computation of next merge)
M&S algorithm main loop timer: 0.80546s (after label reduction)
M&S algorithm main loop timer: 0.80546s (after shrinking)
M&S algorithm main loop timer: 0.80546s (after merging)

Next pair of indices: (101, 41)
M&S algorithm main loop timer: 0.80546s (after computation of next merge)
M&S algorithm main loop timer: 0.807456s (after label reduction)
M&S algorithm main loop timer: 0.807456s (after shrinking)
M&S algorithm main loop timer: 0.807456s (after merging)

Next pair of indices: (102, 42)
M&S algorithm main loop timer: 0.807456s (after computation of next merge)
M&S algorithm main loop timer: 0.810446s (after label reduction)
M&S algorithm main loop timer: 0.810446s (after shrinking)
M&S algorithm main loop timer: 0.810446s (after merging)

Next pair of indices: (103, 43)
M&S algorithm main loop timer: 0.810446s (after computation of next merge)
M&S algorithm main loop timer: 0.812453s (after label reduction)
M&S algorithm main loop timer: 0.812453s (after shrinking)
M&S algorithm main loop timer: 0.812453s (after merging)

Next pair of indices: (104, 44)
M&S algorithm main loop timer: 0.812453s (after computation of next merge)
M&S algorithm main loop timer: 0.814438s (after label reduction)
M&S algorithm main loop timer: 0.814438s (after shrinking)
M&S algorithm main loop timer: 0.814438s (after merging)

Next pair of indices: (105, 45)
M&S algorithm main loop timer: 0.814438s (after computation of next merge)
M&S algorithm main loop timer: 0.816434s (after label reduction)
M&S algorithm main loop timer: 0.816434s (after shrinking)
M&S algorithm main loop timer: 0.816434s (after merging)

Next pair of indices: (106, 46)
M&S algorithm main loop timer: 0.816434s (after computation of next merge)
M&S algorithm main loop timer: 0.817434s (after label reduction)
M&S algorithm main loop timer: 0.817434s (after shrinking)
M&S algorithm main loop timer: 0.817434s (after merging)

Next pair of indices: (107, 47)
M&S algorithm main loop timer: 0.817434s (after computation of next merge)
M&S algorithm main loop timer: 0.81943s (after label reduction)
M&S algorithm main loop timer: 0.81943s (after shrinking)
M&S algorithm main loop timer: 0.81943s (after merging)

Next pair of indices: (108, 48)
M&S algorithm main loop timer: 0.81943s (after computation of next merge)
M&S algorithm main loop timer: 0.820433s (after label reduction)
M&S algorithm main loop timer: 0.820433s (after shrinking)
M&S algorithm main loop timer: 0.820433s (after merging)

Next pair of indices: (109, 49)
M&S algorithm main loop timer: 0.820433s (after computation of next merge)
M&S algorithm main loop timer: 0.821427s (after label reduction)
M&S algorithm main loop timer: 0.821427s (after shrinking)
M&S algorithm main loop timer: 0.821427s (after merging)

Next pair of indices: (110, 50)
M&S algorithm main loop timer: 0.821427s (after computation of next merge)
M&S algorithm main loop timer: 0.822426s (after label reduction)
M&S algorithm main loop timer: 0.822426s (after shrinking)
M&S algorithm main loop timer: 0.822426s (after merging)

Next pair of indices: (111, 51)
M&S algorithm main loop timer: 0.822426s (after computation of next merge)
M&S algorithm main loop timer: 0.822426s (after label reduction)
M&S algorithm main loop timer: 0.822426s (after shrinking)
M&S algorithm main loop timer: 0.822426s (after merging)

Next pair of indices: (112, 52)
M&S algorithm main loop timer: 0.822426s (after computation of next merge)
M&S algorithm main loop timer: 0.823427s (after label reduction)
M&S algorithm main loop timer: 0.823427s (after shrinking)
M&S algorithm main loop timer: 0.823427s (after merging)

Next pair of indices: (113, 53)
M&S algorithm main loop timer: 0.823427s (after computation of next merge)
M&S algorithm main loop timer: 0.823427s (after label reduction)
M&S algorithm main loop timer: 0.823427s (after shrinking)
M&S algorithm main loop timer: 0.823427s (after merging)

Next pair of indices: (114, 54)
M&S algorithm main loop timer: 0.823427s (after computation of next merge)
M&S algorithm main loop timer: 0.823427s (after label reduction)
M&S algorithm main loop timer: 0.823427s (after shrinking)
M&S algorithm main loop timer: 0.823427s (after merging)

Next pair of indices: (115, 55)
M&S algorithm main loop timer: 0.823427s (after computation of next merge)
M&S algorithm main loop timer: 0.823427s (after label reduction)
M&S algorithm main loop timer: 0.823427s (after shrinking)
M&S algorithm main loop timer: 0.823427s (after merging)

Next pair of indices: (116, 56)
M&S algorithm main loop timer: 0.823427s (after computation of next merge)
M&S algorithm main loop timer: 0.82443s (after label reduction)
M&S algorithm main loop timer: 0.82443s (after merging)

Next pair of indices: (117, 57)
M&S algorithm main loop timer: 0.82443s (after computation of next merge)
M&S algorithm main loop timer: 0.82443s (after merging)

Next pair of indices: (118, 58)
M&S algorithm main loop timer: 0.82443s (after computation of next merge)
M&S algorithm main loop timer: 0.82443s (after label reduction)
M&S algorithm main loop timer: 0.82443s (after merging)

Next pair of indices: (119, 59)
M&S algorithm main loop timer: 0.82443s (after computation of next merge)
M&S algorithm main loop timer: 0.82443s (after label reduction)
M&S algorithm main loop timer: 0.82443s (after merging)

Next pair of indices: (120, 60)
M&S algorithm main loop timer: 0.82443s (after computation of next merge)
M&S algorithm main loop timer: 0.82443s (after label reduction)
M&S algorithm main loop timer: 0.82443s (after merging)

Next pair of indices: (121, 61)
M&S algorithm main loop timer: 0.82443s (after computation of next merge)
M&S algorithm main loop timer: 0.82443s (after label reduction)
M&S algorithm main loop timer: 0.82443s (after shrinking)
M&S algorithm main loop timer: 0.82443s (after merging)

End of merge-and-shrink algorithm, statistics:
Main loop runtime: 0.82443s
Maximum intermediate abstraction size: 61
Final peak memory increase of merge-and-shrink algorithm: 6500 KB
Merge-and-shrink algorithm runtime: 0.826417s

Number of remaining factors: 1
Number of factors kept: 1
Done initializing merge-and-shrink heuristic.

Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search with reopening closed nodes, (real) bound = 2147483647
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = true), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = infinity, threshold_before_merge = 1): 9
g=0, 1 evaluated, 0 expanded
f = 9, 1 evaluated, 0 expanded
Initial heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = true), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = infinity, threshold_before_merge = 1): 9
pruning method: none
f = 10, 2 evaluated, 1 expanded
f = 11, 4 evaluated, 2 expanded
f = 12, 6 evaluated, 4 expanded
f = 13, 9 evaluated, 6 expanded
f = 14, 13 evaluated, 9 expanded
f = 15, 17 evaluated, 13 expanded
f = 16, 23 evaluated, 17 expanded
f = 17, 33 evaluated, 23 expanded
f = 18, 61 evaluated, 33 expanded
f = 19, 107 evaluated, 61 expanded
f = 20, 244 evaluated, 107 expanded
f = 21, 644 evaluated, 244 expanded
f = 22, 1475 evaluated, 644 expanded
f = 23, 3654 evaluated, 1475 expanded
f = 24, 8279 evaluated, 3654 expanded
f = 25, 18543 evaluated, 8279 expanded
f = 26, 37054 evaluated, 18543 expanded
f = 27, 71717 evaluated, 37054 expanded
f = 28, 131291 evaluated, 71717 expanded
f = 29, 240226 evaluated, 131291 expanded
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = true), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = infinity, threshold_before_merge = 1): 8
g=21, 243140 evaluated, 132578 expanded
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = true), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = infinity, threshold_before_merge = 1): 7
g=22, 243146 evaluated, 132579 expanded
f = 30, 433250 evaluated, 240230 expanded
f = 31, 767377 evaluated, 433254 expanded
f = 32, 1311443 evaluated, 767369 expanded
f = 33, 2178591 evaluated, 1311443 expanded
f = 34, 3460423 evaluated, 2178599 expanded
f = 35, 5342856 evaluated, 3460431 expanded
f = 36, 7937106 evaluated, 5342966 expanded
f = 37, 11452991 evaluated, 7937232 expanded
f = 38, 15937682 evaluated, 11453303 expanded
f = 39, 21778991 evaluated, 15938246 expanded
f = 40, 28851777 evaluated, 21781243 expanded
f = 41, 37780956 evaluated, 28855157 expanded
f = 42, 47798682 evaluated, 37781004 expanded
f = 43, 59903068 evaluated, 47805490 expanded
f = 44, 73042735 evaluated, 59903540 expanded
f = 45, 88584541 evaluated, 73056823 expanded
Peak memory: 4192804 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1440.54
config 1: relative time 1, remaining 4
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--search', 'astar(merge_and_shrink(merge_strategy=merge_precomputed(merge_tree=linear(variable_order=reverse_level)),shrink_strategy=shrink_bisimulation(greedy=false),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=200000))', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-opt-fdss-2.sas
INFO     search time limit: 360.135s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --search 'astar(merge_and_shrink(merge_strategy=merge_precomputed(merge_tree=linear(variable_order=reverse_level)),shrink_strategy=shrink_bisimulation(greedy=false),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=200000))' --internal-plan-file sas_plan < plans/seq-opt-fdss-2.sas
reading input...
done reading input!
Initializing merge-and-shrink heuristic...
Running merge-and-shrink algorithm...
Merge strategy options:
Type: precomputed
Merge tree options: 
Type: linear
Update option: use random
Variable order type: by reverse level

Options related to size limits and shrinking: 
Transition system size limit: 200000
Transition system size limit right before merge: 200000
Threshold to trigger shrinking right before merge: 200000

Pruning unreachable states: yes
Pruning irrelevant states: yes

Label reduction options:
Before merging: disabled
Before shrinking: enabled
Method: all transition systems with fixpoint computation
System order: random

Main loop max time in seconds: inf


Building atomic transition systems... 
M&S algorithm timer: 0.00199263s (after computation of atomic factors)

Starting main loop without a time limit.
building causal graph...done! [t=0s]
Next pair of indices: (0, 1)
M&S algorithm main loop timer: 0.00101288s (after computation of next merge)
M&S algorithm main loop timer: 0.0458987s (after label reduction)
M&S algorithm main loop timer: 0.0458987s (after merging)

Next pair of indices: (62, 2)
M&S algorithm main loop timer: 0.0458987s (after computation of next merge)
M&S algorithm main loop timer: 0.0808332s (after merging)

Next pair of indices: (63, 3)
M&S algorithm main loop timer: 0.0808332s (after computation of next merge)
M&S algorithm main loop timer: 0.138706s (after label reduction)
M&S algorithm main loop timer: 0.138706s (after merging)

Next pair of indices: (64, 4)
M&S algorithm main loop timer: 0.138706s (after computation of next merge)
M&S algorithm main loop timer: 0.170642s (after merging)

Next pair of indices: (65, 5)
M&S algorithm main loop timer: 0.170642s (after computation of next merge)
M&S algorithm main loop timer: 0.210557s (after label reduction)
M&S algorithm main loop timer: 0.210557s (after merging)

Next pair of indices: (66, 6)
M&S algorithm main loop timer: 0.210557s (after computation of next merge)
M&S algorithm main loop timer: 0.239497s (after merging)

Next pair of indices: (67, 7)
M&S algorithm main loop timer: 0.239497s (after computation of next merge)
M&S algorithm main loop timer: 0.281411s (after label reduction)
M&S algorithm main loop timer: 0.281411s (after merging)

Next pair of indices: (68, 8)
M&S algorithm main loop timer: 0.281411s (after computation of next merge)
M&S algorithm main loop timer: 0.320333s (after label reduction)
M&S algorithm main loop timer: 0.320333s (after merging)

Next pair of indices: (69, 9)
M&S algorithm main loop timer: 0.320333s (after computation of next merge)
M&S algorithm main loop timer: 0.348294s (after label reduction)
M&S algorithm main loop timer: 0.34929s (after merging)

Next pair of indices: (70, 10)
M&S algorithm main loop timer: 0.34929s (after computation of next merge)
M&S algorithm main loop timer: 0.374242s (after merging)

Next pair of indices: (71, 11)
M&S algorithm main loop timer: 0.374242s (after computation of next merge)
M&S algorithm main loop timer: 0.402165s (after label reduction)
M&S algorithm main loop timer: 0.40516s (after merging)

Next pair of indices: (72, 12)
M&S algorithm main loop timer: 0.40516s (after computation of next merge)
M&S algorithm main loop timer: 0.445087s (after label reduction)
M&S algorithm main loop timer: 0.452058s (after merging)

Next pair of indices: (73, 13)
M&S algorithm main loop timer: 0.452058s (after computation of next merge)
M&S algorithm main loop timer: 0.486982s (after merging)

Next pair of indices: (74, 14)
M&S algorithm main loop timer: 0.487969s (after computation of next merge)
M&S algorithm main loop timer: 0.525901s (after label reduction)
M&S algorithm main loop timer: 0.563782s (after merging)

Next pair of indices: (75, 15)
M&S algorithm main loop timer: 0.564765s (after computation of next merge)
M&S algorithm main loop timer: 0.594694s (after label reduction)
M&S algorithm main loop timer: 0.697322s (after merging)

Next pair of indices: (76, 16)
M&S algorithm main loop timer: 0.700305s (after computation of next merge)
M&S algorithm main loop timer: 0.729242s (after label reduction)
M&S algorithm main loop timer: 0.949438s (after merging)

Next pair of indices: (77, 17)
M&S algorithm main loop timer: 0.955399s (after computation of next merge)
M&S algorithm main loop timer: 1.00129s (after label reduction)
M&S algorithm main loop timer: 1.50454s (after shrinking)
M&S algorithm main loop timer: 1.64201s (after merging)

Next pair of indices: (78, 18)
M&S algorithm main loop timer: 1.64598s (after computation of next merge)
M&S algorithm main loop timer: 1.69085s (after label reduction)
M&S algorithm main loop timer: 1.98372s (after merging)

Next pair of indices: (79, 19)
M&S algorithm main loop timer: 1.9907s (after computation of next merge)
M&S algorithm main loop timer: 2.04854s (after label reduction)
M&S algorithm main loop timer: 2.40023s (after shrinking)
M&S algorithm main loop timer: 2.40121s (after merging)

Next pair of indices: (80, 20)
M&S algorithm main loop timer: 2.40121s (after computation of next merge)
M&S algorithm main loop timer: 2.42317s (after label reduction)
M&S algorithm main loop timer: 2.42317s (after merging)

Next pair of indices: (81, 21)
M&S algorithm main loop timer: 2.42317s (after computation of next merge)
M&S algorithm main loop timer: 2.43514s (after merging)

Next pair of indices: (82, 22)
M&S algorithm main loop timer: 2.43514s (after computation of next merge)
M&S algorithm main loop timer: 2.44712s (after merging)

Next pair of indices: (83, 23)
M&S algorithm main loop timer: 2.44712s (after computation of next merge)
M&S algorithm main loop timer: 2.46509s (after label reduction)
M&S algorithm main loop timer: 2.46509s (after merging)

Next pair of indices: (84, 24)
M&S algorithm main loop timer: 2.46509s (after computation of next merge)
M&S algorithm main loop timer: 2.47606s (after merging)

Next pair of indices: (85, 25)
M&S algorithm main loop timer: 2.47606s (after computation of next merge)
M&S algorithm main loop timer: 2.48605s (after label reduction)
M&S algorithm main loop timer: 2.48605s (after merging)

Next pair of indices: (86, 26)
M&S algorithm main loop timer: 2.48605s (after computation of next merge)
M&S algorithm main loop timer: 2.49603s (after merging)

Next pair of indices: (87, 27)
M&S algorithm main loop timer: 2.49603s (after computation of next merge)
M&S algorithm main loop timer: 2.50701s (after label reduction)
M&S algorithm main loop timer: 2.50701s (after merging)

Next pair of indices: (88, 28)
M&S algorithm main loop timer: 2.50701s (after computation of next merge)
M&S algorithm main loop timer: 2.517s (after merging)

Next pair of indices: (89, 29)
M&S algorithm main loop timer: 2.517s (after computation of next merge)
M&S algorithm main loop timer: 2.52697s (after label reduction)
M&S algorithm main loop timer: 2.52798s (after merging)

Next pair of indices: (90, 30)
M&S algorithm main loop timer: 2.52798s (after computation of next merge)
M&S algorithm main loop timer: 2.53696s (after label reduction)
M&S algorithm main loop timer: 2.53995s (after merging)

Next pair of indices: (91, 31)
M&S algorithm main loop timer: 2.53995s (after computation of next merge)
M&S algorithm main loop timer: 2.54994s (after label reduction)
M&S algorithm main loop timer: 2.55692s (after merging)

Next pair of indices: (92, 32)
M&S algorithm main loop timer: 2.55692s (after computation of next merge)
M&S algorithm main loop timer: 2.56989s (after label reduction)
M&S algorithm main loop timer: 2.58386s (after merging)

Next pair of indices: (93, 33)
M&S algorithm main loop timer: 2.58484s (after computation of next merge)
M&S algorithm main loop timer: 2.59681s (after label reduction)
M&S algorithm main loop timer: 2.63768s (after merging)

Next pair of indices: (94, 34)
M&S algorithm main loop timer: 2.63966s (after computation of next merge)
M&S algorithm main loop timer: 2.6576s (after label reduction)
M&S algorithm main loop timer: 2.78612s (after merging)

Next pair of indices: (95, 35)
M&S algorithm main loop timer: 2.7891s (after computation of next merge)
M&S algorithm main loop timer: 2.80903s (after label reduction)
M&S algorithm main loop timer: 3.08093s (after merging)

Next pair of indices: (96, 36)
M&S algorithm main loop timer: 3.08591s (after computation of next merge)
M&S algorithm main loop timer: 3.13373s (after label reduction)
M&S algorithm main loop timer: 3.82595s (after shrinking)
M&S algorithm main loop timer: 4.20338s (after merging)

Next pair of indices: (97, 37)
M&S algorithm main loop timer: 4.21135s (after computation of next merge)
M&S algorithm main loop timer: 4.25522s (after label reduction)
M&S algorithm main loop timer: 4.68761s (after shrinking)
M&S algorithm main loop timer: 4.68861s (after merging)

Next pair of indices: (98, 38)
M&S algorithm main loop timer: 4.68861s (after computation of next merge)
M&S algorithm main loop timer: 4.6946s (after label reduction)
M&S algorithm main loop timer: 4.6946s (after merging)

Next pair of indices: (99, 39)
M&S algorithm main loop timer: 4.6946s (after computation of next merge)
M&S algorithm main loop timer: 4.69759s (after merging)

Next pair of indices: (100, 40)
M&S algorithm main loop timer: 4.69759s (after computation of next merge)
M&S algorithm main loop timer: 4.70159s (after label reduction)
M&S algorithm main loop timer: 4.70159s (after merging)

Next pair of indices: (101, 41)
M&S algorithm main loop timer: 4.70159s (after computation of next merge)
M&S algorithm main loop timer: 4.70457s (after label reduction)
M&S algorithm main loop timer: 4.70457s (after merging)

Next pair of indices: (102, 42)
M&S algorithm main loop timer: 4.70457s (after computation of next merge)
M&S algorithm main loop timer: 4.70756s (after label reduction)
M&S algorithm main loop timer: 4.70756s (after merging)

Next pair of indices: (103, 43)
M&S algorithm main loop timer: 4.70756s (after computation of next merge)
M&S algorithm main loop timer: 4.70956s (after merging)

Next pair of indices: (104, 44)
M&S algorithm main loop timer: 4.70956s (after computation of next merge)
M&S algorithm main loop timer: 4.71156s (after merging)

Next pair of indices: (105, 45)
M&S algorithm main loop timer: 4.71156s (after computation of next merge)
M&S algorithm main loop timer: 4.71354s (after label reduction)
M&S algorithm main loop timer: 4.71354s (after merging)

Next pair of indices: (106, 46)
M&S algorithm main loop timer: 4.71354s (after computation of next merge)
M&S algorithm main loop timer: 4.71554s (after label reduction)
M&S algorithm main loop timer: 4.71655s (after merging)

Next pair of indices: (107, 47)
M&S algorithm main loop timer: 4.71655s (after computation of next merge)
M&S algorithm main loop timer: 4.71954s (after merging)

Next pair of indices: (108, 48)
M&S algorithm main loop timer: 4.71954s (after computation of next merge)
M&S algorithm main loop timer: 4.72053s (after label reduction)
M&S algorithm main loop timer: 4.72453s (after merging)

Next pair of indices: (109, 49)
M&S algorithm main loop timer: 4.72552s (after computation of next merge)
M&S algorithm main loop timer: 4.72752s (after label reduction)
M&S algorithm main loop timer: 4.73749s (after merging)

Next pair of indices: (110, 50)
M&S algorithm main loop timer: 4.73749s (after computation of next merge)
M&S algorithm main loop timer: 4.74048s (after label reduction)
M&S algorithm main loop timer: 4.7643s (after merging)

Next pair of indices: (111, 51)
M&S algorithm main loop timer: 4.76531s (after computation of next merge)
M&S algorithm main loop timer: 4.76928s (after label reduction)
M&S algorithm main loop timer: 4.82708s (after merging)

Next pair of indices: (112, 52)
M&S algorithm main loop timer: 4.82906s (after computation of next merge)
M&S algorithm main loop timer: 4.84204s (after label reduction)
M&S algorithm main loop timer: 4.9879s (after merging)

Next pair of indices: (113, 53)
M&S algorithm main loop timer: 4.99088s (after computation of next merge)
M&S algorithm main loop timer: 5.02876s (after label reduction)
M&S algorithm main loop timer: 5.32757s (after merging)

Next pair of indices: (114, 54)
M&S algorithm main loop timer: 5.33355s (after computation of next merge)
M&S algorithm main loop timer: 5.41631s (after label reduction)
M&S algorithm main loop timer: 6.59362s (after shrinking)
M&S algorithm main loop timer: 7.03689s (after merging)

Next pair of indices: (115, 55)
M&S algorithm main loop timer: 7.04486s (after computation of next merge)
M&S algorithm main loop timer: 7.11662s (after label reduction)
M&S algorithm main loop timer: 7.70543s (after shrinking)
M&S algorithm main loop timer: 7.70644s (after merging)

Next pair of indices: (116, 56)
M&S algorithm main loop timer: 7.70644s (after computation of next merge)
M&S algorithm main loop timer: 7.70644s (after label reduction)
M&S algorithm main loop timer: 7.70644s (after merging)
M&S algorithm main loop timer: 7.70743s (after pruning)

Next pair of indices: (117, 57)
M&S algorithm main loop timer: 7.70743s (after computation of next merge)
M&S algorithm main loop timer: 7.70743s (after label reduction)
M&S algorithm main loop timer: 7.70743s (after merging)
M&S algorithm main loop timer: 7.70743s (after pruning)

Next pair of indices: (118, 58)
M&S algorithm main loop timer: 7.70743s (after computation of next merge)
M&S algorithm main loop timer: 7.70743s (after label reduction)
M&S algorithm main loop timer: 7.70743s (after merging)
M&S algorithm main loop timer: 7.70743s (after pruning)

Next pair of indices: (119, 59)
M&S algorithm main loop timer: 7.70743s (after computation of next merge)
M&S algorithm main loop timer: 7.70743s (after label reduction)
M&S algorithm main loop timer: 7.70743s (after merging)
M&S algorithm main loop timer: 7.70842s (after pruning)

Next pair of indices: (120, 60)
M&S algorithm main loop timer: 7.70842s (after computation of next merge)
M&S algorithm main loop timer: 7.70842s (after label reduction)
M&S algorithm main loop timer: 7.70842s (after merging)
M&S algorithm main loop timer: 7.70842s (after pruning)

Next pair of indices: (121, 61)
M&S algorithm main loop timer: 7.70842s (after computation of next merge)
M&S algorithm main loop timer: 7.70943s (after label reduction)
M&S algorithm main loop timer: 7.71042s (after merging)
M&S algorithm main loop timer: 7.71042s (after pruning)

End of merge-and-shrink algorithm, statistics:
Main loop runtime: 7.71042s
Maximum intermediate abstraction size: 177408
Final peak memory increase of merge-and-shrink algorithm: 202716 KB
Merge-and-shrink algorithm runtime: 7.71241s

Number of remaining factors: 1
Number of factors kept: 1
Done initializing merge-and-shrink heuristic.

Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search with reopening closed nodes, (real) bound = 2147483647
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 16
g=0, 1 evaluated, 0 expanded
f = 16, 1 evaluated, 0 expanded
Initial heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 16
pruning method: none
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 15
g=1, 2 evaluated, 1 expanded
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 14
g=2, 3 evaluated, 2 expanded
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 13
g=3, 5 evaluated, 3 expanded
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 12
g=4, 6 evaluated, 4 expanded
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 11
g=5, 7 evaluated, 5 expanded
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 10
g=6, 8 evaluated, 6 expanded
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 9
g=7, 9 evaluated, 7 expanded
f = 18, 14 evaluated, 10 expanded
f = 20, 20 evaluated, 16 expanded
f = 22, 22 evaluated, 20 expanded
f = 24, 25 evaluated, 22 expanded
f = 26, 28 evaluated, 25 expanded
f = 28, 31 evaluated, 28 expanded
f = 30, 38 evaluated, 31 expanded
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 8
g=22, 197 evaluated, 118 expanded
New best heuristic value for merge_and_shrink(merge_strategy = merge_precomputed(merge_tree = linear(variable_order = reverse_level)), shrink_strategy = shrink_bisimulation(greedy = false), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 200000): 7
g=23, 202 evaluated, 119 expanded
f = 31, 739 evaluated, 436 expanded
f = 32, 751 evaluated, 444 expanded
f = 33, 1299 evaluated, 969 expanded
f = 34, 1299 evaluated, 977 expanded
f = 35, 3200 evaluated, 2308 expanded
f = 36, 3224 evaluated, 2324 expanded
f = 37, 27227 evaluated, 16663 expanded
f = 38, 27605 evaluated, 16931 expanded
f = 39, 144815 evaluated, 91647 expanded
f = 40, 146507 evaluated, 93027 expanded
f = 41, 831381 evaluated, 526047 expanded
f = 42, 841521 evaluated, 533935 expanded
f = 43, 2506960 evaluated, 1706749 expanded
f = 44, 2527384 evaluated, 1727125 expanded
f = 45, 6190504 evaluated, 4400883 expanded
f = 46, 6232768 evaluated, 4442675 expanded
f = 47, 16914461 evaluated, 11838648 expanded
f = 48, 17049665 evaluated, 11956960 expanded
f = 49, 37018310 evaluated, 26941942 expanded
f = 50, 37231406 evaluated, 27174142 expanded
f = 51, 65796274 evaluated, 50603966 expanded
f = 52, 66064060 evaluated, 50924554 expanded
Peak memory: 3896196 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1081.09
config 2: relative time 1, remaining 3
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'lmc=lmcount(lm_merged([lm_rhw(),lm_hm(m=1)]),admissible=true)', '--search', 'astar(lmc,lazy_evaluator=lmc)', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-opt-fdss-2.sas
INFO     search time limit: 360.3633333333333s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'lmc=lmcount(lm_merged([lm_rhw(),lm_hm(m=1)]),admissible=true)' --search 'astar(lmc,lazy_evaluator=lmc)' --internal-plan-file sas_plan < plans/seq-opt-fdss-2.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
Merging 2 landmark graphs
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.0010032s
Discovered 14 landmarks, of which 2 are disjunctive and 0 are conjunctive.
8 edges
Initializing Exploration...
h^m landmarks m=1
Using 183 P^m fluents.
Level 1 completed.
Level 2 completed.
Level 3 completed.
Level 4 completed.
Level 5 completed.
Level 6 completed.
Level 7 completed.
Level 8 completed.
Level 9 completed.
Level 10 completed.
Level 11 completed.
Level 12 completed.
Level 13 completed.
Level 14 completed.
Level 15 completed.
Level 16 completed.
Level 17 completed.
Level 18 completed.
Level 19 completed.
Level 20 completed.
Level 21 completed.
Level 22 completed.
Level 23 completed.
Level 24 completed.
Level 25 completed.
Level 26 completed.
Level 27 completed.
Level 28 completed.
Level 29 completed.
Level 30 completed.
Level 31 completed.
Level 32 completed.
h^m landmarks computed.
Removed 0 reasonable or obedient reasonable orders
Calculating achievers.
Landmarks generation time: 0.00199101s
Discovered 37 landmarks, of which 0 are disjunctive and 0 are conjunctive.
98 edges
Adding simple landmarks
Adding disjunctive landmarks
Adding orderings
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00500176s
Discovered 39 landmarks, of which 2 are disjunctive and 0 are conjunctive.
100 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000986679s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search with reopening closed nodes, (real) bound = 2147483647
15 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 16
g=0, 1 evaluated, 0 expanded
f = 16, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 16
pruning method: none
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 15
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 14
g=2, 4 evaluated, 2 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 13
g=3, 5 evaluated, 3 expanded
f = 17, 7 evaluated, 4 expanded
f = 18, 11 evaluated, 7 expanded
f = 19, 15 evaluated, 11 expanded
f = 20, 19 evaluated, 15 expanded
f = 21, 30 evaluated, 20 expanded
f = 22, 57 evaluated, 29 expanded
f = 23, 103 evaluated, 56 expanded
f = 24, 242 evaluated, 102 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 12
g=12, 247 evaluated, 104 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 11
g=13, 251 evaluated, 105 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 10
g=14, 254 evaluated, 106 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 9
g=15, 258 evaluated, 107 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 8
g=16, 262 evaluated, 108 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 7
g=17, 265 evaluated, 109 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 6
g=18, 269 evaluated, 110 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 5
g=19, 273 evaluated, 111 expanded
New best heuristic value for lmcount(lm_merged(list(lm_rhw, lm_hm(m = 1))), admissible = true): 4
g=20, 275 evaluated, 112 expanded
f = 25, 746 evaluated, 266 expanded
f = 26, 1631 evaluated, 706 expanded
f = 27, 3928 evaluated, 1621 expanded
f = 28, 8661 evaluated, 3902 expanded
f = 29, 19255 evaluated, 8707 expanded
f = 30, 38001 evaluated, 19173 expanded
f = 31, 76343 evaluated, 38733 expanded
f = 32, 138367 evaluated, 75025 expanded
f = 33, 266799 evaluated, 141436 expanded
f = 34, 473565 evaluated, 260314 expanded
f = 35, 919585 evaluated, 492352 expanded
f = 36, 1539130 evaluated, 882023 expanded
f = 37, 2717732 evaluated, 1571118 expanded
f = 38, 4229764 evaluated, 2627152 expanded
f = 39, 6824767 evaluated, 4295119 expanded
f = 40, 9950656 evaluated, 6636403 expanded
f = 41, 15414987 evaluated, 10179272 expanded
f = 42, 21314483 evaluated, 14860722 expanded
f = 43, 31225903 evaluated, 21616457 expanded
f = 44, 41363644 evaluated, 30184841 expanded
f = 45, 56870326 evaluated, 41680984 expanded
Peak memory: 3693240 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 721.72
config 3: relative time 1, remaining 2
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--search', 'astar(lmcut())', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-opt-fdss-2.sas
INFO     search time limit: 360.86s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --search 'astar(lmcut())' --internal-plan-file sas_plan < plans/seq-opt-fdss-2.sas
reading input...
done reading input!
Initializing landmark cut heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search with reopening closed nodes, (real) bound = 2147483647
New best heuristic value for lmcut: 25
g=0, 1 evaluated, 0 expanded
f = 25, 1 evaluated, 0 expanded
Initial heuristic value for lmcut: 25
pruning method: none
New best heuristic value for lmcut: 24
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcut: 23
g=2, 4 evaluated, 2 expanded
New best heuristic value for lmcut: 22
g=3, 5 evaluated, 3 expanded
New best heuristic value for lmcut: 21
g=4, 7 evaluated, 4 expanded
New best heuristic value for lmcut: 20
g=5, 8 evaluated, 5 expanded
New best heuristic value for lmcut: 19
g=6, 10 evaluated, 6 expanded
New best heuristic value for lmcut: 18
g=7, 11 evaluated, 7 expanded
New best heuristic value for lmcut: 16
g=8, 12 evaluated, 8 expanded
New best heuristic value for lmcut: 15
g=9, 16 evaluated, 9 expanded
New best heuristic value for lmcut: 14
g=10, 20 evaluated, 10 expanded
New best heuristic value for lmcut: 13
g=11, 24 evaluated, 11 expanded
New best heuristic value for lmcut: 12
g=12, 29 evaluated, 12 expanded
New best heuristic value for lmcut: 11
g=13, 33 evaluated, 13 expanded
New best heuristic value for lmcut: 10
g=14, 36 evaluated, 14 expanded
New best heuristic value for lmcut: 9
g=15, 40 evaluated, 15 expanded
New best heuristic value for lmcut: 8
g=16, 44 evaluated, 16 expanded
New best heuristic value for lmcut: 7
g=17, 47 evaluated, 17 expanded
New best heuristic value for lmcut: 6
g=18, 51 evaluated, 18 expanded
New best heuristic value for lmcut: 5
g=19, 55 evaluated, 19 expanded
New best heuristic value for lmcut: 4
g=20, 60 evaluated, 20 expanded
New best heuristic value for lmcut: 3
g=21, 67 evaluated, 21 expanded
f = 26, 219 evaluated, 61 expanded
f = 27, 353 evaluated, 155 expanded
f = 28, 443 evaluated, 237 expanded
f = 29, 855 evaluated, 404 expanded
f = 30, 1147 evaluated, 568 expanded
f = 31, 6005 evaluated, 1968 expanded
f = 32, 8992 evaluated, 2958 expanded
f = 33, 32280 evaluated, 11118 expanded
f = 34, 48206 evaluated, 17399 expanded
f = 35, 188938 evaluated, 65171 expanded
f = 36, 277447 evaluated, 99559 expanded
f = 37, 646323 evaluated, 262987 expanded
f = 38, 889294 evaluated, 391602 expanded
f = 39, 1745402 evaluated, 798629 expanded
f = 40, 2315716 evaluated, 1136735 expanded
Peak memory: 229172 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 362.3799999999999
config 4: relative time 1, remaining 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--search', 'astar(blind())', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-opt-fdss-2.sas
INFO     search time limit: 362.3799999999999s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --search 'astar(blind())' --internal-plan-file sas_plan < plans/seq-opt-fdss-2.sas
reading input...
done reading input!
Initializing blind search heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search with reopening closed nodes, (real) bound = 2147483647
New best heuristic value for blind: 1
g=0, 1 evaluated, 0 expanded
f = 1, 1 evaluated, 0 expanded
Initial heuristic value for blind: 1
pruning method: none
f = 2, 2 evaluated, 1 expanded
f = 3, 4 evaluated, 2 expanded
f = 4, 6 evaluated, 4 expanded
f = 5, 9 evaluated, 6 expanded
f = 6, 13 evaluated, 9 expanded
f = 7, 17 evaluated, 13 expanded
f = 8, 23 evaluated, 17 expanded
f = 9, 33 evaluated, 23 expanded
f = 10, 61 evaluated, 33 expanded
f = 11, 107 evaluated, 61 expanded
f = 12, 244 evaluated, 107 expanded
f = 13, 644 evaluated, 244 expanded
f = 14, 1475 evaluated, 644 expanded
f = 15, 3654 evaluated, 1475 expanded
f = 16, 8279 evaluated, 3654 expanded
f = 17, 18543 evaluated, 8279 expanded
f = 18, 37054 evaluated, 18543 expanded
f = 19, 71717 evaluated, 37054 expanded
f = 20, 131291 evaluated, 71717 expanded
f = 21, 240226 evaluated, 131291 expanded
f = 22, 433224 evaluated, 240226 expanded
f = 23, 767305 evaluated, 433224 expanded
f = 24, 1311381 evaluated, 767305 expanded
f = 25, 2178553 evaluated, 1311381 expanded
f = 26, 3460345 evaluated, 2178553 expanded
f = 27, 5342690 evaluated, 3460345 expanded
f = 28, 7936143 evaluated, 5342690 expanded
f = 29, 11450627 evaluated, 7936143 expanded
f = 30, 15931985 evaluated, 11450627 expanded
f = 31, 21767570 evaluated, 15931985 expanded
f = 32, 28820170 evaluated, 21767570 expanded
f = 33, 37713983 evaluated, 28820170 expanded
f = 34, 47697638 evaluated, 37713983 expanded
f = 35, 59744544 evaluated, 47697638 expanded
f = 36, 72819823 evaluated, 59744544 expanded
f = 37, 88243578 evaluated, 72819823 expanded
f = 38, 105206060 evaluated, 88243578 expanded
f = 39, 124663170 evaluated, 105206060 expanded
Peak memory: 6442572 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

search exit code: 23

Driver aborting after search
