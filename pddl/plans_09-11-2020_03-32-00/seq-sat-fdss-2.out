INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/translate/translate.py domain.pddl task.pddl --sas-file plans/seq-sat-fdss-2.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 13 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
1604 relevant atoms
1387 auxiliary atoms
2991 final queue length
3870 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.030s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
4 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
61 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.017s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.007s wall-clock]
Reordering and filtering variables...
62 of 62 variables necessary.
0 of 1 mutex groups necessary.
574 of 574 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.003s wall-clock]
Translator variables: 62
Translator derived variables: 0
Translator facts: 183
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 574
Translator axioms: 0
Translator task size: 3807
Translator peak memory: 245900 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.070s CPU, 0.067s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search portfolio: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/driver/portfolios/seq_sat_fdss_2.py
Exit codes: <generator object run_sat at 0x7fc370ba7c10>
remaining time: 1800.0
config 0: relative time 330, remaining 1595
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=ff(transform=adapt_costs(one))', '--search', 'eager_greedy([h],preferred=[h],cost_type=one,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2.sas
INFO     search time limit: 372.41379310344826s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager_greedy([h],preferred=[h],cost_type=one,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-2.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search without reopening closed nodes, (real) bound = 2147483647
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 33
pruning method: none
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 24 evaluated, 16 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 27 evaluated, 17 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 31 evaluated, 18 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 35 evaluated, 19 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 39 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 42 evaluated, 21 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 46 evaluated, 22 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 50 evaluated, 23 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 53 evaluated, 24 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 57 evaluated, 25 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 61 evaluated, 26 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=21, 73 evaluated, 29 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=21, 76 evaluated, 29 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=22, 79 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=59, 2972 evaluated, 2436 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=65, 3234 evaluated, 2576 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=101, 37573 evaluated, 32412 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=152, 883980 evaluated, 781677 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 1
g=190, 10347497 evaluated, 9243561 expanded
Peak memory: 840484 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1428.5299999999997
config 1: relative time 411, remaining 1265
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=ff(transform=adapt_costs(one))', '--search', 'lazy_greedy([h],preferred=[h],cost_type=one,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2.sas
INFO     search time limit: 464.1310909090908s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'lazy_greedy([h],preferred=[h],cost_type=one,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-2.sas
reading input...
done reading input!
Simplifying 1414 unary operators... done! [1414 unary operators]
time to simplify: 0.00100454s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting lazy best first search, (real) bound = 2147483647
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 33
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=9, 15 evaluated, 14 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=10, 17 evaluated, 16 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=11, 18 evaluated, 17 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=12, 19 evaluated, 18 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=13, 20 evaluated, 19 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 20
g=14, 21 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=15, 22 evaluated, 21 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 16
g=16, 23 evaluated, 22 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 13
g=17, 24 evaluated, 23 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 11
g=18, 25 evaluated, 24 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=19, 26 evaluated, 25 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=23, 31 evaluated, 30 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=24, 33 evaluated, 32 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=25, 35 evaluated, 34 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=73, 4609 evaluated, 4608 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=79, 4776 evaluated, 4775 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=123, 320611 evaluated, 320610 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=204, 2968454 evaluated, 2968453 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 1
g=257, 25943542 evaluated, 25943541 expanded
Peak memory: 1717660 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 965.1899999999999
config 2: relative time 213, remaining 854
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=cea(transform=adapt_costs(one))', '--search', 'eager_greedy([h],preferred=[h],cost_type=one,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2.sas
INFO     search time limit: 240.73240046838407s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=cea(transform=adapt_costs(one))' --search 'eager_greedy([h],preferred=[h],cost_type=one,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-2.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0.000991499s
Variables: 62
FactPairs: 183
Bytes per state: 12
Conducting best first search without reopening closed nodes, (real) bound = 2147483647
New best heuristic value for cea(transform = adapt_costs(one)): 436
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cea(transform = adapt_costs(one)): 436
pruning method: none
New best heuristic value for cea(transform = adapt_costs(one)): 357
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 342
g=12, 49 evaluated, 28 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 299
g=13, 52 evaluated, 29 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 281
g=13, 53 evaluated, 29 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 226
g=14, 56 evaluated, 30 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 195
g=15, 59 evaluated, 31 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 177
g=15, 60 evaluated, 31 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 134
g=16, 64 evaluated, 32 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 97
g=17, 67 evaluated, 33 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 84
g=18, 70 evaluated, 34 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 66
g=18, 71 evaluated, 34 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 59
g=19, 74 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 41
g=19, 75 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 40
g=20, 77 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 34
g=20, 78 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 22
g=20, 80 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 21
g=21, 84 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 9
g=21, 87 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 8
g=52, 2374 evaluated, 1959 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 6
g=53, 2379 evaluated, 1960 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 5
g=102, 13119 evaluated, 11563 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 3
g=106, 13176 evaluated, 11582 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 2
g=155, 125378 evaluated, 112902 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 1
g=206, 665506 evaluated, 597475 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 0
g=250, 1278500 evaluated, 1108258 expanded
Solution found!
Actual search time: 43.2042s
walk p8-12 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
push p7-6 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
push p4-9 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p8-17 (1)
walk p7-17 p7-18 (1)
push p7-18 p7-19 p6-19 (1)
walk p7-19 p8-19 (1)
walk p8-19 p8-18 (1)
push p8-18 p8-17 p8-18 (1)
push p8-17 p8-18 p8-19 (1)
push p8-18 p8-19 p7-19 (1)
push p8-19 p7-19 p7-20 (1)
push p7-19 p6-19 p7-19 (1)
push p6-19 p7-19 p7-18 (1)
push p7-19 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
walk p4-9 p4-8 (1)
walk p4-8 p4-7 (1)
push p4-7 p3-7 p4-7 (1)
push p3-7 p4-7 p4-8 (1)
push p4-7 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p8-17 (1)
walk p7-17 p7-18 (1)
push p7-18 p7-19 p8-19 (1)
push p7-19 p7-20 p6-20 (1)
walk p7-20 p7-19 (1)
push p7-19 p8-19 p7-19 (1)
push p8-19 p7-19 p7-18 (1)
push p7-19 p7-18 p6-18 (1)
walk p7-18 p7-17 (1)
push p7-17 p8-17 p8-18 (1)
push p8-17 p8-18 p8-19 (1)
push p8-18 p8-19 p8-20 (1)
walk p8-19 p7-19 (1)
walk p7-19 p7-18 (1)
push p7-18 p6-18 p7-18 (1)
push p6-18 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
push p5-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p8-17 (1)
push p7-17 p8-17 p8-18 (1)
push p8-17 p8-18 p8-19 (1)
walk p8-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p7-4 (1)
walk p7-4 p7-3 (1)
push p7-3 p7-2 p7-3 (1)
push p7-2 p7-3 p7-4 (1)
push p7-3 p7-4 p7-5 (1)
push p7-4 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p6-17 (1)
push p7-17 p6-17 p6-18 (1)
push p6-17 p6-18 p6-19 (1)
walk p6-18 p6-17 (1)
walk p6-17 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
walk p5-5 p4-5 (1)
walk p4-5 p3-5 (1)
push p3-5 p2-5 p3-5 (1)
push p2-5 p3-5 p4-5 (1)
push p3-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p8-18 (1)
push p7-18 p7-19 p7-20 (1)
push p7-19 p8-19 p7-19 (1)
push p8-19 p8-18 p8-19 (1)
Plan length: 208 step(s).
Plan cost: 208
Expanded 1108259 state(s).
Reopened 0 state(s).
Evaluated 1278502 state(s).
Evaluations: 2386760
Generated 4403664 state(s).
Dead ends: 0 state(s).
Number of registered states: 1278502
Int hash set load factor: 1278502/2097152 = 0.609637
Int hash set resizes: 21
Search time: 43.2042s
Total time: 43.2091s
Solution found.
Peak memory: 70868 KB
exitcode: 0

plan manager: found new plan with cost 208
Build final config.
Abort portfolio and run final config.
remaining time: 921.9599999999999
config 0: relative time 1, remaining 1
g bound: 208
next plan number: 2
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'h=cea(transform=adapt_costs(one))', '--search', 'iterated([eager(single(sum([g(),weight(h,5)])),preferred=[h],cost_type=one),eager(single(sum([g(),weight(h,3)])),preferred=[h],cost_type=one),eager(single(sum([g(),weight(h,2)])),preferred=[h],cost_type=one),eager(single(sum([g(),weight(h,1)])),preferred=[h],cost_type=one)],bound=208,repeat_last=true)', '--internal-previous-portfolio-plans', '1', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2.sas
INFO     search time limit: 921.9599999999999s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'h=cea(transform=adapt_costs(one))' --search 'iterated([eager(single(sum([g(),weight(h,5)])),preferred=[h],cost_type=one),eager(single(sum([g(),weight(h,3)])),preferred=[h],cost_type=one),eager(single(sum([g(),weight(h,2)])),preferred=[h],cost_type=one),eager(single(sum([g(),weight(h,1)])),preferred=[h],cost_type=one)],bound=208,repeat_last=true)' --internal-previous-portfolio-plans 1 --internal-plan-file sas_plan < plans/seq-sat-fdss-2.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Starting search: eager(single(sum(list(g, weight(h, 5)))), preferred = list(h), cost_type = one)
Conducting best first search without reopening closed nodes, (real) bound = 208
New best heuristic value for cea(transform = adapt_costs(one)): 436
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cea(transform = adapt_costs(one)): 436
pruning method: none
New best heuristic value for cea(transform = adapt_costs(one)): 357
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 342
g=12, 49 evaluated, 29 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 299
g=13, 52 evaluated, 30 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 281
g=13, 53 evaluated, 30 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 226
g=14, 56 evaluated, 31 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 195
g=15, 59 evaluated, 32 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 177
g=15, 60 evaluated, 32 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 134
g=16, 64 evaluated, 33 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 97
g=17, 67 evaluated, 34 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 84
g=18, 70 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 66
g=18, 71 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 59
g=19, 74 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 41
g=19, 75 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 40
g=20, 77 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 34
g=20, 78 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 22
g=20, 80 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 21
g=21, 84 evaluated, 38 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 9
g=21, 87 evaluated, 38 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 8
g=48, 2070 evaluated, 1686 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 7
g=49, 2112 evaluated, 1695 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 6
g=49, 2113 evaluated, 1695 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 5
g=84, 14305 evaluated, 12186 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 4
g=85, 14337 evaluated, 12191 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 3
g=86, 14407 evaluated, 12212 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 2
g=125, 121254 evaluated, 106008 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 1
g=159, 442027 evaluated, 381934 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 0
g=198, 807492 evaluated, 686970 expanded
Solution found!
Actual search time: 27.7705s
walk p8-12 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
push p7-6 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
push p4-9 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p7-19 p7-20 (1)
walk p7-19 p7-18 (1)
push p7-18 p6-18 p7-18 (1)
push p6-18 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p6-9 (1)
walk p6-9 p5-9 (1)
walk p5-9 p4-9 (1)
walk p4-9 p4-8 (1)
walk p4-8 p4-7 (1)
push p4-7 p3-7 p4-7 (1)
push p3-7 p4-7 p4-8 (1)
push p4-7 p4-8 p4-9 (1)
push p4-8 p4-9 p5-9 (1)
push p4-9 p5-9 p6-9 (1)
push p5-9 p6-9 p7-9 (1)
push p6-9 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p6-18 p6-19 (1)
push p6-18 p6-19 p6-20 (1)
push p6-19 p7-19 p7-18 (1)
push p7-19 p7-20 p8-20 (1)
walk p7-20 p7-19 (1)
push p7-19 p7-18 p7-19 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
push p5-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p6-18 p6-19 (1)
walk p6-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p7-4 (1)
walk p7-4 p7-3 (1)
push p7-3 p7-2 p7-3 (1)
push p7-2 p7-3 p7-4 (1)
push p7-3 p7-4 p7-5 (1)
push p7-4 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p8-18 (1)
push p7-18 p8-18 p8-19 (1)
walk p8-18 p7-18 (1)
walk p7-18 p7-17 (1)
walk p7-17 p7-16 (1)
walk p7-16 p7-15 (1)
walk p7-15 p7-14 (1)
walk p7-14 p7-13 (1)
walk p7-13 p7-12 (1)
walk p7-12 p7-11 (1)
walk p7-11 p7-10 (1)
walk p7-10 p7-9 (1)
walk p7-9 p7-8 (1)
walk p7-8 p7-7 (1)
walk p7-7 p7-6 (1)
walk p7-6 p7-5 (1)
walk p7-5 p6-5 (1)
walk p6-5 p5-5 (1)
walk p5-5 p4-5 (1)
walk p4-5 p3-5 (1)
push p3-5 p2-5 p3-5 (1)
push p2-5 p3-5 p4-5 (1)
push p3-5 p4-5 p5-5 (1)
push p4-5 p5-5 p6-5 (1)
push p5-5 p6-5 p7-5 (1)
push p6-5 p7-5 p7-6 (1)
push p7-5 p7-6 p7-7 (1)
push p7-6 p7-7 p7-8 (1)
push p7-7 p7-8 p7-9 (1)
push p7-8 p7-9 p7-10 (1)
push p7-9 p7-10 p7-11 (1)
push p7-10 p7-11 p7-12 (1)
push p7-11 p7-12 p7-13 (1)
push p7-12 p7-13 p7-14 (1)
push p7-13 p7-14 p7-15 (1)
push p7-14 p7-15 p7-16 (1)
push p7-15 p7-16 p7-17 (1)
push p7-16 p7-17 p7-18 (1)
push p7-17 p7-18 p6-18 (1)
push p7-18 p7-19 p7-20 (1)
push p7-19 p6-19 p7-19 (1)
push p6-19 p6-18 p6-19 (1)
Plan length: 194 step(s).
Plan cost: 194
Expanded 686971 state(s).
Reopened 0 state(s).
Evaluated 807494 state(s).
Evaluations: 1494464
Generated 2718976 state(s).
Dead ends: 0 state(s).
Number of registered states: 807494
Int hash set load factor: 807494/1048576 = 0.770086
Int hash set resizes: 20
Best solution cost so far: 194
Solution found - keep searching
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 62
FactPairs: 183
Bytes per state: 12
Starting search: eager(single(sum(list(g, weight(h, 3)))), preferred = list(h), cost_type = one)
Conducting best first search without reopening closed nodes, (real) bound = 194
New best heuristic value for cea(transform = adapt_costs(one)): 436
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cea(transform = adapt_costs(one)): 436
pruning method: none
New best heuristic value for cea(transform = adapt_costs(one)): 357
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 342
g=12, 49 evaluated, 29 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 299
g=13, 52 evaluated, 30 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 281
g=13, 53 evaluated, 30 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 226
g=14, 56 evaluated, 31 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 195
g=15, 59 evaluated, 32 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 177
g=15, 60 evaluated, 32 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 134
g=16, 64 evaluated, 33 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 97
g=17, 67 evaluated, 34 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 84
g=18, 70 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 66
g=18, 71 evaluated, 35 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 59
g=19, 74 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 41
g=19, 75 evaluated, 36 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 40
g=20, 77 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 34
g=20, 78 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 22
g=20, 80 evaluated, 37 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 21
g=21, 84 evaluated, 38 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 9
g=21, 87 evaluated, 38 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 8
g=48, 2000 evaluated, 1629 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 7
g=49, 2042 evaluated, 1638 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 6
g=49, 2043 evaluated, 1638 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 5
g=84, 13737 evaluated, 11605 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 4
g=85, 13769 evaluated, 11610 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 3
g=86, 13804 evaluated, 11618 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 2
g=121, 122626 evaluated, 106681 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 1
g=157, 452116 evaluated, 388426 expanded
Peak memory: 1057576 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

plan manager: found new plan with cost 194
search exit code: 2

