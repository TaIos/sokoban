INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/translate/translate.py domain.pddl task.pddl --sas-file plans/seq-sat-fd-autotune-2.sas
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.004s wall-clock]
Preparing model... [0.010s CPU, 0.010s wall-clock]
Generated 49 rules.
Computing model... [0.060s CPU, 0.054s wall-clock]
1248 relevant atoms
1834 auxiliary atoms
3082 final queue length
3297 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.100s CPU, 0.090s wall-clock]
Computing fact groups...
Finding invariants...
4 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
45 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.018s wall-clock]
80 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.007s wall-clock]
Reordering and filtering variables...
46 of 46 variables necessary.
0 of 1 mutex groups necessary.
234 of 234 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 46
Translator derived variables: 0
Translator facts: 151
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 234
Translator axioms: 0
Translator task size: 1341
Translator peak memory: 245356 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.140s CPU, 0.137s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: plans/seq-sat-fd-autotune-2.sas
INFO     search time limit: 1800s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcea=cea(transform=adapt_costs(plusone))' --evaluator 'hcg=cg(transform=adapt_costs(one))' --evaluator 'hgc=goalcount(transform=adapt_costs(plusone))' --evaluator 'hff=ff()' --search 'iterated([ehc(hcea,preferred=[hcea],preferred_usage=0,cost_type=normal),lazy(alt([single(sum([weight(g(),2),weight(hff,3)])),single(sum([weight(g(),2),weight(hff,3)]),pref_only=true),single(sum([weight(g(),2),weight(hcg,3)])),single(sum([weight(g(),2),weight(hcg,3)]),pref_only=true),single(sum([weight(g(),2),weight(hcea,3)])),single(sum([weight(g(),2),weight(hcea,3)]),pref_only=true),single(sum([weight(g(),2),weight(hgc,3)])),single(sum([weight(g(),2),weight(hgc,3)]),pref_only=true)],boost=200),preferred=[hcea,hgc],reopen_closed=false,cost_type=one),lazy(alt([single(sum([g(),weight(hff,5)])),single(sum([g(),weight(hff,5)]),pref_only=true),single(sum([g(),weight(hcg,5)])),single(sum([g(),weight(hcg,5)]),pref_only=true),single(sum([g(),weight(hcea,5)])),single(sum([g(),weight(hcea,5)]),pref_only=true),single(sum([g(),weight(hgc,5)])),single(sum([g(),weight(hgc,5)]),pref_only=true)],boost=5000),preferred=[hcea,hgc],reopen_closed=true,cost_type=normal),lazy(alt([single(sum([g(),weight(hff,2)])),single(sum([g(),weight(hff,2)]),pref_only=true),single(sum([g(),weight(hcg,2)])),single(sum([g(),weight(hcg,2)]),pref_only=true),single(sum([g(),weight(hcea,2)])),single(sum([g(),weight(hcea,2)]),pref_only=true),single(sum([g(),weight(hgc,2)])),single(sum([g(),weight(hgc,2)]),pref_only=true)],boost=1000),preferred=[hcea,hgc],reopen_closed=true,cost_type=one)],repeat_last=true,continue_on_fail=true)' --internal-plan-file sas_plan < plans/seq-sat-fd-autotune-2.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0.00100372s]
done!
Initializing goal count heuristic...
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Starting search: ehc(hcea, preferred = list(hcea), preferred_usage = 0, cost_type = normal)
Conducting enforced hill-climbing search, (real) bound = 2147483647
Using preferred operators for pruning
Initial heuristic value for cea(transform = adapt_costs(plusone)): 540
New best heuristic value for cea(transform = adapt_costs(plusone)): 540
New best heuristic value for cea(transform = adapt_costs(plusone)): 449
New best heuristic value for cea(transform = adapt_costs(plusone)): 444
New best heuristic value for cea(transform = adapt_costs(plusone)): 417
New best heuristic value for cea(transform = adapt_costs(plusone)): 350
New best heuristic value for cea(transform = adapt_costs(plusone)): 289
New best heuristic value for cea(transform = adapt_costs(plusone)): 234
New best heuristic value for cea(transform = adapt_costs(plusone)): 185
New best heuristic value for cea(transform = adapt_costs(plusone)): 142
New best heuristic value for cea(transform = adapt_costs(plusone)): 105
New best heuristic value for cea(transform = adapt_costs(plusone)): 74
New best heuristic value for cea(transform = adapt_costs(plusone)): 49
New best heuristic value for cea(transform = adapt_costs(plusone)): 30
New best heuristic value for cea(transform = adapt_costs(plusone)): 17
No solution - FAILED
Actual search time: 0.00299022s
Expanded 80 state(s).
Reopened 0 state(s).
Evaluated 84 state(s).
Evaluations: 84
Generated 130 state(s).
Dead ends: 4 state(s).
EHC phases: 13
Average expansions per EHC phase: 6.15385
EHC phases of depth 1: 12 - Avg. Expansions: 1.08333
EHC phases of depth 19: 1 - Avg. Expansions: 66
No solution found - keep searching
No solution found - keep searching
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Starting search: lazy(alt(list(single(sum(list(weight(g, 2), weight(hff, 3)))), single(sum(list(weight(g, 2), weight(hff, 3))), pref_only = true), single(sum(list(weight(g, 2), weight(hcg, 3)))), single(sum(list(weight(g, 2), weight(hcg, 3))), pref_only = true), single(sum(list(weight(g, 2), weight(hcea, 3)))), single(sum(list(weight(g, 2), weight(hcea, 3))), pref_only = true), single(sum(list(weight(g, 2), weight(hgc, 3)))), single(sum(list(weight(g, 2), weight(hgc, 3))), pref_only = true)), boost = 200), preferred = list(hcea, hgc), reopen_closed = false, cost_type = one)
Conducting lazy best first search, (real) bound = 2147483647
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 6
New best heuristic value for cea(transform = adapt_costs(plusone)): 540
New best heuristic value for ff: 40
New best heuristic value for cg(transform = adapt_costs(one)): 52
g=0, 1 evaluated, 0 expanded
Initial heuristic value for goalcount(transform = adapt_costs(plusone)): 6
Initial heuristic value for cea(transform = adapt_costs(plusone)): 540
Initial heuristic value for ff: 40
Initial heuristic value for cg(transform = adapt_costs(one)): 52
New best heuristic value for cea(transform = adapt_costs(plusone)): 449
New best heuristic value for ff: 39
New best heuristic value for cg(transform = adapt_costs(one)): 46
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 444
g=2, 3 evaluated, 2 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 40
g=2, 5 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 34
g=3, 6 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 28
g=4, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 22
g=5, 9 evaluated, 8 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 16
g=6, 10 evaluated, 9 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=7, 14 evaluated, 13 expanded
New best heuristic value for ff: 38
g=8, 18 evaluated, 17 expanded
New best heuristic value for ff: 35
g=19, 89 evaluated, 86 expanded
New best heuristic value for ff: 34
g=20, 90 evaluated, 87 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 417
New best heuristic value for ff: 30
g=21, 91 evaluated, 88 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 350
New best heuristic value for ff: 27
g=22, 92 evaluated, 89 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 289
g=23, 93 evaluated, 90 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 234
New best heuristic value for ff: 25
g=24, 94 evaluated, 91 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 185
New best heuristic value for ff: 22
g=25, 95 evaluated, 92 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 142
g=26, 96 evaluated, 93 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 105
New best heuristic value for ff: 19
g=27, 97 evaluated, 94 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 74
New best heuristic value for ff: 18
g=28, 98 evaluated, 95 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 49
New best heuristic value for ff: 15
g=29, 99 evaluated, 96 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 30
g=30, 100 evaluated, 97 expanded
New best heuristic value for ff: 14
g=31, 101 evaluated, 98 expanded
New best heuristic value for ff: 12
g=32, 102 evaluated, 99 expanded
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 5
New best heuristic value for cea(transform = adapt_costs(plusone)): 17
New best heuristic value for ff: 10
New best heuristic value for cg(transform = adapt_costs(one)): 11
g=31, 105 evaluated, 102 expanded
New best heuristic value for ff: 9
g=32, 623 evaluated, 616 expanded
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 4
New best heuristic value for cea(transform = adapt_costs(plusone)): 14
New best heuristic value for cg(transform = adapt_costs(one)): 10
g=75, 3432 evaluated, 3414 expanded
New best heuristic value for ff: 8
New best heuristic value for cg(transform = adapt_costs(one)): 9
g=76, 3433 evaluated, 3415 expanded
New best heuristic value for ff: 7
g=76, 3434 evaluated, 3416 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 8
g=77, 3436 evaluated, 3418 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 13
g=82, 3449 evaluated, 3429 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 12
g=83, 3450 evaluated, 3430 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 10
New best heuristic value for ff: 6
g=78, 3750 evaluated, 3713 expanded
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 3
New best heuristic value for cea(transform = adapt_costs(plusone)): 6
New best heuristic value for ff: 5
New best heuristic value for cg(transform = adapt_costs(one)): 6
g=122, 2007704 evaluated, 1999368 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 5
New best heuristic value for cg(transform = adapt_costs(one)): 5
g=123, 2007706 evaluated, 1999370 expanded
New best heuristic value for ff: 4
g=125, 2007721 evaluated, 1999385 expanded
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 2
g=174, 4476968 evaluated, 4459048 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 3
New best heuristic value for ff: 3
New best heuristic value for cg(transform = adapt_costs(one)): 3
g=175, 4476969 evaluated, 4459049 expanded
Peak memory: 3208388 KB
caught signal 24 -- exiting
Time limit has been reached.
search exit code: 23

Driver aborting after search
