INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/translate/translate.py domain.pddl task.pddl --sas-file plans/seq-sat-fdss-2018.sas
Parsing...
Parsing: [0.010s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.010s wall-clock]
Generated 49 rules.
Computing model... [0.050s CPU, 0.054s wall-clock]
1248 relevant atoms
1834 auxiliary atoms
3082 final queue length
3297 total queue pushes
Completing instantiation... [0.020s CPU, 0.014s wall-clock]
Instantiating: [0.090s CPU, 0.091s wall-clock]
Computing fact groups...
Finding invariants...
4 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
45 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.019s wall-clock]
80 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.006s wall-clock]
Reordering and filtering variables...
46 of 46 variables necessary.
0 of 1 mutex groups necessary.
234 of 234 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 46
Translator derived variables: 0
Translator facts: 151
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 234
Translator axioms: 0
Translator task size: 1341
Translator peak memory: 245356 KB
Writing output... [0.010s CPU, 0.002s wall-clock]
Done! [0.140s CPU, 0.137s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search portfolio: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/driver/portfolios/seq_sat_fdss_2018.py
Exit codes: <generator object run_sat at 0x7f6b01733c10>
remaining time: 1800.0
config 0: relative time 26, remaining 1583
g bound: infinity
next plan number: 1
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy(alt([single(hff),single(hff,pref_only=true),single(hlm),single(hlm,pref_only=true),type_based([hff,g()])],boost=1000),preferred=[hff,hlm],cost_type=one,reopen_closed=false,randomize_successors=true,preferred_successors_first=false,bound=infinity)', '--internal-previous-portfolio-plans', '0', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 29.5641187618446s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy(alt([single(hff),single(hff,pref_only=true),single(hlm),single(hlm,pref_only=true),type_based([hff,g()])],boost=1000),preferred=[hff,hlm],cost_type=one,reopen_closed=false,randomize_successors=true,preferred_successors_first=false,bound=infinity)' --internal-previous-portfolio-plans 0 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00697258s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.00098569s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 2147483647
21 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
New best heuristic value for ff(transform = adapt_costs(one)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
Initial heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 37
New best heuristic value for ff(transform = adapt_costs(one)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=9, 23 evaluated, 22 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 35
g=22, 1687 evaluated, 1673 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 33
New best heuristic value for ff(transform = adapt_costs(one)): 35
g=23, 1688 evaluated, 1674 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 31
New best heuristic value for ff(transform = adapt_costs(one)): 34
g=24, 1689 evaluated, 1675 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 29
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=25, 1690 evaluated, 1676 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 27
g=26, 1691 evaluated, 1677 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 25
New best heuristic value for ff(transform = adapt_costs(one)): 28
g=27, 1692 evaluated, 1678 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 23
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=28, 1693 evaluated, 1679 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 21
New best heuristic value for ff(transform = adapt_costs(one)): 23
g=29, 1694 evaluated, 1680 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 19
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=30, 1695 evaluated, 1681 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 17
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=31, 1696 evaluated, 1682 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 15
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=32, 1697 evaluated, 1683 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 13
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=33, 1698 evaluated, 1684 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 11
g=34, 1699 evaluated, 1685 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=35, 1700 evaluated, 1686 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 12
g=36, 1701 evaluated, 1687 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 9
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=35, 1703 evaluated, 1689 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 8
g=37, 1707 evaluated, 1693 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 7
g=41, 1717 evaluated, 1703 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=149, 6291 evaluated, 6227 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 6
g=150, 6293 evaluated, 6229 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 5
g=140, 20015 evaluated, 19833 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 4
g=141, 20031 evaluated, 19849 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=207, 20520 evaluated, 20334 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=203, 21903 evaluated, 21683 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 3
g=205, 21905 evaluated, 21685 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 2
g=195, 95597 evaluated, 94616 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 1
g=243, 106753 evaluated, 105683 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=309, 109495 evaluated, 108408 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=310, 109496 evaluated, 108409 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 1
g=311, 109497 evaluated, 108410 expanded
Solution found!
Actual search time: 3.26727s
walk-down p8-12 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
push-left p4-9 p4-8 p4-7 (1)
push-left p4-8 p4-7 p4-6 (1)
push-down p4-7 p3-7 p2-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-up p7-19 p8-19 (1)
walk-right p8-19 p8-20 (1)
push-down p8-20 p7-20 p6-20 (1)
walk-up p7-20 p8-20 (1)
walk-left p8-20 p8-19 (1)
walk-left p8-19 p8-18 (1)
walk-left p8-18 p8-17 (1)
walk-down p8-17 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-left p7-9 p7-8 (1)
walk-left p7-8 p7-7 (1)
walk-left p7-7 p7-6 (1)
walk-left p7-6 p7-5 (1)
push-down p7-5 p6-5 p5-5 (1)
push-down p6-5 p5-5 p4-5 (1)
walk-up p5-5 p6-5 (1)
walk-up p6-5 p7-5 (1)
walk-right p7-5 p7-6 (1)
walk-right p7-6 p7-7 (1)
walk-right p7-7 p7-8 (1)
walk-right p7-8 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-left p6-3 p6-2 (1)
walk-left p6-2 p6-1 (1)
walk-up p6-1 p7-1 (1)
push-right p7-1 p7-2 p7-3 (1)
push-right p7-2 p7-3 p7-4 (1)
push-right p7-3 p7-4 p7-5 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-down p7-18 p6-18 (1)
walk-right p6-18 p6-19 (1)
push-up p6-19 p7-19 p8-19 (1)
walk-left p7-19 p7-18 (1)
walk-up p7-18 p8-18 (1)
push-right p8-18 p8-19 p8-20 (1)
walk-left p8-19 p8-18 (1)
walk-left p8-18 p8-17 (1)
walk-down p8-17 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-left p7-9 p7-8 (1)
walk-left p7-8 p7-7 (1)
walk-left p7-7 p7-6 (1)
walk-left p7-6 p7-5 (1)
walk-left p7-5 p7-4 (1)
walk-left p7-4 p7-3 (1)
walk-down p7-3 p6-3 (1)
walk-down p6-3 p5-3 (1)
walk-down p5-3 p4-3 (1)
walk-right p4-3 p4-4 (1)
walk-right p4-4 p4-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-up p7-18 p8-18 (1)
walk-right p8-18 p8-19 (1)
push-down p8-19 p7-19 p6-19 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-left p4-7 p4-6 (1)
walk-down p4-6 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-left p1-6 p1-5 (1)
push-up p1-5 p2-5 p3-5 (1)
push-up p2-5 p3-5 p4-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-right p1-6 p1-7 (1)
push-up p1-7 p2-7 p3-7 (1)
push-up p2-7 p3-7 p4-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
walk-up p3-5 p4-5 (1)
walk-up p4-5 p5-5 (1)
walk-up p5-5 p6-5 (1)
walk-up p6-5 p7-5 (1)
walk-right p7-5 p7-6 (1)
walk-right p7-6 p7-7 (1)
walk-right p7-7 p7-8 (1)
walk-right p7-8 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
push-left p4-8 p4-7 p4-6 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-down p7-17 p6-17 (1)
walk-right p6-17 p6-18 (1)
push-up p6-18 p7-18 p8-18 (1)
walk-left p7-18 p7-17 (1)
walk-up p7-17 p8-17 (1)
push-right p8-17 p8-18 p8-19 (1)
Plan length: 312 step(s).
Plan cost: 312
Expanded 108411 state(s).
Reopened 0 state(s).
Evaluated 109498 state(s).
Evaluations: 217910
Generated 271105 state(s).
Dead ends: 1086 state(s).
Number of registered states: 109498
Int hash set load factor: 109498/131072 = 0.835403
Int hash set resizes: 17
Search time: 3.26727s
Total time: 3.27917s
Solution found.
Peak memory: 23972 KB
exitcode: 0

plan manager: found new plan with cost 312
remaining time: 1796.72
config 1: relative time 25, remaining 1557
g bound: 312
next plan number: 2
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_rhw(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=true)', '--evaluator', 'hlm=lmcount(lmg,admissible=true,transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy(alt([type_based([g()]),single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true)],boost=0),preferred=[hlm],reopen_closed=false,cost_type=plusone,bound=312)', '--internal-previous-portfolio-plans', '1', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 28.84906872190109s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_rhw(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=true)' --evaluator 'hlm=lmcount(lmg,admissible=true,transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy(alt([type_based([g()]),single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true)],boost=0),preferred=[hlm],reopen_closed=false,cost_type=plusone,bound=312)' --internal-previous-portfolio-plans 1 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
Removing all orderings.
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00598249s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
0 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 312
21 initial landmarks, 6 goal landmarks
New best heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 23
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 40
Initial heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 23
New best heuristic value for ff(transform = adapt_costs(one)): 39
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 22
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 20
g=3, 4 evaluated, 3 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 19
g=9, 23 evaluated, 22 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=7, 26 evaluated, 25 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 18
g=18, 1179 evaluated, 1171 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 37
g=19, 1182 evaluated, 1174 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 35
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 17
g=19, 1185 evaluated, 1177 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 34
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 16
g=20, 1186 evaluated, 1178 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 15
g=21, 1188 evaluated, 1180 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 14
g=22, 1190 evaluated, 1182 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 13
g=23, 1192 evaluated, 1184 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 12
g=24, 1195 evaluated, 1187 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 11
g=25, 1197 evaluated, 1189 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 10
g=26, 1199 evaluated, 1191 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 19
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 9
g=27, 1202 evaluated, 1194 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 8
g=28, 1204 evaluated, 1196 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 15
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 7
g=29, 1206 evaluated, 1198 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 6
g=30, 1208 evaluated, 1200 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=31, 1210 evaluated, 1202 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 12
g=32, 1211 evaluated, 1203 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 5
g=31, 1217 evaluated, 1209 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=32, 1218 evaluated, 1210 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 4
g=72, 4146 evaluated, 4125 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 3
g=138, 380119 evaluated, 376584 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=141, 380136 evaluated, 376601 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 2
g=190, 434131 evaluated, 430312 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=189, 434142 evaluated, 430323 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(one)): 1
g=246, 447900 evaluated, 444023 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 1
g=247, 447902 evaluated, 444025 expanded
Solution found!
Actual search time: 12.6195s
walk-down p8-12 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-left p7-9 p7-8 (1)
walk-left p7-8 p7-7 (1)
walk-left p7-7 p7-6 (1)
push-left p7-6 p7-5 p7-4 (1)
walk-right p7-5 p7-6 (1)
walk-right p7-6 p7-7 (1)
walk-right p7-7 p7-8 (1)
walk-right p7-8 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
push-left p4-9 p4-8 p4-7 (1)
push-left p4-8 p4-7 p4-6 (1)
push-down p4-7 p3-7 p2-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-right p1-6 p1-7 (1)
push-up p1-7 p2-7 p3-7 (1)
walk-left p2-7 p2-6 (1)
walk-up p2-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-right p4-5 p4-6 p4-7 (1)
walk-left p4-6 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
push-right p7-3 p7-4 p7-5 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-left p7-9 p7-8 (1)
walk-left p7-8 p7-7 (1)
walk-left p7-7 p7-6 (1)
walk-left p7-6 p7-5 (1)
walk-left p7-5 p7-4 (1)
walk-left p7-4 p7-3 (1)
walk-down p7-3 p6-3 (1)
walk-left p6-3 p6-2 (1)
walk-left p6-2 p6-1 (1)
walk-up p6-1 p7-1 (1)
push-right p7-1 p7-2 p7-3 (1)
push-right p7-2 p7-3 p7-4 (1)
push-right p7-3 p7-4 p7-5 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-down p7-17 p6-17 (1)
walk-right p6-17 p6-18 (1)
push-up p6-18 p7-18 p8-18 (1)
walk-left p7-18 p7-17 (1)
walk-up p7-17 p8-17 (1)
push-right p8-17 p8-18 p8-19 (1)
walk-left p8-18 p8-17 (1)
walk-down p8-17 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
push-left p4-8 p4-7 p4-6 (1)
push-down p4-7 p3-7 p2-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
walk-up p3-5 p4-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-up p7-17 p8-17 (1)
walk-right p8-17 p8-18 (1)
push-down p8-18 p7-18 p6-18 (1)
walk-left p7-18 p7-17 (1)
walk-down p7-17 p6-17 (1)
push-right p6-17 p6-18 p6-19 (1)
push-right p6-18 p6-19 p6-20 (1)
walk-left p6-19 p6-18 (1)
walk-up p6-18 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-up p7-17 p8-17 (1)
walk-right p8-17 p8-18 (1)
push-right p8-18 p8-19 p8-20 (1)
walk-left p8-19 p8-18 (1)
push-down p8-18 p7-18 p6-18 (1)
walk-left p7-18 p7-17 (1)
walk-down p7-17 p6-17 (1)
push-right p6-17 p6-18 p6-19 (1)
walk-up p6-18 p7-18 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-left p1-6 p1-5 (1)
push-up p1-5 p2-5 p3-5 (1)
push-up p2-5 p3-5 p4-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-right p1-6 p1-7 (1)
push-up p1-7 p2-7 p3-7 (1)
push-up p2-7 p3-7 p4-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
walk-up p3-5 p4-5 (1)
walk-up p4-5 p5-5 (1)
walk-up p5-5 p6-5 (1)
walk-up p6-5 p7-5 (1)
walk-right p7-5 p7-6 (1)
walk-right p7-6 p7-7 (1)
walk-right p7-7 p7-8 (1)
walk-right p7-8 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
push-left p4-8 p4-7 p4-6 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-down p7-17 p6-17 (1)
walk-right p6-17 p6-18 (1)
push-up p6-18 p7-18 p8-18 (1)
walk-left p7-18 p7-17 (1)
walk-up p7-17 p8-17 (1)
push-right p8-17 p8-18 p8-19 (1)
Plan length: 308 step(s).
Plan cost: 308
Expanded 494416 state(s).
Reopened 0 state(s).
Evaluated 498535 state(s).
Evaluations: 997070
Generated 1227462 state(s).
Dead ends: 4118 state(s).
Number of registered states: 498535
Int hash set load factor: 498535/1048576 = 0.47544
Int hash set resizes: 20
Search time: 12.6195s
Total time: 12.6295s
Solution found.
Peak memory: 57644 KB
exitcode: 0

plan manager: found new plan with cost 308
remaining time: 1784.07
config 2: relative time 135, remaining 1532
g bound: 308
next plan number: 3
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy(alt([single(hff),single(hff,pref_only=true),single(hlm),single(hlm,pref_only=true)],boost=1000),preferred=[hff,hlm],cost_type=one,reopen_closed=false,randomize_successors=false,preferred_successors_first=true,bound=308)', '--internal-previous-portfolio-plans', '2', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 157.21243472584854s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy(alt([single(hff),single(hff,pref_only=true),single(hlm),single(hlm,pref_only=true)],boost=1000),preferred=[hff,hlm],cost_type=one,reopen_closed=false,randomize_successors=false,preferred_successors_first=true,bound=308)' --internal-previous-portfolio-plans 2 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00698892s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 308
21 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
New best heuristic value for ff(transform = adapt_costs(one)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
Initial heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 37
New best heuristic value for ff(transform = adapt_costs(one)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=8, 15 evaluated, 14 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 35
g=22, 2384 evaluated, 2363 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 33
New best heuristic value for ff(transform = adapt_costs(one)): 35
g=23, 2385 evaluated, 2364 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 31
New best heuristic value for ff(transform = adapt_costs(one)): 34
g=24, 2386 evaluated, 2365 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 29
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=25, 2387 evaluated, 2366 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 27
g=26, 2388 evaluated, 2367 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 25
New best heuristic value for ff(transform = adapt_costs(one)): 28
g=27, 2389 evaluated, 2368 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 23
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=28, 2390 evaluated, 2369 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 21
New best heuristic value for ff(transform = adapt_costs(one)): 23
g=29, 2391 evaluated, 2370 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 19
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=30, 2392 evaluated, 2371 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 17
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=31, 2393 evaluated, 2372 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 15
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=32, 2394 evaluated, 2373 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 13
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=33, 2395 evaluated, 2374 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 11
g=34, 2396 evaluated, 2375 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 9
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=35, 2397 evaluated, 2376 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 8
g=37, 2399 evaluated, 2378 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 7
g=41, 2414 evaluated, 2393 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=149, 7766 evaluated, 7683 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 6
g=150, 7768 evaluated, 7684 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 5
g=86, 53206 evaluated, 52358 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 4
g=87, 53221 evaluated, 52373 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=179, 56212 evaluated, 55347 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 3
g=181, 56877 evaluated, 56004 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 2
g=229, 63927 evaluated, 63015 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=228, 66307 evaluated, 65368 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=229, 66308 evaluated, 65369 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 1
g=225, 103696 evaluated, 102601 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=292, 106219 evaluated, 105102 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 1
g=293, 106220 evaluated, 105103 expanded
Solution found!
Actual search time: 3.22813s
walk-down p8-12 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
push-left p4-9 p4-8 p4-7 (1)
push-left p4-8 p4-7 p4-6 (1)
push-down p4-7 p3-7 p2-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-down p7-19 p6-19 (1)
walk-right p6-19 p6-20 (1)
push-up p6-20 p7-20 p8-20 (1)
walk-left p7-20 p7-19 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-left p7-9 p7-8 (1)
walk-left p7-8 p7-7 (1)
walk-left p7-7 p7-6 (1)
walk-left p7-6 p7-5 (1)
push-down p7-5 p6-5 p5-5 (1)
push-down p6-5 p5-5 p4-5 (1)
walk-up p5-5 p6-5 (1)
walk-up p6-5 p7-5 (1)
walk-left p7-5 p7-4 (1)
walk-left p7-4 p7-3 (1)
walk-down p7-3 p6-3 (1)
walk-left p6-3 p6-2 (1)
walk-left p6-2 p6-1 (1)
walk-up p6-1 p7-1 (1)
push-right p7-1 p7-2 p7-3 (1)
push-right p7-2 p7-3 p7-4 (1)
push-right p7-3 p7-4 p7-5 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-up p7-18 p8-18 (1)
walk-right p8-18 p8-19 (1)
push-down p8-19 p7-19 p6-19 (1)
walk-left p7-19 p7-18 (1)
walk-down p7-18 p6-18 (1)
push-right p6-18 p6-19 p6-20 (1)
walk-up p6-19 p7-19 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-down p7-18 p6-18 (1)
walk-right p6-18 p6-19 (1)
push-up p6-19 p7-19 p8-19 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-left p1-6 p1-5 (1)
push-up p1-5 p2-5 p3-5 (1)
push-up p2-5 p3-5 p4-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-right p1-6 p1-7 (1)
push-up p1-7 p2-7 p3-7 (1)
push-up p2-7 p3-7 p4-7 (1)
walk-left p3-7 p3-6 (1)
walk-up p3-6 p4-6 (1)
walk-left p4-6 p4-5 (1)
walk-up p4-5 p5-5 (1)
walk-up p5-5 p6-5 (1)
walk-up p6-5 p7-5 (1)
walk-right p7-5 p7-6 (1)
walk-right p7-6 p7-7 (1)
walk-right p7-7 p7-8 (1)
walk-right p7-8 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
push-left p4-8 p4-7 p4-6 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-up p7-17 p8-17 (1)
walk-right p8-17 p8-18 (1)
push-down p8-18 p7-18 p6-18 (1)
walk-left p7-18 p7-17 (1)
walk-down p7-17 p6-17 (1)
push-right p6-17 p6-18 p6-19 (1)
Plan length: 294 step(s).
Plan cost: 294
Expanded 105105 state(s).
Reopened 0 state(s).
Evaluated 106222 state(s).
Evaluations: 211328
Generated 264259 state(s).
Dead ends: 1116 state(s).
Number of registered states: 106222
Int hash set load factor: 106222/131072 = 0.81041
Int hash set resizes: 17
Search time: 3.22813s
Total time: 3.23908s
Solution found.
Peak memory: 18824 KB
exitcode: 0

plan manager: found new plan with cost 294
remaining time: 1780.83
config 3: relative time 59, remaining 1397
g bound: 294
next plan number: 4
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--search', 'eager_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,bound=294)', '--internal-previous-portfolio-plans', '3', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 75.21042949176808s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --search 'eager_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,bound=294)' --internal-previous-portfolio-plans 3 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00698463s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search without reopening closed nodes, (real) bound = 294
21 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
New best heuristic value for ff(transform = adapt_costs(one)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
Initial heuristic value for ff(transform = adapt_costs(one)): 40
pruning method: none
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 37
New best heuristic value for ff(transform = adapt_costs(one)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=8, 22 evaluated, 15 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 35
g=28, 441 evaluated, 368 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 37
g=29, 444 evaluated, 369 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 33
New best heuristic value for ff(transform = adapt_costs(one)): 36
g=29, 445 evaluated, 369 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 31
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=30, 446 evaluated, 370 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 29
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=31, 449 evaluated, 371 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 31
g=32, 450 evaluated, 372 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 27
New best heuristic value for ff(transform = adapt_costs(one)): 29
g=32, 451 evaluated, 372 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 25
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=33, 453 evaluated, 373 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 23
New best heuristic value for ff(transform = adapt_costs(one)): 26
g=34, 456 evaluated, 374 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=35, 458 evaluated, 375 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 21
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=35, 459 evaluated, 375 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 19
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=36, 461 evaluated, 376 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 21
g=37, 463 evaluated, 377 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 17
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=37, 464 evaluated, 377 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 15
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=38, 466 evaluated, 378 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 13
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=39, 468 evaluated, 379 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 11
g=40, 470 evaluated, 380 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=41, 471 evaluated, 381 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 9
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=41, 474 evaluated, 381 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=42, 475 evaluated, 382 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 8
g=43, 484 evaluated, 385 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 7
g=47, 515 evaluated, 410 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=87, 1549 evaluated, 1260 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 6
g=88, 1551 evaluated, 1262 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 5
g=92, 4078 evaluated, 3406 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 4
g=93, 4105 evaluated, 3424 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=147, 9281 evaluated, 7366 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 3
g=149, 9288 evaluated, 7369 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 2
g=199, 11027 evaluated, 8792 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=198, 42944 evaluated, 36363 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=199, 42948 evaluated, 36364 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=230, 192740 evaluated, 168682 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 1
New best heuristic value for ff(transform = adapt_costs(one)): 1
g=267, 1266391 evaluated, 1106514 expanded
Peak memory: 104444 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1706.08
config 4: relative time 23, remaining 1338
g bound: 294
next plan number: 4
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy(alt([single(hff),single(hff,pref_only=true),single(hlm),single(hlm,pref_only=true)],boost=1000),preferred=[hff,hlm],cost_type=one,reopen_closed=false,randomize_successors=true,preferred_successors_first=true,bound=294)', '--internal-previous-portfolio-plans', '3', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 29.327234678624812s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy(alt([single(hff),single(hff,pref_only=true),single(hlm),single(hlm,pref_only=true)],boost=1000),preferred=[hff,hlm],cost_type=one,reopen_closed=false,randomize_successors=true,preferred_successors_first=true,bound=294)' --internal-previous-portfolio-plans 3 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00696398s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 294
21 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
New best heuristic value for ff(transform = adapt_costs(one)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
Initial heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 37
New best heuristic value for ff(transform = adapt_costs(one)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=8, 17 evaluated, 16 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 35
g=28, 2392 evaluated, 2371 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 33
New best heuristic value for ff(transform = adapt_costs(one)): 36
g=29, 2393 evaluated, 2372 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 31
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=30, 2394 evaluated, 2373 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 29
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=31, 2395 evaluated, 2374 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 27
New best heuristic value for ff(transform = adapt_costs(one)): 29
g=32, 2396 evaluated, 2375 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 25
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=33, 2397 evaluated, 2376 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 23
New best heuristic value for ff(transform = adapt_costs(one)): 26
g=34, 2398 evaluated, 2377 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 21
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=35, 2399 evaluated, 2378 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 19
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=36, 2400 evaluated, 2379 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 17
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=37, 2401 evaluated, 2380 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 15
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=38, 2402 evaluated, 2381 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 13
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=39, 2403 evaluated, 2382 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 11
g=40, 2404 evaluated, 2383 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=41, 2405 evaluated, 2384 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 12
g=42, 2406 evaluated, 2385 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 9
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=41, 2408 evaluated, 2387 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 8
g=43, 2412 evaluated, 2391 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 7
g=47, 2423 evaluated, 2402 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=151, 8631 evaluated, 8539 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 6
g=152, 8633 evaluated, 8540 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 5
g=94, 66116 evaluated, 65129 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 4
g=95, 66135 evaluated, 65148 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=149, 74652 evaluated, 73612 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 3
g=151, 74657 evaluated, 73617 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 2
g=201, 79371 evaluated, 78303 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=200, 106336 evaluated, 105150 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 3
g=201, 106337 evaluated, 105151 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 1
g=283, 271193 evaluated, 269064 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 2
g=286, 290834 evaluated, 288584 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 1
g=287, 290835 evaluated, 288585 expanded
Peak memory: 98364 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1677.17
config 5: relative time 57, remaining 1315
g bound: 294
next plan number: 4
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_rhw(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=true)', '--evaluator', 'hcg=cg(transform=adapt_costs(plusone))', '--evaluator', 'hlm=lmcount(lmg,admissible=true,transform=adapt_costs(plusone))', '--evaluator', 'hff=ff(transform=adapt_costs(plusone))', '--search', 'lazy(alt([single(sum([g(),weight(hlm,10)])),single(sum([g(),weight(hlm,10)]),pref_only=true),single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true),single(sum([g(),weight(hcg,10)])),single(sum([g(),weight(hcg,10)]),pref_only=true)],boost=1000),preferred=[hlm,hcg],reopen_closed=false,cost_type=plusone,bound=294)', '--internal-previous-portfolio-plans', '3', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 72.69862357414449s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_rhw(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=true)' --evaluator 'hcg=cg(transform=adapt_costs(plusone))' --evaluator 'hlm=lmcount(lmg,admissible=true,transform=adapt_costs(plusone))' --evaluator 'hff=ff(transform=adapt_costs(plusone))' --search 'lazy(alt([single(sum([g(),weight(hlm,10)])),single(sum([g(),weight(hlm,10)]),pref_only=true),single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true),single(sum([g(),weight(hcg,10)])),single(sum([g(),weight(hcg,10)]),pref_only=true)],boost=1000),preferred=[hlm,hcg],reopen_closed=false,cost_type=plusone,bound=294)' --internal-previous-portfolio-plans 3 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
Removing all orderings.
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00597193s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
0 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 294
21 initial landmarks, 6 goal landmarks
New best heuristic value for ff(transform = adapt_costs(plusone)): 40
New best heuristic value for cg(transform = adapt_costs(plusone)): 52
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 23
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(plusone)): 40
Initial heuristic value for cg(transform = adapt_costs(plusone)): 52
Initial heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 23
New best heuristic value for ff(transform = adapt_costs(plusone)): 39
New best heuristic value for cg(transform = adapt_costs(plusone)): 46
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 22
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 20
g=3, 4 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 40
g=2, 5 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 34
g=3, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 28
g=4, 9 evaluated, 8 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 22
g=5, 11 evaluated, 10 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 16
g=6, 13 evaluated, 12 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 15
g=8, 16 evaluated, 15 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 14
g=9, 18 evaluated, 17 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 38
g=10, 22 evaluated, 21 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 19
g=9, 36 evaluated, 35 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 18
g=22, 257 evaluated, 255 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 36
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 17
g=23, 263 evaluated, 261 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 34
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 16
g=24, 264 evaluated, 262 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 30
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 15
g=25, 266 evaluated, 264 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 28
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 14
g=26, 268 evaluated, 266 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 27
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 13
g=27, 270 evaluated, 268 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 25
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 12
g=28, 272 evaluated, 270 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 22
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 11
g=29, 274 evaluated, 272 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 10
g=30, 276 evaluated, 274 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 19
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 9
g=31, 279 evaluated, 277 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 18
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 8
g=32, 281 evaluated, 279 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 15
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 7
g=33, 283 evaluated, 281 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 6
g=34, 285 evaluated, 283 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 10
New best heuristic value for cg(transform = adapt_costs(plusone)): 11
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 5
g=35, 286 evaluated, 284 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 9
g=36, 287 evaluated, 285 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 6
New best heuristic value for cg(transform = adapt_costs(plusone)): 8
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 4
g=84, 11531 evaluated, 11289 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 4
New best heuristic value for cg(transform = adapt_costs(plusone)): 5
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 3
g=158, 398353 evaluated, 395922 expanded
Peak memory: 130528 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1605.4499999999998
config 6: relative time 17, remaining 1258
g bound: 294
next plan number: 4
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcea=cea(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--search', 'lazy_greedy([hcea,hlm],preferred=[hcea,hlm],cost_type=one,bound=294)', '--internal-previous-portfolio-plans', '3', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 21.695270270270267s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcea=cea(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --search 'lazy_greedy([hcea,hlm],preferred=[hcea,hlm],cost_type=one,bound=294)' --internal-previous-portfolio-plans 3 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00694461s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.00101215s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 294
21 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
New best heuristic value for cea(transform = adapt_costs(one)): 540
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
Initial heuristic value for cea(transform = adapt_costs(one)): 540
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 37
New best heuristic value for cea(transform = adapt_costs(one)): 449
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 444
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 35
g=18, 400 evaluated, 399 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 33
g=19, 401 evaluated, 400 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 31
g=20, 402 evaluated, 401 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 29
New best heuristic value for cea(transform = adapt_costs(one)): 417
g=21, 403 evaluated, 402 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 27
New best heuristic value for cea(transform = adapt_costs(one)): 350
g=22, 404 evaluated, 403 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 25
New best heuristic value for cea(transform = adapt_costs(one)): 289
g=23, 405 evaluated, 404 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 23
New best heuristic value for cea(transform = adapt_costs(one)): 234
g=24, 406 evaluated, 405 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 21
New best heuristic value for cea(transform = adapt_costs(one)): 185
g=25, 407 evaluated, 406 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 19
New best heuristic value for cea(transform = adapt_costs(one)): 142
g=26, 408 evaluated, 407 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 17
New best heuristic value for cea(transform = adapt_costs(one)): 105
g=27, 409 evaluated, 408 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 15
New best heuristic value for cea(transform = adapt_costs(one)): 74
g=28, 410 evaluated, 409 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 13
New best heuristic value for cea(transform = adapt_costs(one)): 49
g=29, 411 evaluated, 410 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 11
New best heuristic value for cea(transform = adapt_costs(one)): 30
g=30, 412 evaluated, 411 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 9
New best heuristic value for cea(transform = adapt_costs(one)): 17
g=31, 415 evaluated, 414 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 8
g=33, 632 evaluated, 631 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 7
g=37, 644 evaluated, 643 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 12
g=75, 740 evaluated, 739 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 6
g=76, 741 evaluated, 740 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 5
g=80, 974 evaluated, 973 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 4
g=81, 984 evaluated, 983 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 10
g=72, 31765 evaluated, 31764 expanded
Peak memory: 53004 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1584.53
config 7: relative time 12, remaining 1241
g bound: 294
next plan number: 4
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hadd=add(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--search', 'lazy(alt([type_based([g()]),single(hadd),single(hadd,pref_only=true),single(hlm),single(hlm,pref_only=true)]),preferred=[hadd,hlm],cost_type=one,bound=294)', '--internal-previous-portfolio-plans', '3', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 15.321804995970991s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hadd=add(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --search 'lazy(alt([type_based([g()]),single(hadd),single(hadd,pref_only=true),single(hlm),single(hlm,pref_only=true)]),preferred=[hadd,hlm],cost_type=one,bound=294)' --internal-previous-portfolio-plans 3 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.000999758s
Initializing additive heuristic...
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00599589s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 294
21 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
New best heuristic value for add(transform = adapt_costs(one)): 540
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
Initial heuristic value for add(transform = adapt_costs(one)): 540
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 37
New best heuristic value for add(transform = adapt_costs(one)): 449
g=1, 2 evaluated, 1 expanded
New best heuristic value for add(transform = adapt_costs(one)): 444
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 35
g=20, 1154 evaluated, 1147 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 33
g=21, 1157 evaluated, 1150 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 31
g=22, 1158 evaluated, 1151 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 29
New best heuristic value for add(transform = adapt_costs(one)): 417
g=23, 1159 evaluated, 1152 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 27
New best heuristic value for add(transform = adapt_costs(one)): 350
g=24, 1161 evaluated, 1154 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 25
New best heuristic value for add(transform = adapt_costs(one)): 289
g=25, 1163 evaluated, 1156 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 23
New best heuristic value for add(transform = adapt_costs(one)): 234
g=26, 1164 evaluated, 1157 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 21
New best heuristic value for add(transform = adapt_costs(one)): 185
g=27, 1166 evaluated, 1159 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 19
New best heuristic value for add(transform = adapt_costs(one)): 142
g=28, 1168 evaluated, 1161 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 17
New best heuristic value for add(transform = adapt_costs(one)): 105
g=29, 1170 evaluated, 1163 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 15
New best heuristic value for add(transform = adapt_costs(one)): 74
g=30, 1172 evaluated, 1165 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 13
New best heuristic value for add(transform = adapt_costs(one)): 49
g=31, 1174 evaluated, 1167 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 11
New best heuristic value for add(transform = adapt_costs(one)): 30
g=32, 1176 evaluated, 1169 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 9
New best heuristic value for add(transform = adapt_costs(one)): 17
g=33, 1180 evaluated, 1173 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 8
g=35, 1189 evaluated, 1182 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 7
g=39, 1207 evaluated, 1200 expanded
New best heuristic value for add(transform = adapt_costs(one)): 12
g=77, 4913 evaluated, 4897 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 6
g=78, 4914 evaluated, 4898 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 5
g=82, 4928 evaluated, 4912 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 4
g=83, 4959 evaluated, 4943 expanded
New best heuristic value for add(transform = adapt_costs(one)): 10
g=74, 6550 evaluated, 6530 expanded
New best heuristic value for add(transform = adapt_costs(one)): 7
g=129, 21210 evaluated, 21013 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 3
g=131, 21215 evaluated, 21018 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 2
g=175, 37504 evaluated, 37141 expanded
New best heuristic value for add(transform = adapt_costs(one)): 6
g=222, 43388 evaluated, 42973 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 1
g=223, 43730 evaluated, 43309 expanded
New best heuristic value for add(transform = adapt_costs(one)): 5
g=286, 45352 evaluated, 44922 expanded
New best heuristic value for add(transform = adapt_costs(one)): 3
g=289, 45361 evaluated, 44930 expanded
New best heuristic value for add(transform = adapt_costs(one)): 2
g=290, 45365 evaluated, 44934 expanded
New best heuristic value for add(transform = adapt_costs(one)): 1
g=291, 45366 evaluated, 44935 expanded
Solution found!
Actual search time: 1.40573s
walk-down p8-12 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
push-left p4-9 p4-8 p4-7 (1)
push-left p4-8 p4-7 p4-6 (1)
push-down p4-7 p3-7 p2-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-down p7-19 p6-19 (1)
walk-right p6-19 p6-20 (1)
push-up p6-20 p7-20 p8-20 (1)
walk-down p7-20 p6-20 (1)
walk-left p6-20 p6-19 (1)
walk-left p6-19 p6-18 (1)
walk-left p6-18 p6-17 (1)
walk-up p6-17 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-left p7-9 p7-8 (1)
walk-left p7-8 p7-7 (1)
walk-left p7-7 p7-6 (1)
walk-left p7-6 p7-5 (1)
walk-left p7-5 p7-4 (1)
walk-left p7-4 p7-3 (1)
walk-down p7-3 p6-3 (1)
walk-left p6-3 p6-2 (1)
walk-left p6-2 p6-1 (1)
walk-up p6-1 p7-1 (1)
push-right p7-1 p7-2 p7-3 (1)
push-right p7-2 p7-3 p7-4 (1)
push-right p7-3 p7-4 p7-5 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-up p7-18 p8-18 (1)
walk-right p8-18 p8-19 (1)
push-down p8-19 p7-19 p6-19 (1)
walk-left p7-19 p7-18 (1)
walk-down p7-18 p6-18 (1)
push-right p6-18 p6-19 p6-20 (1)
walk-left p6-19 p6-18 (1)
walk-left p6-18 p6-17 (1)
walk-up p6-17 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-left p7-9 p7-8 (1)
walk-left p7-8 p7-7 (1)
walk-left p7-7 p7-6 (1)
walk-left p7-6 p7-5 (1)
walk-left p7-5 p7-4 (1)
walk-left p7-4 p7-3 (1)
walk-down p7-3 p6-3 (1)
walk-down p6-3 p5-3 (1)
walk-down p5-3 p4-3 (1)
walk-right p4-3 p4-4 (1)
walk-right p4-4 p4-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-down p7-18 p6-18 (1)
walk-right p6-18 p6-19 (1)
push-up p6-19 p7-19 p8-19 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-left p1-6 p1-5 (1)
push-up p1-5 p2-5 p3-5 (1)
push-up p2-5 p3-5 p4-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-right p1-6 p1-7 (1)
push-up p1-7 p2-7 p3-7 (1)
push-up p2-7 p3-7 p4-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
walk-up p3-5 p4-5 (1)
walk-up p4-5 p5-5 (1)
walk-up p5-5 p6-5 (1)
walk-up p6-5 p7-5 (1)
walk-right p7-5 p7-6 (1)
walk-right p7-6 p7-7 (1)
walk-right p7-7 p7-8 (1)
walk-right p7-8 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
push-left p4-8 p4-7 p4-6 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-up p7-17 p8-17 (1)
walk-right p8-17 p8-18 (1)
push-down p8-18 p7-18 p6-18 (1)
walk-left p7-18 p7-17 (1)
walk-down p7-17 p6-17 (1)
push-right p6-17 p6-18 p6-19 (1)
Plan length: 292 step(s).
Plan cost: 292
Expanded 44936 state(s).
Reopened 0 state(s).
Evaluated 45367 state(s).
Evaluations: 90304
Generated 114402 state(s).
Dead ends: 430 state(s).
Number of registered states: 45367
Int hash set load factor: 45367/65536 = 0.692245
Int hash set resizes: 16
Search time: 1.40573s
Total time: 1.41669s
Solution found.
Peak memory: 16448 KB
exitcode: 0

plan manager: found new plan with cost 292
remaining time: 1583.09
config 8: relative time 26, remaining 1229
g bound: 292
next plan number: 5
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy(alt([single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true)],boost=2000),preferred=[hff],reopen_closed=false,cost_type=one,bound=292)', '--internal-previous-portfolio-plans', '4', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 33.49091944670464s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy(alt([single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true)],boost=2000),preferred=[hff],reopen_closed=false,cost_type=one,bound=292)' --internal-previous-portfolio-plans 4 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 292
New best heuristic value for ff(transform = adapt_costs(one)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for ff(transform = adapt_costs(one)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=9, 21 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=34, 2527 evaluated, 2501 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=35, 2528 evaluated, 2502 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=37, 2530 evaluated, 2504 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=38, 2531 evaluated, 2505 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=39, 2532 evaluated, 2506 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=41, 2534 evaluated, 2508 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=42, 2535 evaluated, 2509 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=43, 2536 evaluated, 2510 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=45, 2538 evaluated, 2512 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 12
g=46, 2539 evaluated, 2513 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=45, 2544 evaluated, 2518 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=32, 13539 evaluated, 13395 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=80, 43642 evaluated, 43333 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 5
g=130, 1116317 evaluated, 1110981 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
g=133, 1116324 evaluated, 1110988 expanded
Peak memory: 80360 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1550.21
config 9: relative time 28, remaining 1203
g bound: 292
next plan number: 5
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--search', 'eager(alt([type_based([g()]),single(hcg),single(hcg,pref_only=true),single(hlm),single(hlm,pref_only=true)]),preferred=[hcg,hlm],cost_type=one,bound=292)', '--internal-previous-portfolio-plans', '4', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 36.08136325852037s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcg=cg(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --search 'eager(alt([type_based([g()]),single(hcg),single(hcg,pref_only=true),single(hlm),single(hlm,pref_only=true)]),preferred=[hcg,hlm],cost_type=one,bound=292)' --internal-previous-portfolio-plans 4 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00497333s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search without reopening closed nodes, (real) bound = 292
21 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
New best heuristic value for cg(transform = adapt_costs(one)): 52
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
Initial heuristic value for cg(transform = adapt_costs(one)): 52
pruning method: none
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 37
New best heuristic value for cg(transform = adapt_costs(one)): 46
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 40
g=2, 4 evaluated, 2 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 34
g=3, 5 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 28
g=4, 6 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 22
g=5, 8 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 16
g=6, 9 evaluated, 7 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=7, 12 evaluated, 8 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 35
g=20, 800 evaluated, 664 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 33
g=21, 805 evaluated, 667 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 31
g=22, 809 evaluated, 670 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 29
g=23, 814 evaluated, 672 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 27
g=24, 817 evaluated, 674 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 25
g=25, 821 evaluated, 676 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 23
g=26, 825 evaluated, 678 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 21
g=27, 829 evaluated, 680 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 19
g=28, 833 evaluated, 683 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 17
g=29, 837 evaluated, 685 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 15
g=30, 842 evaluated, 687 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 13
g=31, 848 evaluated, 690 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 11
g=32, 850 evaluated, 691 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 9
New best heuristic value for cg(transform = adapt_costs(one)): 11
g=33, 855 evaluated, 693 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 8
g=35, 863 evaluated, 696 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 7
g=39, 904 evaluated, 719 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 6
New best heuristic value for cg(transform = adapt_costs(one)): 9
g=77, 3472 evaluated, 2795 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 8
g=78, 3473 evaluated, 2796 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 5
g=79, 3481 evaluated, 2799 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 4
g=85, 3511 evaluated, 2817 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 3
New best heuristic value for cg(transform = adapt_costs(one)): 7
g=127, 20529 evaluated, 16950 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 2
New best heuristic value for cg(transform = adapt_costs(one)): 6
g=171, 31833 evaluated, 26359 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 5
g=172, 31834 evaluated, 26360 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 4
g=173, 31839 evaluated, 26362 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 1
New best heuristic value for cg(transform = adapt_costs(one)): 3
g=221, 48506 evaluated, 40673 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 2
g=222, 48508 evaluated, 40674 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 1
g=289, 52102 evaluated, 43863 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 0
New best heuristic value for cg(transform = adapt_costs(one)): 0
g=290, 52104 evaluated, 43864 expanded
Solution found!
Actual search time: 1.6286s
walk-down p8-12 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
push-left p4-9 p4-8 p4-7 (1)
push-left p4-8 p4-7 p4-6 (1)
push-down p4-7 p3-7 p2-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-down p7-19 p6-19 (1)
walk-right p6-19 p6-20 (1)
push-up p6-20 p7-20 p8-20 (1)
walk-left p7-20 p7-19 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-left p7-9 p7-8 (1)
walk-left p7-8 p7-7 (1)
walk-left p7-7 p7-6 (1)
walk-left p7-6 p7-5 (1)
walk-left p7-5 p7-4 (1)
walk-left p7-4 p7-3 (1)
walk-down p7-3 p6-3 (1)
walk-left p6-3 p6-2 (1)
walk-left p6-2 p6-1 (1)
walk-up p6-1 p7-1 (1)
push-right p7-1 p7-2 p7-3 (1)
push-right p7-2 p7-3 p7-4 (1)
push-right p7-3 p7-4 p7-5 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-up p7-18 p8-18 (1)
walk-right p8-18 p8-19 (1)
push-down p8-19 p7-19 p6-19 (1)
walk-left p7-19 p7-18 (1)
walk-down p7-18 p6-18 (1)
push-right p6-18 p6-19 p6-20 (1)
walk-up p6-19 p7-19 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
walk-up p3-5 p4-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-down p7-18 p6-18 (1)
walk-right p6-18 p6-19 (1)
push-up p6-19 p7-19 p8-19 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-left p1-6 p1-5 (1)
push-up p1-5 p2-5 p3-5 (1)
push-up p2-5 p3-5 p4-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-right p1-6 p1-7 (1)
push-up p1-7 p2-7 p3-7 (1)
push-up p2-7 p3-7 p4-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
walk-up p3-5 p4-5 (1)
walk-up p4-5 p5-5 (1)
walk-up p5-5 p6-5 (1)
walk-up p6-5 p7-5 (1)
walk-right p7-5 p7-6 (1)
walk-right p7-6 p7-7 (1)
walk-right p7-7 p7-8 (1)
walk-right p7-8 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
push-left p4-8 p4-7 p4-6 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-up p7-17 p8-17 (1)
walk-right p8-17 p8-18 (1)
push-down p8-18 p7-18 p6-18 (1)
walk-left p7-18 p7-17 (1)
walk-down p7-17 p6-17 (1)
push-right p6-17 p6-18 p6-19 (1)
Plan length: 288 step(s).
Plan cost: 288
Expanded 43865 state(s).
Reopened 0 state(s).
Evaluated 52104 state(s).
Evaluations: 191936
Generated 107394 state(s).
Dead ends: 0 state(s).
Number of registered states: 52104
Int hash set load factor: 52104/65536 = 0.795044
Int hash set resizes: 16
Search time: 1.6286s
Total time: 1.63856s
Solution found.
Peak memory: 15040 KB
exitcode: 0

plan manager: found new plan with cost 288
remaining time: 1548.57
config 10: relative time 29, remaining 1175
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_rhw(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=false)', '--evaluator', 'hcea=cea(transform=adapt_costs(plusone))', '--evaluator', 'hlm=lmcount(lmg,admissible=true,transform=adapt_costs(plusone))', '--evaluator', 'hff=ff(transform=adapt_costs(plusone))', '--search', 'lazy(alt([single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true),single(hcea),single(hcea,pref_only=true)],boost=0),preferred=[hlm,hcea],reopen_closed=false,cost_type=plusone,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 38.22002553191489s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_rhw(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=false)' --evaluator 'hcea=cea(transform=adapt_costs(plusone))' --evaluator 'hlm=lmcount(lmg,admissible=true,transform=adapt_costs(plusone))' --evaluator 'hff=ff(transform=adapt_costs(plusone))' --search 'lazy(alt([single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true),single(hcea),single(hcea,pref_only=true)],boost=0),preferred=[hlm,hcea],reopen_closed=false,cost_type=plusone,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00597557s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 136 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
21 initial landmarks, 6 goal landmarks
New best heuristic value for cea(transform = adapt_costs(plusone)): 540
New best heuristic value for ff(transform = adapt_costs(plusone)): 40
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 23
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cea(transform = adapt_costs(plusone)): 540
Initial heuristic value for ff(transform = adapt_costs(plusone)): 40
Initial heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 23
New best heuristic value for cea(transform = adapt_costs(plusone)): 449
New best heuristic value for ff(transform = adapt_costs(plusone)): 39
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 22
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 444
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 20
g=3, 4 evaluated, 3 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 38
g=7, 46 evaluated, 45 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 19
g=17, 354 evaluated, 351 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 18
g=18, 356 evaluated, 353 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 35
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 17
g=19, 358 evaluated, 355 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 34
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 16
g=20, 359 evaluated, 356 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 417
New best heuristic value for ff(transform = adapt_costs(plusone)): 30
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 15
g=21, 360 evaluated, 357 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 350
New best heuristic value for ff(transform = adapt_costs(plusone)): 27
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 14
g=22, 362 evaluated, 359 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 289
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 13
g=23, 364 evaluated, 361 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 234
New best heuristic value for ff(transform = adapt_costs(plusone)): 25
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 12
g=24, 366 evaluated, 363 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 185
New best heuristic value for ff(transform = adapt_costs(plusone)): 22
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 11
g=25, 368 evaluated, 365 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 142
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 10
g=26, 370 evaluated, 367 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 105
New best heuristic value for ff(transform = adapt_costs(plusone)): 19
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 9
g=27, 372 evaluated, 369 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 74
New best heuristic value for ff(transform = adapt_costs(plusone)): 18
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 8
g=28, 374 evaluated, 371 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 49
New best heuristic value for ff(transform = adapt_costs(plusone)): 15
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 7
g=29, 376 evaluated, 373 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 30
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 6
g=30, 378 evaluated, 375 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 14
g=31, 379 evaluated, 376 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 12
g=32, 380 evaluated, 377 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 17
New best heuristic value for ff(transform = adapt_costs(plusone)): 10
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 5
g=31, 385 evaluated, 382 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 9
g=32, 386 evaluated, 383 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 14
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 4
g=69, 527 evaluated, 523 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 8
g=70, 528 evaluated, 524 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 7
g=70, 530 evaluated, 526 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 13
g=76, 546 evaluated, 540 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 12
g=77, 548 evaluated, 542 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 10
New best heuristic value for ff(transform = adapt_costs(plusone)): 6
g=72, 51210 evaluated, 50186 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 8
New best heuristic value for ff(transform = adapt_costs(plusone)): 4
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 3
g=136, 578914 evaluated, 575038 expanded
New best heuristic value for cea(transform = adapt_costs(plusone)): 5
g=146, 579965 evaluated, 576084 expanded
Peak memory: 59508 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1510.72
config 11: relative time 88, remaining 1146
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcea=cea(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--search', 'lazy_wastar([hcea,hlm],w=3,preferred=[hcea,hlm],cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 116.00642233856895s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcea=cea(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --search 'lazy_wastar([hcea,hlm],w=3,preferred=[hcea,hlm],cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.0069728s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.00100646s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
21 initial landmarks, 6 goal landmarks
New best heuristic value for cea(transform = adapt_costs(one)): 540
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cea(transform = adapt_costs(one)): 540
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
New best heuristic value for cea(transform = adapt_costs(one)): 449
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 37
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 444
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 35
g=18, 75 evaluated, 74 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 33
g=19, 76 evaluated, 75 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 31
g=20, 77 evaluated, 76 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 417
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 29
g=21, 78 evaluated, 77 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 350
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 27
g=22, 79 evaluated, 78 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 289
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 25
g=23, 80 evaluated, 79 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 234
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 23
g=24, 81 evaluated, 80 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 185
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 21
g=25, 82 evaluated, 81 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 142
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 19
g=26, 83 evaluated, 82 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 105
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 17
g=27, 84 evaluated, 83 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 74
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 15
g=28, 85 evaluated, 84 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 49
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 13
g=29, 86 evaluated, 85 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 30
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 11
g=30, 87 evaluated, 86 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 17
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 9
g=31, 90 evaluated, 89 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 8
g=33, 633 evaluated, 632 expanded, 1 reopened
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 7
g=37, 660 evaluated, 659 expanded, 3 reopened
New best heuristic value for cea(transform = adapt_costs(one)): 14
g=69, 1590 evaluated, 1589 expanded, 48 reopened
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 6
g=75, 1605 evaluated, 1604 expanded, 48 reopened
New best heuristic value for cea(transform = adapt_costs(one)): 13
g=76, 1606 evaluated, 1605 expanded, 48 reopened
New best heuristic value for cea(transform = adapt_costs(one)): 12
g=77, 1607 evaluated, 1606 expanded, 48 reopened
New best heuristic value for cea(transform = adapt_costs(one)): 11
g=71, 3351 evaluated, 3350 expanded, 136 reopened
New best heuristic value for cea(transform = adapt_costs(one)): 10
g=72, 3352 evaluated, 3351 expanded, 136 reopened
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 5
g=75, 76998 evaluated, 76997 expanded, 12389 reopened
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 4
g=97, 733001 evaluated, 733000 expanded, 210463 reopened
New best heuristic value for cea(transform = adapt_costs(one)): 8
g=150, 1701027 evaluated, 1701026 expanded, 613361 reopened
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 3
g=160, 1703627 evaluated, 1703626 expanded, 613432 reopened
New best heuristic value for cea(transform = adapt_costs(one)): 6
g=161, 1708593 evaluated, 1708592 expanded, 613668 reopened
New best heuristic value for cea(transform = adapt_costs(one)): 5
g=162, 1708594 evaluated, 1708593 expanded, 613668 reopened
New best heuristic value for cea(transform = adapt_costs(one)): 3
g=242, 1711560 evaluated, 1711559 expanded, 613822 reopened
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 2
g=243, 1711562 evaluated, 1711561 expanded, 613822 reopened
Peak memory: 297392 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1395.1599999999999
config 12: relative time 8, remaining 1058
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy(alt([single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true),single(sum([g(),weight(hcg,10)])),single(sum([g(),weight(hcg,10)]),pref_only=true)],boost=100),preferred=[hcg],reopen_closed=false,cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 10.549413988657843s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcg=cg(transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy(alt([single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true),single(sum([g(),weight(hcg,10)])),single(sum([g(),weight(hcg,10)]),pref_only=true)],boost=100),preferred=[hcg],reopen_closed=false,cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
New best heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for cg(transform = adapt_costs(one)): 52
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 40
Initial heuristic value for cg(transform = adapt_costs(one)): 52
New best heuristic value for ff(transform = adapt_costs(one)): 39
New best heuristic value for cg(transform = adapt_costs(one)): 46
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 40
g=2, 4 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 34
g=3, 5 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 28
g=4, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 22
g=5, 8 evaluated, 7 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 16
g=6, 9 evaluated, 8 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 15
g=8, 12 evaluated, 11 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=9, 14 evaluated, 13 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=10, 17 evaluated, 16 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=34, 660 evaluated, 657 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=35, 664 evaluated, 661 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=37, 671 evaluated, 668 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=38, 673 evaluated, 670 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=39, 676 evaluated, 673 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 21
g=41, 681 evaluated, 678 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=41, 684 evaluated, 681 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=42, 686 evaluated, 683 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=43, 688 evaluated, 685 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
New best heuristic value for cg(transform = adapt_costs(one)): 11
g=45, 691 evaluated, 688 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=46, 692 evaluated, 689 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
New best heuristic value for cg(transform = adapt_costs(one)): 8
g=86, 1923 evaluated, 1912 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 4
New best heuristic value for cg(transform = adapt_costs(one)): 5
g=160, 66029 evaluated, 65675 expanded
Peak memory: 28368 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1385.21
config 13: relative time 54, remaining 1050
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hgoalcount=goalcount(transform=adapt_costs(plusone))', '--evaluator', 'hff=ff()', '--search', 'lazy(alt([single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true),single(sum([g(),weight(hgoalcount,10)])),single(sum([g(),weight(hgoalcount,10)]),pref_only=true)],boost=2000),preferred=[hff,hgoalcount],reopen_closed=false,cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 71.23937142857143s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hgoalcount=goalcount(transform=adapt_costs(plusone))' --evaluator 'hff=ff()' --search 'lazy(alt([single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true),single(sum([g(),weight(hgoalcount,10)])),single(sum([g(),weight(hgoalcount,10)]),pref_only=true)],boost=2000),preferred=[hff,hgoalcount],reopen_closed=false,cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing goal count heuristic...
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.000978981s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.00102156s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
New best heuristic value for ff: 40
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 6
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff: 40
Initial heuristic value for goalcount(transform = adapt_costs(plusone)): 6
New best heuristic value for ff: 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff: 38
g=9, 20 evaluated, 19 expanded
New best heuristic value for ff: 35
g=19, 2308 evaluated, 2282 expanded
New best heuristic value for ff: 34
g=20, 2309 evaluated, 2283 expanded
New best heuristic value for ff: 30
g=21, 2311 evaluated, 2285 expanded
New best heuristic value for ff: 27
g=22, 2313 evaluated, 2287 expanded
New best heuristic value for ff: 25
g=24, 2317 evaluated, 2291 expanded
New best heuristic value for ff: 22
g=25, 2319 evaluated, 2293 expanded
New best heuristic value for ff: 19
g=27, 2322 evaluated, 2296 expanded
New best heuristic value for ff: 18
g=28, 2324 evaluated, 2298 expanded
New best heuristic value for ff: 15
g=29, 2325 evaluated, 2299 expanded
New best heuristic value for ff: 14
g=31, 2329 evaluated, 2303 expanded
New best heuristic value for ff: 12
g=32, 2330 evaluated, 2304 expanded
New best heuristic value for ff: 10
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 5
g=31, 2339 evaluated, 2313 expanded
New best heuristic value for ff: 9
g=32, 18951 evaluated, 18745 expanded
New best heuristic value for ff: 6
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 4
g=74, 466455 evaluated, 463903 expanded
Peak memory: 240648 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1314.45
config 14: relative time 24, remaining 996
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--search', 'eager(alt([type_based([g()]),single(sum([g(),weight(hff,3)])),single(sum([g(),weight(hff,3)]),pref_only=true),single(sum([g(),weight(hlm,3)])),single(sum([g(),weight(hlm,3)]),pref_only=true)]),preferred=[hff,hlm],cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 31.673493975903618s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --search 'eager(alt([type_based([g()]),single(sum([g(),weight(hff,3)])),single(sum([g(),weight(hff,3)]),pref_only=true),single(sum([g(),weight(hlm,3)])),single(sum([g(),weight(hlm,3)]),pref_only=true)]),preferred=[hff,hlm],cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00599341s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000987695s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search without reopening closed nodes, (real) bound = 288
21 initial landmarks, 6 goal landmarks
New best heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 40
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
pruning method: none
New best heuristic value for ff(transform = adapt_costs(one)): 39
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 37
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=8, 24 evaluated, 17 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 35
g=20, 384 evaluated, 286 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 37
g=21, 387 evaluated, 287 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 36
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 33
g=21, 388 evaluated, 287 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 34
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 31
g=22, 389 evaluated, 288 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 29
g=23, 392 evaluated, 289 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 28
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 27
g=24, 394 evaluated, 290 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 25
g=25, 396 evaluated, 291 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 26
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 23
g=26, 399 evaluated, 292 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=27, 401 evaluated, 293 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 23
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 21
g=27, 402 evaluated, 293 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 19
g=28, 404 evaluated, 294 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 19
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 17
g=29, 407 evaluated, 295 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 15
g=30, 409 evaluated, 296 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 15
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 13
g=31, 411 evaluated, 297 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 11
g=32, 413 evaluated, 298 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=33, 414 evaluated, 299 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 9
g=33, 417 evaluated, 299 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=34, 418 evaluated, 300 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 8
g=35, 427 evaluated, 303 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 7
g=39, 467 evaluated, 338 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 8
g=70, 61096 evaluated, 49616 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=70, 61097 evaluated, 49616 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 6
g=75, 61125 evaluated, 49641 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=71, 71656 evaluated, 58535 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 5
g=162, 211074 evaluated, 171486 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 4
g=165, 426952 evaluated, 343699 expanded
Peak memory: 54892 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1283.53
config 15: relative time 29, remaining 972
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_rhw(reasonable_orders=false,only_causal_landmarks=false,disjunctive_landmarks=false,conjunctive_landmarks=true,no_orders=false)', '--evaluator', 'hlm=lmcount(lmg,admissible=false,transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--evaluator', 'hblind=blind()', '--search', 'lazy(alt([type_based([g()]),single(sum([g(),weight(hblind,2)])),single(sum([g(),weight(hblind,2)]),pref_only=true),single(sum([g(),weight(hlm,2)])),single(sum([g(),weight(hlm,2)]),pref_only=true),single(sum([g(),weight(hff,2)])),single(sum([g(),weight(hff,2)]),pref_only=true)],boost=4419),preferred=[hlm],reopen_closed=true,cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 38.29461934156379s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_rhw(reasonable_orders=false,only_causal_landmarks=false,disjunctive_landmarks=false,conjunctive_landmarks=true,no_orders=false)' --evaluator 'hlm=lmcount(lmg,admissible=false,transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(one))' --evaluator 'hblind=blind()' --search 'lazy(alt([type_based([g()]),single(sum([g(),weight(hblind,2)])),single(sum([g(),weight(hblind,2)]),pref_only=true),single(sum([g(),weight(hlm,2)])),single(sum([g(),weight(hlm,2)]),pref_only=true),single(sum([g(),weight(hff,2)])),single(sum([g(),weight(hff,2)]),pref_only=true)],boost=4419),preferred=[hlm],reopen_closed=true,cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
Discarding 4 disjunctive landmarks
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00596824s
Discovered 55 landmarks, of which 0 are disjunctive and 0 are conjunctive.
433 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.000978796s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing blind search heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000995946s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
21 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 34
New best heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for blind: 1
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 34
Initial heuristic value for ff(transform = adapt_costs(one)): 40
Initial heuristic value for blind: 1
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 33
New best heuristic value for ff(transform = adapt_costs(one)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=8, 29 evaluated, 28 expanded
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 31
g=18, 312 evaluated, 309 expanded, 3 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 37
g=19, 314 evaluated, 311 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 29
New best heuristic value for ff(transform = adapt_costs(one)): 35
g=19, 317 evaluated, 314 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 27
New best heuristic value for ff(transform = adapt_costs(one)): 34
g=20, 318 evaluated, 315 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 25
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=21, 321 evaluated, 318 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 23
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=22, 324 evaluated, 321 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 21
g=23, 326 evaluated, 323 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 19
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=24, 330 evaluated, 327 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 17
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=25, 332 evaluated, 329 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 15
g=26, 335 evaluated, 332 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 13
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=27, 340 evaluated, 337 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 11
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=28, 343 evaluated, 340 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 9
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=29, 347 evaluated, 344 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 7
g=30, 350 evaluated, 347 expanded, 3 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=31, 353 evaluated, 350 expanded, 3 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 12
g=32, 354 evaluated, 351 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 5
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=31, 361 evaluated, 358 expanded, 3 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=32, 362 evaluated, 359 expanded, 3 reopened
New best heuristic value for lmcount(lmg, admissible = false, transform = adapt_costs(one)): 4
New best heuristic value for ff(transform = adapt_costs(one)): 7
g=83, 90357 evaluated, 90046 expanded, 6374 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=215, 212492 evaluated, 211718 expanded, 20244 reopened
Peak memory: 142456 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1245.6599999999999
config 16: relative time 30, remaining 943
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy_wastar([hff],w=3,preferred=[hff],cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 39.628632025450685s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_wastar([hff],w=3,preferred=[hff],cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000975935s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
New best heuristic value for ff(transform = adapt_costs(one)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for ff(transform = adapt_costs(one)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=9, 21 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=34, 1445 evaluated, 1435 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=35, 1446 evaluated, 1436 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=37, 1448 evaluated, 1438 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=38, 1449 evaluated, 1439 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=39, 1450 evaluated, 1440 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=41, 1452 evaluated, 1442 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=42, 1453 evaluated, 1443 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=43, 1454 evaluated, 1444 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=45, 1456 evaluated, 1446 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 12
g=46, 1457 evaluated, 1447 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=45, 1462 evaluated, 1452 expanded, 55 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=32, 7129 evaluated, 7061 expanded, 207 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=72, 57839 evaluated, 57579 expanded, 15927 reopened
Peak memory: 94152 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1206.79
config 17: relative time 28, remaining 913
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcg=cg(transform=adapt_costs(plusone))', '--search', 'lazy(alt([type_based([g()]),single(hcg),single(hcg,pref_only=true)],boost=0),preferred=[hcg],reopen_closed=true,cost_type=plusone,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 37.00998904709748s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcg=cg(transform=adapt_costs(plusone))' --search 'lazy(alt([type_based([g()]),single(hcg),single(hcg,pref_only=true)],boost=0),preferred=[hcg],reopen_closed=true,cost_type=plusone,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
New best heuristic value for cg(transform = adapt_costs(plusone)): 52
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(plusone)): 52
New best heuristic value for cg(transform = adapt_costs(plusone)): 46
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 40
g=2, 4 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 34
g=3, 5 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 28
g=4, 6 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 22
g=5, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 16
g=6, 9 evaluated, 8 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 15
g=8, 11 evaluated, 10 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 14
g=9, 13 evaluated, 12 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 11
g=31, 4367 evaluated, 4366 expanded, 933 reopened
New best heuristic value for cg(transform = adapt_costs(plusone)): 9
g=113, 11215 evaluated, 11214 expanded, 2426 reopened
New best heuristic value for cg(transform = adapt_costs(plusone)): 8
g=114, 11216 evaluated, 11215 expanded, 2426 reopened
New best heuristic value for cg(transform = adapt_costs(plusone)): 7
g=263, 1075664 evaluated, 1075663 expanded, 517266 reopened
New best heuristic value for cg(transform = adapt_costs(plusone)): 6
g=252, 1147263 evaluated, 1147262 expanded, 551502 reopened
New best heuristic value for cg(transform = adapt_costs(plusone)): 4
g=253, 1147264 evaluated, 1147263 expanded, 551502 reopened
New best heuristic value for cg(transform = adapt_costs(plusone)): 3
g=277, 1506211 evaluated, 1506210 expanded, 743244 reopened
New best heuristic value for cg(transform = adapt_costs(plusone)): 1
g=285, 1596894 evaluated, 1596893 expanded, 793370 reopened
Peak memory: 107388 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1169.9299999999998
config 18: relative time 58, remaining 885
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--search', 'lazy(alt([type_based([g()]),single(sum([g(),weight(hcg,3)])),single(sum([g(),weight(hcg,3)]),pref_only=true),single(sum([g(),weight(hlm,3)])),single(sum([g(),weight(hlm,3)]),pref_only=true)]),preferred=[hcg,hlm],cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 76.67337853107344s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcg=cg(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --search 'lazy(alt([type_based([g()]),single(sum([g(),weight(hcg,3)])),single(sum([g(),weight(hcg,3)]),pref_only=true),single(sum([g(),weight(hlm,3)])),single(sum([g(),weight(hlm,3)]),pref_only=true)]),preferred=[hcg,hlm],cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00597766s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
21 initial landmarks, 6 goal landmarks
New best heuristic value for cg(transform = adapt_costs(one)): 52
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 52
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 38
New best heuristic value for cg(transform = adapt_costs(one)): 46
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 37
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 40
g=2, 4 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 34
g=3, 5 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 28
g=4, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 22
g=5, 8 evaluated, 7 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 16
g=6, 9 evaluated, 8 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=7, 10 evaluated, 9 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 35
g=20, 713 evaluated, 712 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 33
g=21, 721 evaluated, 720 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 31
g=22, 722 evaluated, 721 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 29
g=23, 725 evaluated, 724 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 27
g=24, 729 evaluated, 728 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 25
g=25, 733 evaluated, 732 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 23
g=26, 735 evaluated, 734 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 21
g=27, 739 evaluated, 738 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 19
g=28, 743 evaluated, 742 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 17
g=29, 745 evaluated, 744 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 15
g=30, 747 evaluated, 746 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 13
g=31, 750 evaluated, 749 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 11
g=32, 752 evaluated, 751 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 11
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 9
g=33, 753 evaluated, 752 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 8
g=36, 765 evaluated, 764 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 7
g=40, 800 evaluated, 799 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 9
g=129, 17008 evaluated, 17007 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 8
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 6
g=130, 17009 evaluated, 17008 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 5
g=134, 17079 evaluated, 17078 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 4
g=135, 17099 evaluated, 17098 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 7
g=227, 108473 evaluated, 108472 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 3
g=229, 108475 evaluated, 108474 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 4
g=280, 452132 evaluated, 452131 expanded
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true), transform = adapt_costs(one)): 2
g=283, 454364 evaluated, 454363 expanded
Peak memory: 277892 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1094.1599999999999
config 19: relative time 26, remaining 827
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcea=cea(transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(plusone))', '--evaluator', 'hblind=blind()', '--search', 'eager(alt([single(sum([g(),weight(hblind,10)])),single(sum([g(),weight(hblind,10)]),pref_only=true),single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true),single(sum([g(),weight(hcea,10)])),single(sum([g(),weight(hcea,10)]),pref_only=true)],boost=536),preferred=[hff],reopen_closed=false,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 34.3992261185006s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcea=cea(transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(plusone))' --evaluator 'hblind=blind()' --search 'eager(alt([single(sum([g(),weight(hblind,10)])),single(sum([g(),weight(hblind,10)]),pref_only=true),single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true),single(sum([g(),weight(hcea,10)])),single(sum([g(),weight(hcea,10)]),pref_only=true)],boost=536),preferred=[hff],reopen_closed=false,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing blind search heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search without reopening closed nodes, (real) bound = 288
New best heuristic value for blind: 1
New best heuristic value for cea(transform = adapt_costs(one)): 540
New best heuristic value for ff(transform = adapt_costs(plusone)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for blind: 1
Initial heuristic value for cea(transform = adapt_costs(one)): 540
Initial heuristic value for ff(transform = adapt_costs(plusone)): 40
pruning method: none
New best heuristic value for cea(transform = adapt_costs(one)): 449
New best heuristic value for ff(transform = adapt_costs(plusone)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 444
g=2, 3 evaluated, 2 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 38
g=8, 22 evaluated, 14 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 37
g=19, 2733 evaluated, 2086 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 35
g=19, 2735 evaluated, 2086 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 34
g=20, 2740 evaluated, 2089 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 417
New best heuristic value for ff(transform = adapt_costs(plusone)): 30
g=21, 2743 evaluated, 2090 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 350
New best heuristic value for ff(transform = adapt_costs(plusone)): 27
g=22, 2746 evaluated, 2092 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 289
g=23, 2748 evaluated, 2093 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 234
New best heuristic value for ff(transform = adapt_costs(plusone)): 25
g=24, 2753 evaluated, 2095 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 185
New best heuristic value for ff(transform = adapt_costs(plusone)): 22
g=25, 2757 evaluated, 2097 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 142
g=26, 2759 evaluated, 2098 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 105
New best heuristic value for ff(transform = adapt_costs(plusone)): 19
g=27, 2763 evaluated, 2100 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 74
New best heuristic value for ff(transform = adapt_costs(plusone)): 18
g=28, 2767 evaluated, 2102 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 49
New best heuristic value for ff(transform = adapt_costs(plusone)): 15
g=29, 2769 evaluated, 2103 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 30
g=30, 2771 evaluated, 2104 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 14
g=31, 2772 evaluated, 2105 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 17
New best heuristic value for ff(transform = adapt_costs(plusone)): 10
g=31, 2775 evaluated, 2105 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 9
g=32, 2779 evaluated, 2107 expanded
Peak memory: 63912 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1060.26
config 20: relative time 27, remaining 801
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcea=cea(transform=adapt_costs(one))', '--search', 'eager_greedy([hcea],preferred=[hcea],cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 35.7391011235955s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcea=cea(transform=adapt_costs(one))' --search 'eager_greedy([hcea],preferred=[hcea],cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing context-enhanced additive heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search without reopening closed nodes, (real) bound = 288
New best heuristic value for cea(transform = adapt_costs(one)): 540
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cea(transform = adapt_costs(one)): 540
pruning method: none
New best heuristic value for cea(transform = adapt_costs(one)): 449
g=1, 2 evaluated, 1 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 444
g=2, 3 evaluated, 2 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 417
g=21, 2907 evaluated, 2292 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 350
g=22, 2909 evaluated, 2293 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 289
g=23, 2911 evaluated, 2294 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 234
g=24, 2914 evaluated, 2295 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 185
g=25, 2917 evaluated, 2296 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 142
g=26, 2919 evaluated, 2297 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 105
g=27, 2922 evaluated, 2298 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 74
g=28, 2924 evaluated, 2299 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 49
g=29, 2926 evaluated, 2300 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 30
g=30, 2928 evaluated, 2301 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 17
g=31, 2932 evaluated, 2302 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 10
g=72, 10819 evaluated, 8388 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 6
g=160, 593260 evaluated, 473007 expanded
New best heuristic value for cea(transform = adapt_costs(one)): 5
g=161, 593262 evaluated, 473008 expanded
Peak memory: 62656 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1025.37
config 21: relative time 50, remaining 774
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'eager(alt([single(sum([g(),weight(hff,3)])),single(sum([g(),weight(hff,3)]),pref_only=true)]),preferred=[hff],cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 66.23837209302324s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'eager(alt([single(sum([g(),weight(hff,3)])),single(sum([g(),weight(hff,3)]),pref_only=true)]),preferred=[hff],cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search without reopening closed nodes, (real) bound = 288
New best heuristic value for ff(transform = adapt_costs(one)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 40
pruning method: none
New best heuristic value for ff(transform = adapt_costs(one)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=21, 216 evaluated, 178 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 37
g=29, 408 evaluated, 324 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 36
g=29, 409 evaluated, 324 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=30, 410 evaluated, 325 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=31, 413 evaluated, 326 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 31
g=32, 414 evaluated, 327 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 29
g=32, 415 evaluated, 327 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=33, 417 evaluated, 328 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 26
g=34, 420 evaluated, 329 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=35, 422 evaluated, 330 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=35, 423 evaluated, 330 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=36, 425 evaluated, 331 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 21
g=37, 427 evaluated, 332 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=37, 428 evaluated, 332 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=38, 430 evaluated, 333 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=39, 432 evaluated, 334 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=41, 435 evaluated, 336 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=41, 438 evaluated, 336 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=42, 439 evaluated, 337 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=78, 49646 evaluated, 39395 expanded
Peak memory: 109980 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 959.5699999999999
config 22: relative time 28, remaining 724
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hgoalcount=goalcount(transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(plusone))', '--evaluator', 'hblind=blind()', '--evaluator', 'hcg=cg()', '--search', 'lazy(alt([type_based([g()]),single(sum([weight(g(),2),weight(hblind,3)])),single(sum([weight(g(),2),weight(hblind,3)]),pref_only=true),single(sum([weight(g(),2),weight(hff,3)])),single(sum([weight(g(),2),weight(hff,3)]),pref_only=true),single(sum([weight(g(),2),weight(hcg,3)])),single(sum([weight(g(),2),weight(hcg,3)]),pref_only=true),single(sum([weight(g(),2),weight(hgoalcount,3)])),single(sum([weight(g(),2),weight(hgoalcount,3)]),pref_only=true)],boost=3662),preferred=[hff],reopen_closed=true,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 37.11044198895028s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hgoalcount=goalcount(transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(plusone))' --evaluator 'hblind=blind()' --evaluator 'hcg=cg()' --search 'lazy(alt([type_based([g()]),single(sum([weight(g(),2),weight(hblind,3)])),single(sum([weight(g(),2),weight(hblind,3)]),pref_only=true),single(sum([weight(g(),2),weight(hff,3)])),single(sum([weight(g(),2),weight(hff,3)]),pref_only=true),single(sum([weight(g(),2),weight(hcg,3)])),single(sum([weight(g(),2),weight(hcg,3)]),pref_only=true),single(sum([weight(g(),2),weight(hgoalcount,3)])),single(sum([weight(g(),2),weight(hgoalcount,3)]),pref_only=true)],boost=3662),preferred=[hff],reopen_closed=true,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing goal count heuristic...
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing blind search heuristic...
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
New best heuristic value for goalcount(transform = adapt_costs(one)): 6
New best heuristic value for ff(transform = adapt_costs(plusone)): 40
New best heuristic value for blind: 1
New best heuristic value for cg: 52
g=0, 1 evaluated, 0 expanded
Initial heuristic value for goalcount(transform = adapt_costs(one)): 6
Initial heuristic value for ff(transform = adapt_costs(plusone)): 40
Initial heuristic value for blind: 1
Initial heuristic value for cg: 52
New best heuristic value for ff(transform = adapt_costs(plusone)): 39
New best heuristic value for cg: 46
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg: 40
g=2, 4 evaluated, 3 expanded
New best heuristic value for cg: 34
g=3, 5 evaluated, 4 expanded
New best heuristic value for cg: 28
g=4, 7 evaluated, 6 expanded
New best heuristic value for cg: 22
g=5, 8 evaluated, 7 expanded
New best heuristic value for cg: 16
g=6, 9 evaluated, 8 expanded
New best heuristic value for cg: 14
g=7, 11 evaluated, 10 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 38
g=8, 15 evaluated, 14 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 35
g=23, 2832 evaluated, 2800 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 34
g=24, 2834 evaluated, 2802 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 30
g=25, 2837 evaluated, 2805 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 28
g=27, 2840 evaluated, 2808 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 25
g=28, 2841 evaluated, 2809 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 23
g=29, 2843 evaluated, 2811 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 22
g=30, 2844 evaluated, 2812 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 19
g=31, 2846 evaluated, 2814 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 18
g=32, 2847 evaluated, 2815 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 15
g=33, 2849 evaluated, 2817 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 14
g=35, 2852 evaluated, 2820 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 12
g=36, 2854 evaluated, 2822 expanded, 17 reopened
New best heuristic value for goalcount(transform = adapt_costs(one)): 5
New best heuristic value for ff(transform = adapt_costs(plusone)): 10
New best heuristic value for cg: 11
g=35, 2867 evaluated, 2835 expanded, 17 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 9
g=146, 41384 evaluated, 41023 expanded, 4183 reopened
New best heuristic value for goalcount(transform = adapt_costs(one)): 4
New best heuristic value for ff(transform = adapt_costs(plusone)): 6
New best heuristic value for cg: 8
g=148, 41398 evaluated, 41034 expanded, 4185 reopened
Peak memory: 150836 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 922.6899999999999
config 23: relative time 29, remaining 696
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hgoalcount=goalcount(transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(plusone))', '--evaluator', 'hblind=blind()', '--evaluator', 'hcg=cg()', '--search', 'lazy(alt([single(sum([weight(g(),2),weight(hblind,3)])),single(sum([weight(g(),2),weight(hblind,3)]),pref_only=true),single(sum([weight(g(),2),weight(hff,3)])),single(sum([weight(g(),2),weight(hff,3)]),pref_only=true),single(sum([weight(g(),2),weight(hcg,3)])),single(sum([weight(g(),2),weight(hcg,3)]),pref_only=true),single(sum([weight(g(),2),weight(hgoalcount,3)])),single(sum([weight(g(),2),weight(hgoalcount,3)]),pref_only=true)],boost=3662),preferred=[hff],reopen_closed=true,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 38.44541666666667s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hgoalcount=goalcount(transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(plusone))' --evaluator 'hblind=blind()' --evaluator 'hcg=cg()' --search 'lazy(alt([single(sum([weight(g(),2),weight(hblind,3)])),single(sum([weight(g(),2),weight(hblind,3)]),pref_only=true),single(sum([weight(g(),2),weight(hff,3)])),single(sum([weight(g(),2),weight(hff,3)]),pref_only=true),single(sum([weight(g(),2),weight(hcg,3)])),single(sum([weight(g(),2),weight(hcg,3)]),pref_only=true),single(sum([weight(g(),2),weight(hgoalcount,3)])),single(sum([weight(g(),2),weight(hgoalcount,3)]),pref_only=true)],boost=3662),preferred=[hff],reopen_closed=true,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing goal count heuristic...
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing blind search heuristic...
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
New best heuristic value for goalcount(transform = adapt_costs(one)): 6
New best heuristic value for blind: 1
New best heuristic value for cg: 52
New best heuristic value for ff(transform = adapt_costs(plusone)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for goalcount(transform = adapt_costs(one)): 6
Initial heuristic value for blind: 1
Initial heuristic value for cg: 52
Initial heuristic value for ff(transform = adapt_costs(plusone)): 40
New best heuristic value for cg: 46
New best heuristic value for ff(transform = adapt_costs(plusone)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg: 40
g=2, 4 evaluated, 3 expanded
New best heuristic value for cg: 34
g=3, 5 evaluated, 4 expanded
New best heuristic value for cg: 28
g=4, 7 evaluated, 6 expanded
New best heuristic value for cg: 22
g=5, 8 evaluated, 7 expanded
New best heuristic value for cg: 16
g=6, 9 evaluated, 8 expanded
New best heuristic value for cg: 14
g=7, 11 evaluated, 10 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 38
g=8, 15 evaluated, 14 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 35
g=23, 2829 evaluated, 2797 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 34
g=24, 2831 evaluated, 2799 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 30
g=25, 2834 evaluated, 2802 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 28
g=27, 2837 evaluated, 2805 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 25
g=28, 2838 evaluated, 2806 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 23
g=29, 2840 evaluated, 2808 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 22
g=30, 2841 evaluated, 2809 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 19
g=31, 2843 evaluated, 2811 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 18
g=32, 2844 evaluated, 2812 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 15
g=33, 2846 evaluated, 2814 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 14
g=35, 2849 evaluated, 2817 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 12
g=36, 2851 evaluated, 2819 expanded, 16 reopened
New best heuristic value for goalcount(transform = adapt_costs(one)): 5
New best heuristic value for cg: 11
New best heuristic value for ff(transform = adapt_costs(plusone)): 10
g=35, 2864 evaluated, 2832 expanded, 16 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 9
g=146, 41381 evaluated, 41020 expanded, 4182 reopened
New best heuristic value for goalcount(transform = adapt_costs(one)): 4
New best heuristic value for cg: 8
New best heuristic value for ff(transform = adapt_costs(plusone)): 6
g=148, 41395 evaluated, 41031 expanded, 4184 reopened
Peak memory: 153816 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 884.7999999999998
config 24: relative time 21, remaining 667
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcg=cg(transform=adapt_costs(plusone))', '--search', 'lazy(alt([single(sum([g(),weight(hcg,10)])),single(sum([g(),weight(hcg,10)]),pref_only=true)],boost=0),preferred=[hcg],reopen_closed=false,cost_type=plusone,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 27.857271364317835s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcg=cg(transform=adapt_costs(plusone))' --search 'lazy(alt([single(sum([g(),weight(hcg,10)])),single(sum([g(),weight(hcg,10)]),pref_only=true)],boost=0),preferred=[hcg],reopen_closed=false,cost_type=plusone,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
New best heuristic value for cg(transform = adapt_costs(plusone)): 52
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(plusone)): 52
New best heuristic value for cg(transform = adapt_costs(plusone)): 46
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 40
g=2, 4 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 34
g=3, 5 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 28
g=4, 6 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 22
g=5, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 16
g=6, 8 evaluated, 7 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 15
g=8, 10 evaluated, 9 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 14
g=9, 11 evaluated, 10 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 11
g=31, 16892 evaluated, 16891 expanded
New best heuristic value for cg(transform = adapt_costs(plusone)): 8
g=71, 63791 evaluated, 63790 expanded
Peak memory: 67212 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 857.88
config 25: relative time 21, remaining 646
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--search', 'eager(alt([single(sum([g(),weight(hcg,3)])),single(sum([g(),weight(hcg,3)]),pref_only=true)]),preferred=[hcg],cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 27.887739938080493s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcg=cg(transform=adapt_costs(one))' --search 'eager(alt([single(sum([g(),weight(hcg,3)])),single(sum([g(),weight(hcg,3)]),pref_only=true)]),preferred=[hcg],cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0.000980082s]
done!
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search without reopening closed nodes, (real) bound = 288
New best heuristic value for cg(transform = adapt_costs(one)): 52
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 52
pruning method: none
New best heuristic value for cg(transform = adapt_costs(one)): 46
g=1, 2 evaluated, 1 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 40
g=2, 4 evaluated, 2 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 34
g=3, 5 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 28
g=4, 6 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 22
g=5, 7 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 16
g=6, 8 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=7, 11 evaluated, 7 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 11
g=31, 13198 evaluated, 12356 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 8
g=72, 56074 evaluated, 52021 expanded
Peak memory: 60564 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 830.9599999999999
config 26: relative time 24, remaining 625
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_rhw(reasonable_orders=true,only_causal_landmarks=true,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=false)', '--evaluator', 'hblind=blind()', '--evaluator', 'hadd=add()', '--evaluator', 'hlm=lmcount(lmg,admissible=false,pref=true,transform=adapt_costs(plusone))', '--evaluator', 'hff=ff()', '--search', 'lazy(alt([single(sum([weight(g(),2),weight(hblind,3)])),single(sum([weight(g(),2),weight(hblind,3)]),pref_only=true),single(sum([weight(g(),2),weight(hff,3)])),single(sum([weight(g(),2),weight(hff,3)]),pref_only=true),single(sum([weight(g(),2),weight(hlm,3)])),single(sum([weight(g(),2),weight(hlm,3)]),pref_only=true),single(sum([weight(g(),2),weight(hadd,3)])),single(sum([weight(g(),2),weight(hadd,3)]),pref_only=true)],boost=2474),preferred=[hadd],reopen_closed=false,cost_type=one,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 31.908863999999994s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_rhw(reasonable_orders=true,only_causal_landmarks=true,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=false)' --evaluator 'hblind=blind()' --evaluator 'hadd=add()' --evaluator 'hlm=lmcount(lmg,admissible=false,pref=true,transform=adapt_costs(plusone))' --evaluator 'hff=ff()' --search 'lazy(alt([single(sum([weight(g(),2),weight(hblind,3)])),single(sum([weight(g(),2),weight(hblind,3)]),pref_only=true),single(sum([weight(g(),2),weight(hff,3)])),single(sum([weight(g(),2),weight(hff,3)]),pref_only=true),single(sum([weight(g(),2),weight(hlm,3)])),single(sum([weight(g(),2),weight(hlm,3)]),pref_only=true),single(sum([weight(g(),2),weight(hadd,3)])),single(sum([weight(g(),2),weight(hadd,3)]),pref_only=true)],boost=2474),preferred=[hadd],reopen_closed=false,cost_type=one,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing blind search heuristic...
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.000993136s
Initializing additive heuristic...
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
Discarded 0 non-causal landmarks
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00982434s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.00100562s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 132 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
21 initial landmarks, 6 goal landmarks
New best heuristic value for add: 540
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 38
New best heuristic value for blind: 1
New best heuristic value for ff: 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for add: 540
Initial heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 38
Initial heuristic value for blind: 1
Initial heuristic value for ff: 40
New best heuristic value for add: 449
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 37
New best heuristic value for ff: 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for add: 444
g=2, 3 evaluated, 2 expanded
New best heuristic value for ff: 38
g=9, 19 evaluated, 18 expanded
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 35
g=22, 2829 evaluated, 2797 expanded
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 33
New best heuristic value for ff: 35
g=23, 2830 evaluated, 2798 expanded
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 31
New best heuristic value for ff: 34
g=24, 2831 evaluated, 2799 expanded
New best heuristic value for add: 417
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 29
New best heuristic value for ff: 30
g=25, 2832 evaluated, 2800 expanded
New best heuristic value for add: 350
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 27
g=26, 2833 evaluated, 2801 expanded
New best heuristic value for add: 289
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 25
New best heuristic value for ff: 28
g=27, 2834 evaluated, 2802 expanded
New best heuristic value for add: 234
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 23
New best heuristic value for ff: 25
g=28, 2835 evaluated, 2803 expanded
New best heuristic value for add: 185
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 21
New best heuristic value for ff: 23
g=29, 2836 evaluated, 2804 expanded
New best heuristic value for add: 142
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 19
New best heuristic value for ff: 22
g=30, 2837 evaluated, 2805 expanded
New best heuristic value for add: 105
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 17
New best heuristic value for ff: 19
g=31, 2838 evaluated, 2806 expanded
New best heuristic value for add: 74
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 15
New best heuristic value for ff: 18
g=32, 2839 evaluated, 2807 expanded
New best heuristic value for add: 49
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 13
New best heuristic value for ff: 15
g=33, 2840 evaluated, 2808 expanded
New best heuristic value for add: 30
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 11
g=34, 2841 evaluated, 2809 expanded
New best heuristic value for ff: 14
g=35, 2842 evaluated, 2810 expanded
New best heuristic value for ff: 12
g=36, 2843 evaluated, 2811 expanded
New best heuristic value for add: 17
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 9
New best heuristic value for ff: 10
g=35, 2845 evaluated, 2813 expanded
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 8
g=37, 2849 evaluated, 2817 expanded
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 7
g=41, 2909 evaluated, 2877 expanded
New best heuristic value for add: 14
g=165, 28503 evaluated, 28213 expanded
New best heuristic value for ff: 8
g=166, 28505 evaluated, 28215 expanded
New best heuristic value for ff: 7
g=166, 28507 evaluated, 28217 expanded
New best heuristic value for add: 10
g=167, 28509 evaluated, 28219 expanded
New best heuristic value for lmcount(lmg, admissible = false, pref = true, transform = adapt_costs(plusone)): 6
g=171, 28524 evaluated, 28232 expanded
New best heuristic value for ff: 6
g=72, 184004 evaluated, 182815 expanded
Peak memory: 82700 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 800.0699999999999
config 27: relative time 28, remaining 601
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hblind=blind()', '--evaluator', 'hadd=add()', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--evaluator', 'hhmax=hmax()', '--search', 'eager(alt([tiebreaking([sum([g(),weight(hblind,7)]),hblind]),tiebreaking([sum([g(),weight(hhmax,7)]),hhmax]),tiebreaking([sum([g(),weight(hadd,7)]),hadd]),tiebreaking([sum([g(),weight(hcg,7)]),hcg])],boost=2142),preferred=[],reopen_closed=true,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 37.27447587354409s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hblind=blind()' --evaluator 'hadd=add()' --evaluator 'hcg=cg(transform=adapt_costs(one))' --evaluator 'hhmax=hmax()' --search 'eager(alt([tiebreaking([sum([g(),weight(hblind,7)]),hblind]),tiebreaking([sum([g(),weight(hhmax,7)]),hhmax]),tiebreaking([sum([g(),weight(hadd,7)]),hadd]),tiebreaking([sum([g(),weight(hcg,7)]),hcg])],boost=2142),preferred=[],reopen_closed=true,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing blind search heuristic...
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0.00101741s]
done!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing HSP max heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search with reopening closed nodes, (real) bound = 288
New best heuristic value for cg(transform = adapt_costs(one)): 52
New best heuristic value for add: 540
New best heuristic value for blind: 1
New best heuristic value for hmax: 25
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 52
Initial heuristic value for add: 540
Initial heuristic value for blind: 1
Initial heuristic value for hmax: 25
pruning method: none
New best heuristic value for cg(transform = adapt_costs(one)): 46
New best heuristic value for add: 449
New best heuristic value for hmax: 24
g=1, 2 evaluated, 1 expanded
New best heuristic value for add: 444
New best heuristic value for hmax: 23
g=2, 3 evaluated, 2 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 40
g=2, 4 evaluated, 2 expanded
New best heuristic value for hmax: 22
g=3, 5 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 34
g=3, 6 evaluated, 4 expanded
New best heuristic value for hmax: 21
g=4, 7 evaluated, 5 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 28
g=4, 9 evaluated, 6 expanded
New best heuristic value for hmax: 20
g=5, 10 evaluated, 7 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 22
g=5, 12 evaluated, 8 expanded
New best heuristic value for hmax: 19
g=6, 13 evaluated, 9 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 16
g=6, 14 evaluated, 10 expanded
New best heuristic value for hmax: 18
g=7, 15 evaluated, 11 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=7, 18 evaluated, 12 expanded
New best heuristic value for hmax: 17
g=18, 146 evaluated, 119 expanded
New best heuristic value for hmax: 16
g=19, 150 evaluated, 122 expanded
New best heuristic value for hmax: 15
g=20, 151 evaluated, 123 expanded
New best heuristic value for add: 417
New best heuristic value for hmax: 14
g=21, 157 evaluated, 126 expanded
New best heuristic value for add: 350
New best heuristic value for hmax: 13
g=22, 159 evaluated, 127 expanded
New best heuristic value for add: 289
New best heuristic value for hmax: 12
g=23, 162 evaluated, 130 expanded
New best heuristic value for add: 234
New best heuristic value for hmax: 11
g=24, 165 evaluated, 131 expanded
New best heuristic value for add: 185
New best heuristic value for hmax: 10
g=25, 172 evaluated, 134 expanded
New best heuristic value for add: 142
New best heuristic value for hmax: 9
g=26, 174 evaluated, 135 expanded
New best heuristic value for add: 105
New best heuristic value for hmax: 8
g=27, 179 evaluated, 138 expanded
New best heuristic value for add: 74
New best heuristic value for hmax: 7
g=28, 181 evaluated, 139 expanded
New best heuristic value for add: 49
New best heuristic value for hmax: 6
g=29, 186 evaluated, 141 expanded
New best heuristic value for add: 30
New best heuristic value for hmax: 5
g=30, 188 evaluated, 142 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 11
New best heuristic value for add: 17
New best heuristic value for hmax: 4
g=31, 195 evaluated, 144 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 8
New best heuristic value for add: 10
New best heuristic value for hmax: 3
g=90, 554290 evaluated, 530602 expanded, 66520 reopened
Peak memory: 73776 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 763.1800000000001
config 28: relative time 28, remaining 573
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hadd=add(transform=adapt_costs(plusone))', '--evaluator', 'hff=ff()', '--search', 'lazy(alt([tiebreaking([sum([weight(g(),4),weight(hff,5)]),hff]),tiebreaking([sum([weight(g(),4),weight(hff,5)]),hff],pref_only=true),tiebreaking([sum([weight(g(),4),weight(hadd,5)]),hadd]),tiebreaking([sum([weight(g(),4),weight(hadd,5)]),hadd],pref_only=true)],boost=2537),preferred=[hff,hadd],reopen_closed=true,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 37.29326352530541s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hadd=add(transform=adapt_costs(plusone))' --evaluator 'hff=ff()' --search 'lazy(alt([tiebreaking([sum([weight(g(),4),weight(hff,5)]),hff]),tiebreaking([sum([weight(g(),4),weight(hff,5)]),hff],pref_only=true),tiebreaking([sum([weight(g(),4),weight(hadd,5)]),hadd]),tiebreaking([sum([weight(g(),4),weight(hadd,5)]),hadd],pref_only=true)],boost=2537),preferred=[hff,hadd],reopen_closed=true,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.00100893s
Initializing additive heuristic...
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000977562s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
New best heuristic value for ff: 40
New best heuristic value for add(transform = adapt_costs(plusone)): 540
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff: 40
Initial heuristic value for add(transform = adapt_costs(plusone)): 540
New best heuristic value for ff: 39
New best heuristic value for add(transform = adapt_costs(plusone)): 449
g=1, 2 evaluated, 1 expanded
New best heuristic value for add(transform = adapt_costs(plusone)): 444
g=2, 3 evaluated, 2 expanded
New best heuristic value for ff: 38
g=9, 25 evaluated, 24 expanded
New best heuristic value for ff: 36
g=29, 3000 evaluated, 2967 expanded, 66 reopened
New best heuristic value for ff: 33
g=30, 3001 evaluated, 2968 expanded, 66 reopened
New best heuristic value for ff: 32
New best heuristic value for add(transform = adapt_costs(plusone)): 417
g=31, 3002 evaluated, 2969 expanded, 66 reopened
New best heuristic value for ff: 29
New best heuristic value for add(transform = adapt_costs(plusone)): 350
g=32, 3003 evaluated, 2970 expanded, 66 reopened
New best heuristic value for ff: 27
New best heuristic value for add(transform = adapt_costs(plusone)): 289
g=33, 3004 evaluated, 2971 expanded, 66 reopened
New best heuristic value for ff: 26
New best heuristic value for add(transform = adapt_costs(plusone)): 234
g=34, 3005 evaluated, 2972 expanded, 66 reopened
New best heuristic value for ff: 24
New best heuristic value for add(transform = adapt_costs(plusone)): 185
g=35, 3006 evaluated, 2973 expanded, 66 reopened
New best heuristic value for ff: 22
New best heuristic value for add(transform = adapt_costs(plusone)): 142
g=36, 3007 evaluated, 2974 expanded, 66 reopened
New best heuristic value for ff: 19
New best heuristic value for add(transform = adapt_costs(plusone)): 105
g=37, 3008 evaluated, 2975 expanded, 66 reopened
New best heuristic value for ff: 18
New best heuristic value for add(transform = adapt_costs(plusone)): 74
g=38, 3009 evaluated, 2976 expanded, 66 reopened
New best heuristic value for ff: 15
New best heuristic value for add(transform = adapt_costs(plusone)): 49
g=39, 3010 evaluated, 2977 expanded, 66 reopened
New best heuristic value for add(transform = adapt_costs(plusone)): 30
g=40, 3011 evaluated, 2978 expanded, 66 reopened
New best heuristic value for ff: 14
g=41, 3012 evaluated, 2979 expanded, 66 reopened
New best heuristic value for ff: 12
g=42, 3013 evaluated, 2980 expanded, 66 reopened
New best heuristic value for ff: 10
New best heuristic value for add(transform = adapt_costs(plusone)): 17
g=41, 3015 evaluated, 2982 expanded, 66 reopened
New best heuristic value for add(transform = adapt_costs(plusone)): 14
g=165, 25839 evaluated, 25608 expanded, 659 reopened
New best heuristic value for ff: 8
g=166, 25840 evaluated, 25609 expanded, 659 reopened
New best heuristic value for ff: 7
g=166, 25841 evaluated, 25610 expanded, 659 reopened
New best heuristic value for add(transform = adapt_costs(plusone)): 10
g=167, 25842 evaluated, 25611 expanded, 659 reopened
New best heuristic value for ff: 6
g=72, 463260 evaluated, 461976 expanded, 97368 reopened
Peak memory: 143108 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 726.27
config 29: relative time 53, remaining 545
g bound: 288
next plan number: 6
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=false,no_orders=true,m=1)', '--evaluator', 'hlm=lmcount(lmg,admissible=true,transform=transform=adapt_costs(plusone))', '--evaluator', 'hff=ff(transform=adapt_costs(plusone))', '--search', 'lazy(alt([type_based([g()]),single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true)],boost=5000),preferred=[hlm],reopen_closed=false,bound=288)', '--internal-previous-portfolio-plans', '5', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 70.62809174311926s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=false,no_orders=true,m=1)' --evaluator 'hlm=lmcount(lmg,admissible=true,transform=transform=adapt_costs(plusone))' --evaluator 'hff=ff(transform=adapt_costs(plusone))' --search 'lazy(alt([type_based([g()]),single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true)],boost=5000),preferred=[hlm],reopen_closed=false,bound=288)' --internal-previous-portfolio-plans 5 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
h^m landmarks m=1
Using 151 P^m fluents.
Level 1 completed.
Level 2 completed.
Level 3 completed.
Level 4 completed.
Level 5 completed.
Level 6 completed.
Level 7 completed.
Level 8 completed.
Level 9 completed.
Level 10 completed.
Level 11 completed.
Level 12 completed.
Level 13 completed.
Level 14 completed.
Level 15 completed.
Level 16 completed.
Level 17 completed.
Level 18 completed.
Level 19 completed.
Level 20 completed.
Level 21 completed.
Level 22 completed.
Level 23 completed.
Level 24 completed.
Level 25 completed.
Level 26 completed.
h^m landmarks computed.
Removing all orderings.
Removed 0 reasonable or obedient reasonable orders
Calculating achievers.
Landmarks generation time: 0.00200676s
Discovered 56 landmarks, of which 0 are disjunctive and 0 are conjunctive.
0 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.00098188s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 288
22 initial landmarks, 6 goal landmarks
New best heuristic value for ff(transform = adapt_costs(plusone)): 40
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 23
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(plusone)): 40
Initial heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 23
New best heuristic value for ff(transform = adapt_costs(plusone)): 39
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 22
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 20
g=3, 4 evaluated, 3 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 19
g=9, 23 evaluated, 22 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 38
g=7, 26 evaluated, 25 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 18
g=18, 1179 evaluated, 1171 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 37
g=19, 1182 evaluated, 1174 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 35
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 17
g=19, 1185 evaluated, 1177 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 34
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 16
g=20, 1186 evaluated, 1178 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 30
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 15
g=21, 1188 evaluated, 1180 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 27
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 14
g=22, 1190 evaluated, 1182 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 13
g=23, 1192 evaluated, 1184 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 25
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 12
g=24, 1195 evaluated, 1187 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 22
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 11
g=25, 1197 evaluated, 1189 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 10
g=26, 1199 evaluated, 1191 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 19
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 9
g=27, 1202 evaluated, 1194 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 18
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 8
g=28, 1204 evaluated, 1196 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 15
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 7
g=29, 1206 evaluated, 1198 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 6
g=30, 1208 evaluated, 1200 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 14
g=31, 1210 evaluated, 1202 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 12
g=32, 1211 evaluated, 1203 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 10
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 5
g=31, 1217 evaluated, 1209 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 9
g=32, 1218 evaluated, 1210 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 6
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 4
g=72, 4568 evaluated, 4548 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 5
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 3
g=138, 408784 evaluated, 405129 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 4
g=141, 408799 evaluated, 405144 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 2
g=190, 420878 evaluated, 417117 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 3
g=189, 420889 evaluated, 417127 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 2
g=186, 435558 evaluated, 431712 expanded
New best heuristic value for lmcount(lmg, admissible = true, transform = adapt_costs(plusone)): 1
g=236, 1303131 evaluated, 1294818 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 1
g=237, 1303133 evaluated, 1294820 expanded
Solution found!
Actual search time: 38.8363s
walk-down p8-12 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
push-left p4-9 p4-8 p4-7 (1)
push-left p4-8 p4-7 p4-6 (1)
push-down p4-7 p3-7 p2-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-right p4-5 p4-6 p4-7 (1)
walk-left p4-6 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-left p7-9 p7-8 (1)
walk-left p7-8 p7-7 (1)
walk-left p7-7 p7-6 (1)
walk-left p7-6 p7-5 (1)
walk-down p7-5 p6-5 (1)
push-down p6-5 p5-5 p4-5 (1)
walk-up p5-5 p6-5 (1)
walk-up p6-5 p7-5 (1)
walk-left p7-5 p7-4 (1)
walk-left p7-4 p7-3 (1)
walk-down p7-3 p6-3 (1)
walk-left p6-3 p6-2 (1)
walk-left p6-2 p6-1 (1)
walk-up p6-1 p7-1 (1)
push-right p7-1 p7-2 p7-3 (1)
push-right p7-2 p7-3 p7-4 (1)
push-right p7-3 p7-4 p7-5 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-down p7-17 p6-17 (1)
walk-right p6-17 p6-18 (1)
push-up p6-18 p7-18 p8-18 (1)
walk-left p7-18 p7-17 (1)
walk-up p7-17 p8-17 (1)
push-right p8-17 p8-18 p8-19 (1)
walk-down p8-18 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
push-left p4-8 p4-7 p4-6 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-up p7-17 p8-17 (1)
walk-right p8-17 p8-18 (1)
push-down p8-18 p7-18 p6-18 (1)
walk-left p7-18 p7-17 (1)
walk-down p7-17 p6-17 (1)
push-right p6-17 p6-18 p6-19 (1)
push-right p6-18 p6-19 p6-20 (1)
walk-left p6-19 p6-18 (1)
walk-up p6-18 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-up p7-17 p8-17 (1)
walk-right p8-17 p8-18 (1)
push-down p8-18 p7-18 p6-18 (1)
walk-left p7-18 p7-17 (1)
walk-down p7-17 p6-17 (1)
push-right p6-17 p6-18 p6-19 (1)
walk-up p6-18 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-right p1-6 p1-7 (1)
push-up p1-7 p2-7 p3-7 (1)
push-up p2-7 p3-7 p4-7 (1)
walk-down p3-7 p2-7 (1)
walk-down p2-7 p1-7 (1)
walk-left p1-7 p1-6 (1)
walk-left p1-6 p1-5 (1)
push-up p1-5 p2-5 p3-5 (1)
push-up p2-5 p3-5 p4-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-up p7-17 p8-17 (1)
walk-right p8-17 p8-18 (1)
push-right p8-18 p8-19 p8-20 (1)
walk-left p8-19 p8-18 (1)
walk-left p8-18 p8-17 (1)
walk-down p8-17 p7-17 (1)
walk-down p7-17 p6-17 (1)
walk-right p6-17 p6-18 (1)
push-up p6-18 p7-18 p8-18 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
push-left p4-8 p4-7 p4-6 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-left p7-18 p7-17 (1)
walk-up p7-17 p8-17 (1)
push-right p8-17 p8-18 p8-19 (1)
Plan length: 286 step(s).
Plan cost: 286
Expanded 1586372 state(s).
Reopened 0 state(s).
Evaluated 1595794 state(s).
Evaluations: 3191588
Generated 3889835 state(s).
Dead ends: 9421 state(s).
Number of registered states: 1595794
Int hash set load factor: 1595794/2097152 = 0.760934
Int hash set resizes: 21
Search time: 38.8363s
Total time: 38.8423s
Solution found.
Peak memory: 146912 KB
exitcode: 0

plan manager: found new plan with cost 286
remaining time: 687.3999999999996
config 30: relative time 29, remaining 492
g bound: 286
next plan number: 7
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy(alt([single(sum([weight(g(),2),weight(hff,3)])),single(sum([weight(g(),2),weight(hff,3)]),pref_only=true)],boost=5000),preferred=[hff],reopen_closed=true,cost_type=one,bound=286)', '--internal-previous-portfolio-plans', '6', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 40.51747967479673s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy(alt([single(sum([weight(g(),2),weight(hff,3)])),single(sum([weight(g(),2),weight(hff,3)]),pref_only=true)],boost=5000),preferred=[hff],reopen_closed=true,cost_type=one,bound=286)' --internal-previous-portfolio-plans 6 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 286
New best heuristic value for ff(transform = adapt_costs(one)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for ff(transform = adapt_costs(one)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=9, 21 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 36
g=29, 2816 evaluated, 2784 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 33
g=30, 2817 evaluated, 2785 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 32
g=31, 2818 evaluated, 2786 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 29
g=32, 2819 evaluated, 2787 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=33, 2820 evaluated, 2788 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 26
g=34, 2821 evaluated, 2789 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 24
g=35, 2822 evaluated, 2790 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=36, 2823 evaluated, 2791 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=37, 2824 evaluated, 2792 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=38, 2825 evaluated, 2793 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=39, 2826 evaluated, 2794 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=41, 2828 evaluated, 2796 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 12
g=42, 2829 evaluated, 2797 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=41, 2834 evaluated, 2802 expanded, 33 reopened
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=149, 34158 evaluated, 33824 expanded, 886 reopened
Peak memory: 83984 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 647.5099999999998
config 31: relative time 27, remaining 463
g bound: 286
next plan number: 7
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hblind=blind()', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'eager(alt([single(sum([g(),weight(hblind,2)])),single(sum([g(),weight(hff,2)]))],boost=4480),preferred=[],reopen_closed=true,bound=286)', '--internal-previous-portfolio-plans', '6', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 37.759762419006464s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hblind=blind()' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'eager(alt([single(sum([g(),weight(hblind,2)])),single(sum([g(),weight(hff,2)]))],boost=4480),preferred=[],reopen_closed=true,bound=286)' --internal-previous-portfolio-plans 6 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing blind search heuristic...
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search with reopening closed nodes, (real) bound = 286
New best heuristic value for ff(transform = adapt_costs(one)): 40
New best heuristic value for blind: 1
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(one)): 40
Initial heuristic value for blind: 1
pruning method: none
New best heuristic value for ff(transform = adapt_costs(one)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 38
g=17, 111 evaluated, 86 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 37
g=19, 263 evaluated, 204 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 35
g=19, 265 evaluated, 204 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 34
g=20, 266 evaluated, 205 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 30
g=21, 269 evaluated, 206 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 27
g=22, 271 evaluated, 207 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 25
g=24, 280 evaluated, 211 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 22
g=25, 283 evaluated, 212 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 19
g=27, 292 evaluated, 216 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 18
g=28, 295 evaluated, 218 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 15
g=29, 298 evaluated, 220 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 14
g=31, 306 evaluated, 226 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 10
g=31, 309 evaluated, 226 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 9
g=32, 312 evaluated, 228 expanded
New best heuristic value for ff(transform = adapt_costs(one)): 6
g=72, 304616 evaluated, 262317 expanded, 5509 reopened
Peak memory: 117632 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 610.6099999999999
config 32: relative time 29, remaining 436
g bound: 286
next plan number: 7
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=false,no_orders=true,m=1)', '--evaluator', 'hlm=lmcount(lmg,admissible=true)', '--evaluator', 'hff=ff()', '--search', 'lazy(alt([type_based([g()]),single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true)],boost=1000),preferred=[hlm,hff],reopen_closed=false,cost_type=one,bound=286)', '--internal-previous-portfolio-plans', '6', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 40.61396788990825s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=false,no_orders=true,m=1)' --evaluator 'hlm=lmcount(lmg,admissible=true)' --evaluator 'hff=ff()' --search 'lazy(alt([type_based([g()]),single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true)],boost=1000),preferred=[hlm,hff],reopen_closed=false,cost_type=one,bound=286)' --internal-previous-portfolio-plans 6 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
h^m landmarks m=1
Using 151 P^m fluents.
Level 1 completed.
Level 2 completed.
Level 3 completed.
Level 4 completed.
Level 5 completed.
Level 6 completed.
Level 7 completed.
Level 8 completed.
Level 9 completed.
Level 10 completed.
Level 11 completed.
Level 12 completed.
Level 13 completed.
Level 14 completed.
Level 15 completed.
Level 16 completed.
Level 17 completed.
Level 18 completed.
Level 19 completed.
Level 20 completed.
Level 21 completed.
Level 22 completed.
Level 23 completed.
Level 24 completed.
Level 25 completed.
Level 26 completed.
h^m landmarks computed.
Removing all orderings.
Removed 0 reasonable or obedient reasonable orders
Calculating achievers.
Landmarks generation time: 0.00199431s
Discovered 56 landmarks, of which 0 are disjunctive and 0 are conjunctive.
0 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000980028s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 286
22 initial landmarks, 6 goal landmarks
New best heuristic value for ff: 40
New best heuristic value for lmcount(lmg, admissible = true): 23
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff: 40
Initial heuristic value for lmcount(lmg, admissible = true): 23
New best heuristic value for ff: 39
New best heuristic value for lmcount(lmg, admissible = true): 22
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true): 20
g=3, 4 evaluated, 3 expanded
New best heuristic value for lmcount(lmg, admissible = true): 19
g=9, 12 evaluated, 11 expanded
New best heuristic value for ff: 38
g=13, 46 evaluated, 44 expanded
New best heuristic value for lmcount(lmg, admissible = true): 18
g=24, 3999 evaluated, 3955 expanded
New best heuristic value for ff: 36
New best heuristic value for lmcount(lmg, admissible = true): 17
g=25, 4000 evaluated, 3956 expanded
New best heuristic value for ff: 33
New best heuristic value for lmcount(lmg, admissible = true): 16
g=26, 4001 evaluated, 3957 expanded
New best heuristic value for ff: 30
New best heuristic value for lmcount(lmg, admissible = true): 15
g=27, 4002 evaluated, 3958 expanded
New best heuristic value for lmcount(lmg, admissible = true): 14
g=28, 4003 evaluated, 3959 expanded
New best heuristic value for ff: 27
New best heuristic value for lmcount(lmg, admissible = true): 13
g=29, 4004 evaluated, 3960 expanded
New best heuristic value for ff: 26
New best heuristic value for lmcount(lmg, admissible = true): 12
g=30, 4005 evaluated, 3961 expanded
New best heuristic value for ff: 22
New best heuristic value for lmcount(lmg, admissible = true): 11
g=31, 4006 evaluated, 3962 expanded
New best heuristic value for lmcount(lmg, admissible = true): 10
g=32, 4007 evaluated, 3963 expanded
New best heuristic value for ff: 19
New best heuristic value for lmcount(lmg, admissible = true): 9
g=33, 4008 evaluated, 3964 expanded
New best heuristic value for ff: 18
New best heuristic value for lmcount(lmg, admissible = true): 8
g=34, 4009 evaluated, 3965 expanded
New best heuristic value for ff: 15
New best heuristic value for lmcount(lmg, admissible = true): 7
g=35, 4010 evaluated, 3966 expanded
New best heuristic value for lmcount(lmg, admissible = true): 6
g=36, 4011 evaluated, 3967 expanded
New best heuristic value for ff: 14
g=37, 4012 evaluated, 3968 expanded
New best heuristic value for ff: 12
g=38, 4013 evaluated, 3969 expanded
New best heuristic value for ff: 10
New best heuristic value for lmcount(lmg, admissible = true): 5
g=37, 4015 evaluated, 3971 expanded
New best heuristic value for ff: 9
g=38, 12784 evaluated, 12613 expanded
New best heuristic value for ff: 6
New best heuristic value for lmcount(lmg, admissible = true): 4
g=87, 21071 evaluated, 20832 expanded
New best heuristic value for ff: 5
New best heuristic value for lmcount(lmg, admissible = true): 3
g=131, 52932 evaluated, 52306 expanded
New best heuristic value for ff: 4
g=132, 52933 evaluated, 52307 expanded
New best heuristic value for ff: 3
New best heuristic value for lmcount(lmg, admissible = true): 2
g=183, 64091 evaluated, 63383 expanded
New best heuristic value for ff: 2
g=184, 64092 evaluated, 63384 expanded
New best heuristic value for lmcount(lmg, admissible = true): 1
g=274, 1519095 evaluated, 1509428 expanded
New best heuristic value for ff: 1
g=276, 1519097 evaluated, 1509430 expanded
Peak memory: 187060 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 570.7199999999998
config 33: relative time 54, remaining 407
g bound: 286
next plan number: 7
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=false,m=1)', '--evaluator', 'hlm=lmcount(lmg,admissible=true)', '--evaluator', 'hff=ff()', '--search', 'lazy(alt([tiebreaking([sum([g(),weight(hlm,10)]),hlm]),tiebreaking([sum([g(),weight(hlm,10)]),hlm],pref_only=true),tiebreaking([sum([g(),weight(hff,10)]),hff]),tiebreaking([sum([g(),weight(hff,10)]),hff],pref_only=true)],boost=200),preferred=[hlm],reopen_closed=true,cost_type=plusone,bound=286)', '--internal-previous-portfolio-plans', '6', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 75.72206388206386s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=false,m=1)' --evaluator 'hlm=lmcount(lmg,admissible=true)' --evaluator 'hff=ff()' --search 'lazy(alt([tiebreaking([sum([g(),weight(hlm,10)]),hlm]),tiebreaking([sum([g(),weight(hlm,10)]),hlm],pref_only=true),tiebreaking([sum([g(),weight(hff,10)]),hff]),tiebreaking([sum([g(),weight(hff,10)]),hff],pref_only=true)],boost=200),preferred=[hlm],reopen_closed=true,cost_type=plusone,bound=286)' --internal-previous-portfolio-plans 6 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
h^m landmarks m=1
Using 151 P^m fluents.
Level 1 completed.
Level 2 completed.
Level 3 completed.
Level 4 completed.
Level 5 completed.
Level 6 completed.
Level 7 completed.
Level 8 completed.
Level 9 completed.
Level 10 completed.
Level 11 completed.
Level 12 completed.
Level 13 completed.
Level 14 completed.
Level 15 completed.
Level 16 completed.
Level 17 completed.
Level 18 completed.
Level 19 completed.
Level 20 completed.
Level 21 completed.
Level 22 completed.
Level 23 completed.
Level 24 completed.
Level 25 completed.
Level 26 completed.
h^m landmarks computed.
Removed 0 reasonable or obedient reasonable orders
Calculating achievers.
Landmarks generation time: 0.000984371s
Discovered 56 landmarks, of which 0 are disjunctive and 0 are conjunctive.
171 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.0010068s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 286
22 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lmg, admissible = true): 23
New best heuristic value for ff: 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lmg, admissible = true): 23
Initial heuristic value for ff: 40
New best heuristic value for lmcount(lmg, admissible = true): 22
New best heuristic value for ff: 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true): 20
g=3, 4 evaluated, 3 expanded
New best heuristic value for ff: 38
g=21, 127 evaluated, 125 expanded, 5 reopened
New best heuristic value for lmcount(lmg, admissible = true): 19
g=17, 320 evaluated, 317 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 18
g=18, 322 evaluated, 319 expanded, 20 reopened
New best heuristic value for ff: 37
g=19, 324 evaluated, 321 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 17
New best heuristic value for ff: 35
g=19, 327 evaluated, 324 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 16
New best heuristic value for ff: 34
g=20, 328 evaluated, 325 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 15
New best heuristic value for ff: 30
g=21, 330 evaluated, 327 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 14
New best heuristic value for ff: 27
g=22, 332 evaluated, 329 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 13
g=23, 334 evaluated, 331 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 12
New best heuristic value for ff: 25
g=24, 337 evaluated, 334 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 11
New best heuristic value for ff: 22
g=25, 339 evaluated, 336 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 10
g=26, 341 evaluated, 338 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 9
New best heuristic value for ff: 19
g=27, 344 evaluated, 341 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 8
New best heuristic value for ff: 18
g=28, 346 evaluated, 343 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 7
New best heuristic value for ff: 15
g=29, 348 evaluated, 345 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 6
g=30, 350 evaluated, 347 expanded, 20 reopened
New best heuristic value for ff: 14
g=31, 351 evaluated, 348 expanded, 20 reopened
New best heuristic value for ff: 12
g=32, 352 evaluated, 349 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 5
New best heuristic value for ff: 10
g=31, 356 evaluated, 353 expanded, 20 reopened
New best heuristic value for ff: 9
g=32, 357 evaluated, 354 expanded, 20 reopened
New best heuristic value for lmcount(lmg, admissible = true): 4
New best heuristic value for ff: 7
g=79, 5943 evaluated, 5872 expanded, 773 reopened
New best heuristic value for ff: 6
g=71, 7410 evaluated, 7300 expanded, 909 reopened
Peak memory: 190748 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 495.9399999999998
config 34: relative time 87, remaining 353
g bound: 286
next plan number: 7
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=false,no_orders=true,m=1)', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lmg,admissible=true)', '--search', 'lazy(alt([single(hlm),single(hlm,pref_only=true),single(hcg),single(hcg,pref_only=true)],boost=0),preferred=[hcg],reopen_closed=false,cost_type=one,bound=286)', '--internal-previous-portfolio-plans', '6', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 122.22883852691214s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=false,no_orders=true,m=1)' --evaluator 'hcg=cg(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lmg,admissible=true)' --search 'lazy(alt([single(hlm),single(hlm,pref_only=true),single(hcg),single(hcg,pref_only=true)],boost=0),preferred=[hcg],reopen_closed=false,cost_type=one,bound=286)' --internal-previous-portfolio-plans 6 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Initializing landmarks count heuristic...
Initializing Exploration...
h^m landmarks m=1
Using 151 P^m fluents.
Level 1 completed.
Level 2 completed.
Level 3 completed.
Level 4 completed.
Level 5 completed.
Level 6 completed.
Level 7 completed.
Level 8 completed.
Level 9 completed.
Level 10 completed.
Level 11 completed.
Level 12 completed.
Level 13 completed.
Level 14 completed.
Level 15 completed.
Level 16 completed.
Level 17 completed.
Level 18 completed.
Level 19 completed.
Level 20 completed.
Level 21 completed.
Level 22 completed.
Level 23 completed.
Level 24 completed.
Level 25 completed.
Level 26 completed.
h^m landmarks computed.
Removing all orderings.
Removed 0 reasonable or obedient reasonable orders
Calculating achievers.
Landmarks generation time: 0.000983196s
Discovered 56 landmarks, of which 0 are disjunctive and 0 are conjunctive.
0 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 286
22 initial landmarks, 6 goal landmarks
New best heuristic value for cg(transform = adapt_costs(one)): 52
New best heuristic value for lmcount(lmg, admissible = true): 23
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 52
Initial heuristic value for lmcount(lmg, admissible = true): 23
New best heuristic value for cg(transform = adapt_costs(one)): 46
New best heuristic value for lmcount(lmg, admissible = true): 22
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true): 20
g=3, 4 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 40
g=2, 5 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 34
g=3, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 28
g=4, 10 evaluated, 9 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 22
g=5, 12 evaluated, 11 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 16
g=6, 14 evaluated, 13 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 15
g=8, 17 evaluated, 16 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=9, 18 evaluated, 17 expanded
New best heuristic value for lmcount(lmg, admissible = true): 19
g=9, 35 evaluated, 34 expanded
New best heuristic value for lmcount(lmg, admissible = true): 18
g=22, 66177 evaluated, 66176 expanded
New best heuristic value for lmcount(lmg, admissible = true): 17
g=23, 66181 evaluated, 66180 expanded
New best heuristic value for lmcount(lmg, admissible = true): 16
g=24, 66182 evaluated, 66181 expanded
New best heuristic value for lmcount(lmg, admissible = true): 15
g=25, 66184 evaluated, 66183 expanded
New best heuristic value for lmcount(lmg, admissible = true): 14
g=26, 66186 evaluated, 66185 expanded
New best heuristic value for lmcount(lmg, admissible = true): 13
g=27, 66188 evaluated, 66187 expanded
New best heuristic value for lmcount(lmg, admissible = true): 12
g=28, 66190 evaluated, 66189 expanded
New best heuristic value for lmcount(lmg, admissible = true): 11
g=29, 66192 evaluated, 66191 expanded
New best heuristic value for lmcount(lmg, admissible = true): 10
g=30, 66194 evaluated, 66193 expanded
New best heuristic value for lmcount(lmg, admissible = true): 9
g=31, 66196 evaluated, 66195 expanded
New best heuristic value for lmcount(lmg, admissible = true): 8
g=32, 66198 evaluated, 66197 expanded
New best heuristic value for lmcount(lmg, admissible = true): 7
g=33, 66200 evaluated, 66199 expanded
New best heuristic value for lmcount(lmg, admissible = true): 6
g=34, 66202 evaluated, 66201 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 11
New best heuristic value for lmcount(lmg, admissible = true): 5
g=35, 66203 evaluated, 66202 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 8
New best heuristic value for lmcount(lmg, admissible = true): 4
g=84, 102553 evaluated, 102552 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 6
New best heuristic value for lmcount(lmg, admissible = true): 3
g=135, 132717 evaluated, 132716 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 5
g=136, 132718 evaluated, 132717 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 4
New best heuristic value for lmcount(lmg, admissible = true): 2
g=165, 3253363 evaluated, 3253362 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 2
New best heuristic value for lmcount(lmg, admissible = true): 1
g=216, 3261722 evaluated, 3261721 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 1
g=217, 3261723 evaluated, 3261722 expanded
Solution found!
Actual search time: 52.7057s
walk-down p8-12 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
push-left p4-9 p4-8 p4-7 (1)
push-left p4-8 p4-7 p4-6 (1)
push-down p4-7 p3-7 p2-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-down p7-18 p6-18 (1)
walk-right p6-18 p6-19 (1)
push-up p6-19 p7-19 p8-19 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-left p7-9 p7-8 (1)
walk-left p7-8 p7-7 (1)
walk-left p7-7 p7-6 (1)
walk-left p7-6 p7-5 (1)
walk-left p7-5 p7-4 (1)
walk-left p7-4 p7-3 (1)
walk-down p7-3 p6-3 (1)
walk-left p6-3 p6-2 (1)
walk-left p6-2 p6-1 (1)
walk-up p6-1 p7-1 (1)
push-right p7-1 p7-2 p7-3 (1)
push-right p7-2 p7-3 p7-4 (1)
push-right p7-3 p7-4 p7-5 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-up p7-18 p8-18 (1)
push-right p8-18 p8-19 p8-20 (1)
push-down p8-19 p7-19 p6-19 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-left p3-6 p3-5 (1)
walk-up p3-5 p4-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
push-right p7-18 p7-19 p7-20 (1)
walk-left p7-19 p7-18 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
push-right p7-17 p7-18 p7-19 (1)
walk-left p7-18 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
walk-left p4-8 p4-7 (1)
walk-down p4-7 p3-7 (1)
walk-left p3-7 p3-6 (1)
walk-down p3-6 p2-6 (1)
walk-down p2-6 p1-6 (1)
walk-right p1-6 p1-7 (1)
push-up p1-7 p2-7 p3-7 (1)
push-up p2-7 p3-7 p4-7 (1)
walk-down p3-7 p2-7 (1)
walk-down p2-7 p1-7 (1)
walk-left p1-7 p1-6 (1)
walk-left p1-6 p1-5 (1)
push-up p1-5 p2-5 p3-5 (1)
push-up p2-5 p3-5 p4-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-down p7-17 p6-17 (1)
walk-right p6-17 p6-18 (1)
push-right p6-18 p6-19 p6-20 (1)
walk-left p6-19 p6-18 (1)
walk-left p6-18 p6-17 (1)
walk-up p6-17 p7-17 (1)
walk-up p7-17 p8-17 (1)
walk-right p8-17 p8-18 (1)
push-down p8-18 p7-18 p6-18 (1)
walk-up p7-18 p8-18 (1)
walk-left p8-18 p8-17 (1)
walk-down p8-17 p7-17 (1)
walk-left p7-17 p7-16 (1)
walk-left p7-16 p7-15 (1)
walk-left p7-15 p7-14 (1)
walk-left p7-14 p7-13 (1)
walk-left p7-13 p7-12 (1)
walk-left p7-12 p7-11 (1)
walk-left p7-11 p7-10 (1)
walk-left p7-10 p7-9 (1)
walk-down p7-9 p6-9 (1)
walk-down p6-9 p5-9 (1)
walk-down p5-9 p4-9 (1)
walk-left p4-9 p4-8 (1)
push-left p4-8 p4-7 p4-6 (1)
push-left p4-7 p4-6 p4-5 (1)
walk-down p4-6 p3-6 (1)
walk-left p3-6 p3-5 (1)
push-up p3-5 p4-5 p5-5 (1)
push-up p4-5 p5-5 p6-5 (1)
push-up p5-5 p6-5 p7-5 (1)
walk-down p6-5 p5-5 (1)
walk-down p5-5 p4-5 (1)
walk-left p4-5 p4-4 (1)
walk-left p4-4 p4-3 (1)
walk-up p4-3 p5-3 (1)
walk-up p5-3 p6-3 (1)
walk-up p6-3 p7-3 (1)
walk-right p7-3 p7-4 (1)
push-right p7-4 p7-5 p7-6 (1)
push-right p7-5 p7-6 p7-7 (1)
push-right p7-6 p7-7 p7-8 (1)
push-right p7-7 p7-8 p7-9 (1)
push-right p7-8 p7-9 p7-10 (1)
push-right p7-9 p7-10 p7-11 (1)
push-right p7-10 p7-11 p7-12 (1)
push-right p7-11 p7-12 p7-13 (1)
push-right p7-12 p7-13 p7-14 (1)
push-right p7-13 p7-14 p7-15 (1)
push-right p7-14 p7-15 p7-16 (1)
push-right p7-15 p7-16 p7-17 (1)
push-right p7-16 p7-17 p7-18 (1)
walk-down p7-17 p6-17 (1)
push-right p6-17 p6-18 p6-19 (1)
push-up p6-18 p7-18 p8-18 (1)
walk-left p7-18 p7-17 (1)
walk-up p7-17 p8-17 (1)
push-right p8-17 p8-18 p8-19 (1)
Plan length: 272 step(s).
Plan cost: 272
Expanded 3555695 state(s).
Reopened 0 state(s).
Evaluated 3555696 state(s).
Evaluations: 7111392
Generated 8545213 state(s).
Dead ends: 0 state(s).
Number of registered states: 3555696
Int hash set load factor: 3555696/8388608 = 0.423872
Int hash set resizes: 23
Search time: 52.7057s
Total time: 52.7117s
Solution found.
Peak memory: 258488 KB
exitcode: 0

plan manager: found new plan with cost 272
remaining time: 443.2099999999998
config 35: relative time 30, remaining 266
g bound: 272
next plan number: 8
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_exhaust(reasonable_orders=false,only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=false)', '--evaluator', 'hff=ff(transform=adapt_costs(plusone))', '--evaluator', 'hhmax=hmax()', '--evaluator', 'hblind=blind()', '--evaluator', 'hlm=lmcount(lmg,admissible=true,pref=false,transform=adapt_costs(one))', '--search', 'lazy(alt([type_based([g()]),single(sum([g(),weight(hblind,3)])),single(sum([g(),weight(hblind,3)]),pref_only=true),single(sum([g(),weight(hff,3)])),single(sum([g(),weight(hff,3)]),pref_only=true),single(sum([g(),weight(hlm,3)])),single(sum([g(),weight(hlm,3)]),pref_only=true),single(sum([g(),weight(hhmax,3)])),single(sum([g(),weight(hhmax,3)]),pref_only=true)],boost=3052),preferred=[hff],reopen_closed=true,bound=272)', '--internal-previous-portfolio-plans', '7', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 49.986090225563885s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_exhaust(reasonable_orders=false,only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=false)' --evaluator 'hff=ff(transform=adapt_costs(plusone))' --evaluator 'hhmax=hmax()' --evaluator 'hblind=blind()' --evaluator 'hlm=lmcount(lmg,admissible=true,pref=false,transform=adapt_costs(one))' --search 'lazy(alt([type_based([g()]),single(sum([g(),weight(hblind,3)])),single(sum([g(),weight(hblind,3)]),pref_only=true),single(sum([g(),weight(hff,3)])),single(sum([g(),weight(hff,3)]),pref_only=true),single(sum([g(),weight(hlm,3)])),single(sum([g(),weight(hlm,3)]),pref_only=true),single(sum([g(),weight(hhmax,3)])),single(sum([g(),weight(hhmax,3)]),pref_only=true)],boost=3052),preferred=[hff],reopen_closed=true,bound=272)' --internal-previous-portfolio-plans 7 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.00100824s
Initializing HSP max heuristic...
Initializing blind search heuristic...
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks by testing all facts with RPG method
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.0049697s
Discovered 82 landmarks, of which 0 are disjunctive and 0 are conjunctive.
0 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 272
46 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 23
New best heuristic value for hmax: 25
New best heuristic value for blind: 1
New best heuristic value for ff(transform = adapt_costs(plusone)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 23
Initial heuristic value for hmax: 25
Initial heuristic value for blind: 1
Initial heuristic value for ff(transform = adapt_costs(plusone)): 40
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 22
New best heuristic value for hmax: 24
New best heuristic value for ff(transform = adapt_costs(plusone)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 21
New best heuristic value for hmax: 23
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 20
New best heuristic value for hmax: 22
g=3, 4 evaluated, 3 expanded
New best heuristic value for hmax: 21
g=4, 5 evaluated, 4 expanded
New best heuristic value for hmax: 20
g=5, 7 evaluated, 6 expanded
New best heuristic value for hmax: 19
g=6, 8 evaluated, 7 expanded
New best heuristic value for hmax: 18
g=7, 9 evaluated, 8 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 19
g=9, 12 evaluated, 11 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 38
g=11, 40 evaluated, 38 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 18
New best heuristic value for hmax: 17
g=22, 2887 evaluated, 2855 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 17
New best heuristic value for hmax: 16
New best heuristic value for ff(transform = adapt_costs(plusone)): 35
g=23, 2889 evaluated, 2857 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 16
New best heuristic value for hmax: 15
New best heuristic value for ff(transform = adapt_costs(plusone)): 34
g=24, 2890 evaluated, 2858 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 15
New best heuristic value for hmax: 14
New best heuristic value for ff(transform = adapt_costs(plusone)): 30
g=25, 2891 evaluated, 2859 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 14
New best heuristic value for hmax: 13
g=26, 2893 evaluated, 2861 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 13
New best heuristic value for hmax: 12
New best heuristic value for ff(transform = adapt_costs(plusone)): 28
g=27, 2894 evaluated, 2862 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 12
New best heuristic value for hmax: 11
New best heuristic value for ff(transform = adapt_costs(plusone)): 25
g=28, 2895 evaluated, 2863 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 11
New best heuristic value for hmax: 10
New best heuristic value for ff(transform = adapt_costs(plusone)): 23
g=29, 2897 evaluated, 2865 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 10
New best heuristic value for hmax: 9
New best heuristic value for ff(transform = adapt_costs(plusone)): 22
g=30, 2898 evaluated, 2866 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 9
New best heuristic value for hmax: 8
New best heuristic value for ff(transform = adapt_costs(plusone)): 19
g=31, 2899 evaluated, 2867 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 8
New best heuristic value for hmax: 7
New best heuristic value for ff(transform = adapt_costs(plusone)): 18
g=32, 2900 evaluated, 2868 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 7
New best heuristic value for hmax: 6
New best heuristic value for ff(transform = adapt_costs(plusone)): 15
g=33, 2901 evaluated, 2869 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 6
New best heuristic value for hmax: 5
g=34, 2902 evaluated, 2870 expanded, 112 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 14
g=35, 2903 evaluated, 2871 expanded, 112 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 12
g=36, 2904 evaluated, 2872 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 5
New best heuristic value for hmax: 4
New best heuristic value for ff(transform = adapt_costs(plusone)): 10
g=35, 2906 evaluated, 2874 expanded, 112 reopened
New best heuristic value for lmcount(lmg, admissible = true, pref = false, transform = adapt_costs(one)): 4
g=145, 30490 evaluated, 30156 expanded, 1075 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 8
g=146, 30491 evaluated, 30157 expanded, 1075 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 7
g=147, 30492 evaluated, 30158 expanded, 1075 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 6
g=149, 31754 evaluated, 31390 expanded, 1125 reopened
New best heuristic value for hmax: 3
g=150, 31755 evaluated, 31391 expanded, 1125 reopened
Peak memory: 204516 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 394.3599999999999
config 36: relative time 56, remaining 236
g bound: 272
next plan number: 8
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hff=ff(transform=adapt_costs(plusone))', '--search', 'lazy(alt([tiebreaking([sum([g(),hff]),hff]),tiebreaking([sum([g(),hff]),hff],pref_only=true)],boost=432),preferred=[hff],reopen_closed=true,cost_type=one,bound=272)', '--internal-previous-portfolio-plans', '7', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 93.57694915254235s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(plusone))' --search 'lazy(alt([tiebreaking([sum([g(),hff]),hff]),tiebreaking([sum([g(),hff]),hff],pref_only=true)],boost=432),preferred=[hff],reopen_closed=true,cost_type=one,bound=272)' --internal-previous-portfolio-plans 7 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.000970961s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 272
New best heuristic value for ff(transform = adapt_costs(plusone)): 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff(transform = adapt_costs(plusone)): 40
New best heuristic value for ff(transform = adapt_costs(plusone)): 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 38
g=9, 21 evaluated, 20 expanded
New best heuristic value for ff(transform = adapt_costs(plusone)): 32
g=24, 651 evaluated, 645 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 31
g=25, 652 evaluated, 646 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 30
g=26, 653 evaluated, 647 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 27
g=27, 654 evaluated, 648 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 26
g=28, 655 evaluated, 649 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 23
g=29, 656 evaluated, 650 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 22
g=30, 657 evaluated, 651 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 19
g=31, 658 evaluated, 652 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 18
g=32, 659 evaluated, 653 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 15
g=33, 660 evaluated, 654 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 14
g=35, 662 evaluated, 656 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 12
g=36, 663 evaluated, 657 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 10
g=35, 668 evaluated, 662 expanded, 7 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 9
g=32, 3492 evaluated, 3463 expanded, 31 reopened
New best heuristic value for ff(transform = adapt_costs(plusone)): 6
g=72, 353023 evaluated, 351878 expanded, 44375 reopened
Peak memory: 245612 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 301.6299999999999
config 37: relative time 19, remaining 180
g bound: 272
next plan number: 8
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_merged([lm_rhw(),lm_hm(m=1)],only_causal_landmarks=false,disjunctive_landmarks=false,conjunctive_landmarks=true,no_orders=false)', '--evaluator', 'hff=ff()', '--evaluator', 'hlm=lmcount(lmg,admissible=true)', '--search', 'lazy(alt([single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true),single(sum([g(),weight(hlm,10)])),single(sum([g(),weight(hlm,10)]),pref_only=true)],boost=500),preferred=[hff],reopen_closed=false,cost_type=plusone,bound=272)', '--internal-previous-portfolio-plans', '7', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 31.83872222222221s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_merged([lm_rhw(),lm_hm(m=1)],only_causal_landmarks=false,disjunctive_landmarks=false,conjunctive_landmarks=true,no_orders=false)' --evaluator 'hff=ff()' --evaluator 'hlm=lmcount(lmg,admissible=true)' --search 'lazy(alt([single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true),single(sum([g(),weight(hlm,10)])),single(sum([g(),weight(hlm,10)]),pref_only=true)],boost=500),preferred=[hff],reopen_closed=false,cost_type=plusone,bound=272)' --internal-previous-portfolio-plans 7 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0.00100746s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing landmarks count heuristic...
Initializing Exploration...
Merging 2 landmark graphs
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.005481s
Discovered 59 landmarks, of which 4 are disjunctive and 0 are conjunctive.
437 edges
Initializing Exploration...
h^m landmarks m=1
Using 151 P^m fluents.
Level 1 completed.
Level 2 completed.
Level 3 completed.
Level 4 completed.
Level 5 completed.
Level 6 completed.
Level 7 completed.
Level 8 completed.
Level 9 completed.
Level 10 completed.
Level 11 completed.
Level 12 completed.
Level 13 completed.
Level 14 completed.
Level 15 completed.
Level 16 completed.
Level 17 completed.
Level 18 completed.
Level 19 completed.
Level 20 completed.
Level 21 completed.
Level 22 completed.
Level 23 completed.
Level 24 completed.
Level 25 completed.
Level 26 completed.
h^m landmarks computed.
Removed 0 reasonable or obedient reasonable orders
Calculating achievers.
Landmarks generation time: 0.00200495s
Discovered 56 landmarks, of which 0 are disjunctive and 0 are conjunctive.
171 edges
Adding simple landmarks
Adding disjunctive landmarks
Adding orderings
Discarding 4 disjunctive landmarks
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00984229s
Discovered 56 landmarks, of which 0 are disjunctive and 0 are conjunctive.
477 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 272
22 initial landmarks, 6 goal landmarks
New best heuristic value for ff: 40
New best heuristic value for lmcount(lmg, admissible = true): 23
g=0, 1 evaluated, 0 expanded
Initial heuristic value for ff: 40
Initial heuristic value for lmcount(lmg, admissible = true): 23
New best heuristic value for ff: 39
New best heuristic value for lmcount(lmg, admissible = true): 22
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true): 20
g=3, 4 evaluated, 3 expanded
New best heuristic value for ff: 38
g=13, 43 evaluated, 41 expanded
New best heuristic value for lmcount(lmg, admissible = true): 19
g=17, 1430 evaluated, 1416 expanded
New best heuristic value for lmcount(lmg, admissible = true): 18
g=18, 1431 evaluated, 1417 expanded
New best heuristic value for ff: 35
New best heuristic value for lmcount(lmg, admissible = true): 17
g=19, 1432 evaluated, 1418 expanded
New best heuristic value for ff: 34
New best heuristic value for lmcount(lmg, admissible = true): 16
g=20, 1433 evaluated, 1419 expanded
New best heuristic value for ff: 30
New best heuristic value for lmcount(lmg, admissible = true): 15
g=21, 1434 evaluated, 1420 expanded
New best heuristic value for ff: 27
New best heuristic value for lmcount(lmg, admissible = true): 14
g=22, 1435 evaluated, 1421 expanded
New best heuristic value for lmcount(lmg, admissible = true): 13
g=23, 1436 evaluated, 1422 expanded
New best heuristic value for ff: 25
New best heuristic value for lmcount(lmg, admissible = true): 12
g=24, 1437 evaluated, 1423 expanded
New best heuristic value for ff: 22
New best heuristic value for lmcount(lmg, admissible = true): 11
g=25, 1438 evaluated, 1424 expanded
New best heuristic value for lmcount(lmg, admissible = true): 10
g=26, 1439 evaluated, 1425 expanded
New best heuristic value for ff: 19
New best heuristic value for lmcount(lmg, admissible = true): 9
g=27, 1440 evaluated, 1426 expanded
New best heuristic value for ff: 18
New best heuristic value for lmcount(lmg, admissible = true): 8
g=28, 1441 evaluated, 1427 expanded
New best heuristic value for ff: 15
New best heuristic value for lmcount(lmg, admissible = true): 7
g=29, 1442 evaluated, 1428 expanded
New best heuristic value for lmcount(lmg, admissible = true): 6
g=30, 1443 evaluated, 1429 expanded
New best heuristic value for ff: 14
g=31, 1444 evaluated, 1430 expanded
New best heuristic value for ff: 12
g=32, 1445 evaluated, 1431 expanded
New best heuristic value for ff: 10
New best heuristic value for lmcount(lmg, admissible = true): 5
g=31, 1447 evaluated, 1433 expanded
New best heuristic value for ff: 9
g=32, 7290 evaluated, 7186 expanded
New best heuristic value for ff: 7
New best heuristic value for lmcount(lmg, admissible = true): 4
g=79, 9019 evaluated, 8904 expanded
New best heuristic value for ff: 6
g=74, 27720 evaluated, 27477 expanded
Peak memory: 133796 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 270.6899999999998
config 38: relative time 56, remaining 161
g bound: 272
next plan number: 8
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_exhaust(reasonable_orders=false,only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=false)', '--evaluator', 'hgoalcount=goalcount(transform=adapt_costs(plusone))', '--evaluator', 'hlm=lmcount(lmg,admissible=false)', '--evaluator', 'hff=ff()', '--evaluator', 'hblind=blind()', '--search', 'eager(alt([tiebreaking([sum([weight(g(),8),weight(hblind,9)]),hblind]),tiebreaking([sum([weight(g(),8),weight(hlm,9)]),hlm]),tiebreaking([sum([weight(g(),8),weight(hff,9)]),hff]),tiebreaking([sum([weight(g(),8),weight(hgoalcount,9)]),hgoalcount])],boost=2005),preferred=[],reopen_closed=true,bound=272)', '--internal-previous-portfolio-plans', '7', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 94.15304347826081s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_exhaust(reasonable_orders=false,only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=false)' --evaluator 'hgoalcount=goalcount(transform=adapt_costs(plusone))' --evaluator 'hlm=lmcount(lmg,admissible=false)' --evaluator 'hff=ff()' --evaluator 'hblind=blind()' --search 'eager(alt([tiebreaking([sum([weight(g(),8),weight(hblind,9)]),hblind]),tiebreaking([sum([weight(g(),8),weight(hlm,9)]),hlm]),tiebreaking([sum([weight(g(),8),weight(hff,9)]),hff]),tiebreaking([sum([weight(g(),8),weight(hgoalcount,9)]),hgoalcount])],boost=2005),preferred=[],reopen_closed=true,bound=272)' --internal-previous-portfolio-plans 7 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing goal count heuristic...
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks by testing all facts with RPG method
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00399524s
Discovered 82 landmarks, of which 0 are disjunctive and 0 are conjunctive.
0 edges
Simplifying 394 unary operators... done! [394 unary operators]
time to simplify: 0s
Initializing additive heuristic...
Initializing FF heuristic...
Initializing blind search heuristic...
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000992625s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search with reopening closed nodes, (real) bound = 272
46 initial landmarks, 6 goal landmarks
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 6
New best heuristic value for lmcount(lmg, admissible = false): 36
New best heuristic value for blind: 1
New best heuristic value for ff: 40
g=0, 1 evaluated, 0 expanded
Initial heuristic value for goalcount(transform = adapt_costs(plusone)): 6
Initial heuristic value for lmcount(lmg, admissible = false): 36
Initial heuristic value for blind: 1
Initial heuristic value for ff: 40
pruning method: none
New best heuristic value for lmcount(lmg, admissible = false): 35
New best heuristic value for ff: 39
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = false): 34
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = false): 33
g=3, 5 evaluated, 3 expanded
New best heuristic value for lmcount(lmg, admissible = false): 32
g=4, 6 evaluated, 4 expanded
New best heuristic value for lmcount(lmg, admissible = false): 31
g=5, 9 evaluated, 6 expanded
New best heuristic value for lmcount(lmg, admissible = false): 30
g=6, 11 evaluated, 7 expanded
New best heuristic value for lmcount(lmg, admissible = false): 29
g=7, 13 evaluated, 9 expanded
New best heuristic value for lmcount(lmg, admissible = false): 27
g=8, 14 evaluated, 10 expanded
New best heuristic value for lmcount(lmg, admissible = false): 26
g=9, 17 evaluated, 12 expanded
New best heuristic value for ff: 38
g=7, 32 evaluated, 22 expanded
New best heuristic value for lmcount(lmg, admissible = false): 25
g=17, 167 evaluated, 133 expanded
New best heuristic value for lmcount(lmg, admissible = false): 24
g=18, 168 evaluated, 134 expanded
New best heuristic value for lmcount(lmg, admissible = false): 23
g=19, 169 evaluated, 135 expanded
New best heuristic value for lmcount(lmg, admissible = false): 22
g=20, 170 evaluated, 136 expanded
New best heuristic value for lmcount(lmg, admissible = false): 21
g=21, 173 evaluated, 137 expanded
New best heuristic value for lmcount(lmg, admissible = false): 20
g=22, 178 evaluated, 140 expanded
New best heuristic value for ff: 37
g=19, 204 evaluated, 158 expanded
New best heuristic value for ff: 35
g=19, 206 evaluated, 158 expanded
New best heuristic value for ff: 34
g=20, 213 evaluated, 161 expanded
New best heuristic value for ff: 30
g=21, 219 evaluated, 164 expanded
New best heuristic value for ff: 27
g=22, 223 evaluated, 166 expanded
New best heuristic value for lmcount(lmg, admissible = false): 19
New best heuristic value for ff: 25
g=24, 229 evaluated, 169 expanded
New best heuristic value for lmcount(lmg, admissible = false): 18
New best heuristic value for ff: 22
g=25, 232 evaluated, 170 expanded
New best heuristic value for lmcount(lmg, admissible = false): 16
g=26, 234 evaluated, 171 expanded
New best heuristic value for lmcount(lmg, admissible = false): 14
New best heuristic value for ff: 19
g=27, 237 evaluated, 172 expanded
New best heuristic value for lmcount(lmg, admissible = false): 12
New best heuristic value for ff: 18
g=28, 239 evaluated, 173 expanded
New best heuristic value for lmcount(lmg, admissible = false): 10
New best heuristic value for ff: 15
g=29, 241 evaluated, 174 expanded
New best heuristic value for lmcount(lmg, admissible = false): 8
g=30, 243 evaluated, 175 expanded
New best heuristic value for ff: 14
g=31, 244 evaluated, 176 expanded
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 5
New best heuristic value for lmcount(lmg, admissible = false): 6
New best heuristic value for ff: 10
g=31, 247 evaluated, 176 expanded
New best heuristic value for ff: 9
g=32, 248 evaluated, 177 expanded
New best heuristic value for lmcount(lmg, admissible = false): 5
g=32, 251 evaluated, 177 expanded
New best heuristic value for goalcount(transform = adapt_costs(plusone)): 4
New best heuristic value for ff: 6
g=72, 473600 evaluated, 403127 expanded, 2424 reopened
New best heuristic value for lmcount(lmg, admissible = false): 4
g=76, 602672 evaluated, 517806 expanded, 3538 reopened
Peak memory: 322080 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 176.87999999999965
config 39: relative time 24, remaining 105
g bound: 272
next plan number: 8
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_zg(reasonable_orders=false,only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=true)', '--evaluator', 'hlm=lmcount(lmg,admissible=true,pref=false)', '--search', 'eager(single(sum([g(),weight(hlm,3)])),preferred=[],reopen_closed=true,cost_type=one,bound=272)', '--internal-previous-portfolio-plans', '7', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 40.429714285714205s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_zg(reasonable_orders=false,only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=true)' --evaluator 'hlm=lmcount(lmg,admissible=true,pref=false)' --search 'eager(single(sum([g(),weight(hlm,3)])),preferred=[],reopen_closed=true,cost_type=one,bound=272)' --internal-previous-portfolio-plans 7 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using Zhu/Givan label propagation
Removing all orderings.
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00996425s
Discovered 56 landmarks, of which 0 are disjunctive and 0 are conjunctive.
0 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search with reopening closed nodes, (real) bound = 272
22 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 23
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lmg, admissible = true, pref = false): 23
pruning method: none
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 22
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 20
g=3, 5 evaluated, 3 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 19
g=9, 22 evaluated, 17 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 18
g=18, 338 evaluated, 243 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 17
g=19, 342 evaluated, 244 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 16
g=20, 343 evaluated, 245 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 15
g=21, 346 evaluated, 246 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 14
g=22, 348 evaluated, 247 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 13
g=23, 350 evaluated, 248 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 12
g=24, 353 evaluated, 249 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 11
g=25, 356 evaluated, 250 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 10
g=26, 358 evaluated, 251 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 9
g=27, 361 evaluated, 252 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 8
g=28, 363 evaluated, 253 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 7
g=29, 365 evaluated, 254 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 6
g=30, 367 evaluated, 255 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 5
g=31, 371 evaluated, 256 expanded
New best heuristic value for lmcount(lmg, admissible = true, pref = false): 4
g=69, 394824 evaluated, 379286 expanded, 51845 reopened
Peak memory: 445632 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

plan manager: found new plan with cost 271
remaining time: 136.9799999999998
config 40: relative time 81, remaining 81
g bound: 271
next plan number: 9
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=true,m=1)', '--evaluator', 'hlm=lmcount(lmg,admissible=true)', '--search', 'eager(single(sum([g(),weight(hlm,5)])),preferred=[],reopen_closed=true,cost_type=one,bound=271)', '--internal-previous-portfolio-plans', '8', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 136.9799999999998s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=true,m=1)' --evaluator 'hlm=lmcount(lmg,admissible=true)' --search 'eager(single(sum([g(),weight(hlm,5)])),preferred=[],reopen_closed=true,cost_type=one,bound=271)' --internal-previous-portfolio-plans 8 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing landmarks count heuristic...
Initializing Exploration...
h^m landmarks m=1
Using 151 P^m fluents.
Level 1 completed.
Level 2 completed.
Level 3 completed.
Level 4 completed.
Level 5 completed.
Level 6 completed.
Level 7 completed.
Level 8 completed.
Level 9 completed.
Level 10 completed.
Level 11 completed.
Level 12 completed.
Level 13 completed.
Level 14 completed.
Level 15 completed.
Level 16 completed.
Level 17 completed.
Level 18 completed.
Level 19 completed.
Level 20 completed.
Level 21 completed.
Level 22 completed.
Level 23 completed.
Level 24 completed.
Level 25 completed.
Level 26 completed.
h^m landmarks computed.
Removing all orderings.
Removed 0 reasonable or obedient reasonable orders
Calculating achievers.
Landmarks generation time: 0.0010035s
Discovered 56 landmarks, of which 0 are disjunctive and 0 are conjunctive.
0 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting best first search with reopening closed nodes, (real) bound = 271
22 initial landmarks, 6 goal landmarks
New best heuristic value for lmcount(lmg, admissible = true): 23
g=0, 1 evaluated, 0 expanded
Initial heuristic value for lmcount(lmg, admissible = true): 23
pruning method: none
New best heuristic value for lmcount(lmg, admissible = true): 22
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true): 20
g=3, 5 evaluated, 3 expanded
New best heuristic value for lmcount(lmg, admissible = true): 19
g=9, 21 evaluated, 16 expanded
New best heuristic value for lmcount(lmg, admissible = true): 18
g=18, 410 evaluated, 300 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 17
g=19, 414 evaluated, 301 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 16
g=20, 415 evaluated, 302 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 15
g=21, 418 evaluated, 303 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 14
g=22, 420 evaluated, 304 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 13
g=23, 422 evaluated, 305 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 12
g=24, 425 evaluated, 306 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 11
g=25, 428 evaluated, 307 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 10
g=26, 430 evaluated, 308 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 9
g=27, 433 evaluated, 309 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 8
g=28, 435 evaluated, 310 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 7
g=29, 437 evaluated, 311 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 6
g=30, 439 evaluated, 312 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 5
g=31, 443 evaluated, 313 expanded, 1 reopened
New best heuristic value for lmcount(lmg, admissible = true): 4
g=69, 34721 evaluated, 30769 expanded, 1429 reopened
Peak memory: 925340 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

remaining time: 1.3199999999999363
config 0: relative time 26, remaining 366
g bound: 271
next plan number: 9
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy(alt([single(hff),single(hff,pref_only=true),single(hlm),single(hlm,pref_only=true),type_based([hff,g()])],boost=1000),preferred=[hff,hlm],cost_type=one,reopen_closed=false,randomize_successors=true,preferred_successors_first=false,bound=271)', '--internal-previous-portfolio-plans', '8', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 0.09377049180327417s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy(alt([single(hff),single(hff,pref_only=true),single(hlm),single(hlm,pref_only=true),type_based([hff,g()])],boost=1000),preferred=[hff,hlm],cost_type=one,reopen_closed=false,randomize_successors=true,preferred_successors_first=false,bound=271)' --internal-previous-portfolio-plans 8 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
exitcode: -24

remaining time: 1.3199999999999363
config 1: relative time 25, remaining 340
g bound: 271
next plan number: 9
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_rhw(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=true)', '--evaluator', 'hlm=lmcount(lmg,admissible=true,transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy(alt([type_based([g()]),single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true)],boost=0),preferred=[hlm],reopen_closed=false,cost_type=plusone,bound=271)', '--internal-previous-portfolio-plans', '8', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 0.09705882352940709s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_rhw(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=true,no_orders=true)' --evaluator 'hlm=lmcount(lmg,admissible=true,transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy(alt([type_based([g()]),single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true)],boost=0),preferred=[hlm],reopen_closed=false,cost_type=plusone,bound=271)' --internal-previous-portfolio-plans 8 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
exitcode: -24

remaining time: 1.3199999999999363
config 2: relative time 135, remaining 315
g bound: 271
next plan number: 9
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--evaluator', 'hff=ff(transform=adapt_costs(one))', '--search', 'lazy(alt([single(hff),single(hff,pref_only=true),single(hlm),single(hlm,pref_only=true)],boost=1000),preferred=[hff,hlm],cost_type=one,reopen_closed=false,randomize_successors=false,preferred_successors_first=true,bound=271)', '--internal-previous-portfolio-plans', '8', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 0.5657142857142584s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy(alt([single(hff),single(hff,pref_only=true),single(hlm),single(hlm,pref_only=true)],boost=1000),preferred=[hff,hlm],cost_type=one,reopen_closed=false,randomize_successors=false,preferred_successors_first=true,bound=271)' --internal-previous-portfolio-plans 8 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
exitcode: -24

remaining time: 1.3099999999999454
config 3: relative time 12, remaining 180
g bound: 271
next plan number: 9
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hadd=add(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--search', 'lazy(alt([type_based([g()]),single(hadd),single(hadd,pref_only=true),single(hlm),single(hlm,pref_only=true)]),preferred=[hadd,hlm],cost_type=one,bound=271)', '--internal-previous-portfolio-plans', '8', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 0.0873333333333297s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hadd=add(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --search 'lazy(alt([type_based([g()]),single(hadd),single(hadd,pref_only=true),single(hlm),single(hlm,pref_only=true)]),preferred=[hadd,hlm],cost_type=one,bound=271)' --internal-previous-portfolio-plans 8 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
exitcode: -24

remaining time: 1.2999999999999545
config 4: relative time 28, remaining 168
g bound: 271
next plan number: 9
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))', '--search', 'eager(alt([type_based([g()]),single(hcg),single(hcg,pref_only=true),single(hlm),single(hlm,pref_only=true)]),preferred=[hcg,hlm],cost_type=one,bound=271)', '--internal-previous-portfolio-plans', '8', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 0.2166666666666591s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --evaluator 'hcg=cg(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lm_rhw(reasonable_orders=true),transform=adapt_costs(one))' --search 'eager(alt([type_based([g()]),single(hcg),single(hcg,pref_only=true),single(hlm),single(hlm,pref_only=true)]),preferred=[hcg,hlm],cost_type=one,bound=271)' --internal-previous-portfolio-plans 8 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
exitcode: -24

remaining time: 1.2899999999999636
config 5: relative time 53, remaining 140
g bound: 271
next plan number: 9
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=false,no_orders=true,m=1)', '--evaluator', 'hlm=lmcount(lmg,admissible=true,transform=transform=adapt_costs(plusone))', '--evaluator', 'hff=ff(transform=adapt_costs(plusone))', '--search', 'lazy(alt([type_based([g()]),single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true)],boost=5000),preferred=[hlm],reopen_closed=false,bound=271)', '--internal-previous-portfolio-plans', '8', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 0.4883571428571291s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=false,no_orders=true,m=1)' --evaluator 'hlm=lmcount(lmg,admissible=true,transform=transform=adapt_costs(plusone))' --evaluator 'hff=ff(transform=adapt_costs(plusone))' --search 'lazy(alt([type_based([g()]),single(hlm),single(hlm,pref_only=true),single(hff),single(hff,pref_only=true)],boost=5000),preferred=[hlm],reopen_closed=false,bound=271)' --internal-previous-portfolio-plans 8 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
exitcode: -24

remaining time: 1.2899999999999636
config 6: relative time 87, remaining 87
g bound: 271
next plan number: 9
args: ['/home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward', '--landmarks', 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=false,no_orders=true,m=1)', '--evaluator', 'hcg=cg(transform=adapt_costs(one))', '--evaluator', 'hlm=lmcount(lmg,admissible=true)', '--search', 'lazy(alt([single(hlm),single(hlm,pref_only=true),single(hcg),single(hcg,pref_only=true)],boost=0),preferred=[hcg],reopen_closed=false,cost_type=one,bound=271)', '--internal-previous-portfolio-plans', '8', '--internal-plan-file', 'sas_plan']
INFO     search stdin: plans/seq-sat-fdss-2018.sas
INFO     search time limit: 1.2899999999999636s
INFO     search memory limit: None
INFO     search command line string: /home/slarty/school/umi/ni-umi-2020-saframa6_sokoban/downward/builds/release/bin/downward --landmarks 'lmg=lm_hm(only_causal_landmarks=false,disjunctive_landmarks=true,conjunctive_landmarks=false,no_orders=true,m=1)' --evaluator 'hcg=cg(transform=adapt_costs(one))' --evaluator 'hlm=lmcount(lmg,admissible=true)' --search 'lazy(alt([single(hlm),single(hlm,pref_only=true),single(hcg),single(hcg,pref_only=true)],boost=0),preferred=[hcg],reopen_closed=false,cost_type=one,bound=271)' --internal-previous-portfolio-plans 8 --internal-plan-file sas_plan < plans/seq-sat-fdss-2018.sas
reading input...
done reading input!
Initializing causal graph heuristic...
Initializing heuristic cache... building causal graph...done! [t=0s]
done!
Initializing landmarks count heuristic...
Initializing Exploration...
h^m landmarks m=1
Using 151 P^m fluents.
Level 1 completed.
Level 2 completed.
Level 3 completed.
Level 4 completed.
Level 5 completed.
Level 6 completed.
Level 7 completed.
Level 8 completed.
Level 9 completed.
Level 10 completed.
Level 11 completed.
Level 12 completed.
Level 13 completed.
Level 14 completed.
Level 15 completed.
Level 16 completed.
Level 17 completed.
Level 18 completed.
Level 19 completed.
Level 20 completed.
Level 21 completed.
Level 22 completed.
Level 23 completed.
Level 24 completed.
Level 25 completed.
Level 26 completed.
h^m landmarks computed.
Removing all orderings.
Removed 0 reasonable or obedient reasonable orders
Calculating achievers.
Landmarks generation time: 0.000978543s
Discovered 56 landmarks, of which 0 are disjunctive and 0 are conjunctive.
0 edges
Building successor generator...done!
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0s
Variables: 46
FactPairs: 151
Bytes per state: 8
Conducting lazy best first search, (real) bound = 271
22 initial landmarks, 6 goal landmarks
New best heuristic value for cg(transform = adapt_costs(one)): 52
New best heuristic value for lmcount(lmg, admissible = true): 23
g=0, 1 evaluated, 0 expanded
Initial heuristic value for cg(transform = adapt_costs(one)): 52
Initial heuristic value for lmcount(lmg, admissible = true): 23
New best heuristic value for cg(transform = adapt_costs(one)): 46
New best heuristic value for lmcount(lmg, admissible = true): 22
g=1, 2 evaluated, 1 expanded
New best heuristic value for lmcount(lmg, admissible = true): 21
g=2, 3 evaluated, 2 expanded
New best heuristic value for lmcount(lmg, admissible = true): 20
g=3, 4 evaluated, 3 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 40
g=2, 5 evaluated, 4 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 34
g=3, 7 evaluated, 6 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 28
g=4, 10 evaluated, 9 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 22
g=5, 12 evaluated, 11 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 16
g=6, 14 evaluated, 13 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 15
g=8, 17 evaluated, 16 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 14
g=9, 18 evaluated, 17 expanded
New best heuristic value for lmcount(lmg, admissible = true): 19
g=9, 35 evaluated, 34 expanded
New best heuristic value for lmcount(lmg, admissible = true): 18
g=22, 66177 evaluated, 66176 expanded
New best heuristic value for lmcount(lmg, admissible = true): 17
g=23, 66181 evaluated, 66180 expanded
New best heuristic value for lmcount(lmg, admissible = true): 16
g=24, 66182 evaluated, 66181 expanded
New best heuristic value for lmcount(lmg, admissible = true): 15
g=25, 66184 evaluated, 66183 expanded
New best heuristic value for lmcount(lmg, admissible = true): 14
g=26, 66186 evaluated, 66185 expanded
New best heuristic value for lmcount(lmg, admissible = true): 13
g=27, 66188 evaluated, 66187 expanded
New best heuristic value for lmcount(lmg, admissible = true): 12
g=28, 66190 evaluated, 66189 expanded
New best heuristic value for lmcount(lmg, admissible = true): 11
g=29, 66192 evaluated, 66191 expanded
New best heuristic value for lmcount(lmg, admissible = true): 10
g=30, 66194 evaluated, 66193 expanded
New best heuristic value for lmcount(lmg, admissible = true): 9
g=31, 66196 evaluated, 66195 expanded
New best heuristic value for lmcount(lmg, admissible = true): 8
g=32, 66198 evaluated, 66197 expanded
New best heuristic value for lmcount(lmg, admissible = true): 7
g=33, 66200 evaluated, 66199 expanded
New best heuristic value for lmcount(lmg, admissible = true): 6
g=34, 66202 evaluated, 66201 expanded
New best heuristic value for cg(transform = adapt_costs(one)): 11
New best heuristic value for lmcount(lmg, admissible = true): 5
g=35, 66203 evaluated, 66202 expanded
Peak memory: 17848 KB
caught signal 24 -- exiting
Time limit has been reached.
exitcode: 23

search exit code: 2

